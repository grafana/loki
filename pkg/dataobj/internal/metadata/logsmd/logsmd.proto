// logsmd.proto holds metadata for the logs section of a data object. The logs
// section contains a series of logs records across multiple streams.
syntax = "proto3";

package dataobj.metadata.logs.v1;

import "pkg/dataobj/internal/metadata/datasetmd/datasetmd.proto";

option go_package = "github.com/grafana/loki/v3/pkg/dataobj/internal/metadata/logsmd";

// Metadata describes the metadata for the logs section.
message Metadata {
  // Columns within the logs.
  repeated ColumnDesc columns = 1;
}

// ColumnDesc describes an individual column within the logs table.
message ColumnDesc {
  // Information about the column.
  dataobj.metadata.dataset.v1.ColumnInfo info = 1;

  // Column type.
  ColumnType type = 2;
}

// ColumnType represents the valid types that a logs column can have.
enum ColumnType {
  // Invalid column type.
  COLUMN_TYPE_UNSPECIFIED = 0;

  // COLUMN_TYPE_STREAM_ID is a column containing the stream the log record
  // belongs to.
  COLUMN_TYPE_STREAM_ID = 1;

  // COLUMN_TYPE_TIMESTAMP is a column containing the timestamp of the log
  // record.
  COLUMN_TYPE_TIMESTAMP = 2;

  // COLUMN_TYPE_METADATA is a column containing structured metadata values for
  // a specific key.
  COLUMN_TYPE_METADATA = 3;

  // COLUMN_TYPE_MESSAGE is a column containing the message of the log record.
  COLUMN_TYPE_MESSAGE = 4;
}

// ColumnMetadata describes the metadata for a column.
message ColumnMetadata {
  // Pages within the column.
  repeated PageDesc pages = 1;
}

// PageDesc describes an individual page within a column.
message PageDesc {
  // Information about the page.
  dataobj.metadata.dataset.v1.PageInfo info = 1;
}
