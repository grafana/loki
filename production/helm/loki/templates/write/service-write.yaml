{{- $args := dict "ctx" . "component" "write" "memberlist" true -}}
{{- $isSimpleScalable := eq (include "loki.deployment.isScalable" .) "true" -}}
{{- if $isSimpleScalable }}
{{- $zonesMap := include "loki.zoneAwareReplicationMap" $args | fromYaml -}}
{{- range $zoneName, $rolloutZone := $zonesMap }}
{{- with $ -}}
{{- $_ := set $args "rolloutZoneName" $zoneName -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "loki.resourceName" $args }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "loki.labels" $args | nindent 4 }}
    {{- if and $zoneName .Values.write.zoneAwareReplication.migration.enabled }}
    # Prevent scraping PODs via this service during migration as the original non zone-aware service already scrapes all PODs and you get duplicate metrics.
    prometheus.io/service-monitor: "false"
    {{- end }}
    {{- with .Values.loki.serviceLabels }}
    {{- toYaml . | nindent 4}}
    {{- end }}
    {{- with .Values.write.service.labels }}
    {{- toYaml . | nindent 4}}
    {{- end }}
  annotations:
    {{- with .Values.loki.serviceAnnotations }}
    {{- toYaml . | nindent 4}}
    {{- end }}
    {{- with .Values.write.service.annotations }}
    {{- toYaml . | nindent 4}}
    {{- end }}
spec:
  type: ClusterIP
  ports:
    - name: http-metrics
      port: 3100
      targetPort: http-metrics
      protocol: TCP
    - name: grpc
      port: 9095
      targetPort: grpc
      protocol: TCP
  selector:
    {{- include "loki.selectorLabels" $args | nindent 4 }}
---
{{- end }}
{{- end }}
{{- end }}
