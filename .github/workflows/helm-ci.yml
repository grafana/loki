---
name: helm-ci
on:
  pull_request:
    paths:
      - "production/helm/**"
      - ".github/workflows/helm-ci.yml"

env:
  CT_CONFIGFILE: production/helm/ct.yaml

jobs:
  call-lint:
    uses: grafana/helm-charts/.github/workflows/linter.yml@main
    with:
      filter_regex_include: .*production/helm/loki/.*
  call-test:
    name: Test Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.8.2

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config "${CT_CONFIGFILE}" --check-version-increment=false
        timeout-minutes: 10

      - name: Create kind cluster
        uses: helm/kind-action@v1.10.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Install prometheus operator
        id: install-prometheus
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create namespace prometheus

          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm install --debug prometheus prometheus-community/kube-prometheus-stack \
            --namespace prometheus \
            --set grafana.enabled=false \
            --set prometheus.prometheusSpec.serviceMonitorSelector.matchLabels.release=prometheus \
            --set prometheus.prometheusSpec.scrapeConfigNamespaceSelector.matchLabels.release=prometheus

          kubectl --namespace prometheus get pods -l "release=prometheus"
          kubectl --namespace prometheus get services -l "release=prometheus"

      - name: Run chart-testing (install)
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ "$changed" == "charts/enterprise-metrics" ]]; then
            # Do not run `ct install` for enterprise-metrics
            exit 0
          fi
          ct install --config "${CT_CONFIGFILE}"
