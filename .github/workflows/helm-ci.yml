---
name: helm-ci
on:
  pull_request:
    paths:
      - "production/helm/**"

env:
  CT_CONFIGFILE: production/helm/ct.yaml

jobs:
  call-lint:
    name: Lint Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3.3.0

      - name: Check Docs
        run: |
          docker run --rm --volume "$(pwd):/helm-docs" -u "$(id -u)" jnorwood/helm-docs:v1.11.0
          if ! git diff --exit-code; then
              echo "Documentation not up to date. Please run helm-docs and commit changes!" >&2
              exit 1
          fi

      - name: Lint Yaml
        run: make helm-lint

      - name: Lint Code Base
        uses: docker://github/super-linter:v3.12.0
        env:
          FILTER_REGEX_EXCLUDE: .*(README\.md|Chart\.yaml|NOTES.txt).*
          FILTER_REGEX_INCLUDE: .*production/helm/.*
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_KUBERNETES_KUBEVAL: false
          VALIDATE_YAML: false
          VALIDATE_GO: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  call-test:
    name: Test Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.2

      # Python is required because `ct lint` runs Yamale (https://github.com/23andMe/Yamale) and
      # yamllint (https://github.com/adrienverge/yamllint) which require Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.4.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ -n "$changed" ]]; then
            echo "::set-output name=changed::true"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config "${CT_CONFIGFILE}" --check-version-increment=false

      - name: Create kind cluster
        uses: helm/kind-action@v1.5.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Install prometheus operator
        id: install-prometheus
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          kubectl create namespace prometheus

          helm install prometheus prometheus-community/kube-prometheus-stack \
            --namespace prometheus \
            --set grafana.enabled=false \
            --set prometheus.prometheusSpec.serviceMonitorSelector.matchLabels.release=prometheus

          kubectl --namespace prometheus get pods -l "release=prometheus"
          kubectl --namespace prometheus get services -l "release=prometheus"

      - name: Run chart-testing (install)
        run: |
          changed=$(ct list-changed --config "${CT_CONFIGFILE}")
          if [[ "$changed" == "charts/enterprise-metrics" ]]; then
            # Do not run `ct install` for enterprise-metrics
            exit 0
          fi
          ct install --config "${CT_CONFIGFILE}"
