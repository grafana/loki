name: LogQL correctness tests
on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref to run correctness tests on'
        required: false
        default: 'main'
        type: 'string'
      test_dataobj_v1:
        description: 'Test V1 data object store'
        required: false
        default: true
        type: 'boolean'
      test_dataobj_v2:
        description: 'Test V2 data object store'
        required: false
        default: false # Disabled by default due to less complete implementation
        type: 'boolean'
      failfast:
        description: 'Fail fast on first test failure'
        required: false
        default: true
        type: 'boolean'
permissions: {}
jobs:
  generate-testdata:
    name: Generate test data
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'

      # The metastore generates invalid filenames for Windows (with colons),
      # which get rejected by upload-artifact. We zip these files to avoid this
      # issue.
      - name: Generate test data
        run: make generate && zip -r data.zip data/
        working-directory: ./pkg/logql/bench

      - name: Upload test data
        uses: actions/upload-artifact@v4
        with:
          name: logql-bench-testdata-${{ steps.checkout.outputs.commit }}
          path: ./pkg/logql/bench/data.zip
          retention-days: 7

  setup-matrix:
    name: Setup matrix
    needs: generate-testdata
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - name: Generate matrix
        id: generate
        run: |
          STORES=()

          # Use explicit equality checks to avoid template injection.
          ${{ inputs.test_dataobj_v1 == true }} && STORES+=("dataobj")
          ${{ inputs.test_dataobj_v2 == true }} && STORES+=("dataobj-engine")

          MATRIX_JSON=$(jq -nc --arg stores "${STORES[*]}" '{"store": $stores | split(" ")}')
          echo "matrix=$MATRIX_JSON" >> "$GITHUB_OUTPUT"

  tests:
    name: Run correctness tests for ${{ matrix.store }}
    runs-on: github-hosted-ubuntu-arm64-large
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
      fail-fast: false # Continue testing other stores if one fails
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Download test data
        uses: actions/download-artifact@v4
        with:
          name: logql-bench-testdata-${{ steps.checkout.outputs.commit }}
          path: ./pkg/logql/bench

      - name: Unzip test data
        run: unzip data.zip
        working-directory: ./pkg/logql/bench

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.3'

      - name: Create results directory
        run: mkdir -p ./pkg/logql/bench/results

      - name: Run tests
        shell: bash # Use bash shell to propagate pipe failures
        run: |
          go test \
            -v -slow-tests \
            -run=TestStorageEquality/query=.+/kind=.+/store=${{ matrix.store }}$ \
            ${{ inputs.failfast == true && '-failfast' || '' }} \
          | tee results/results.txt
        working-directory: ./pkg/logql/bench

      - name: Upload results
        uses: actions/upload-artifact@v4
        if: always() # Upload results even if one of the test tests fails
        with:
          name: logql-bench-results-${{ matrix.store }}-${{ steps.checkout.outputs.commit }}
          path: ./pkg/logql/bench/results
          retention-days: 7
