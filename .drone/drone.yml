---
kind: pipeline
name: loki-build-image

platform:
  os: linux
  arch: amd64

workspace:
  base: /src
  path: loki

steps:
- name: test-image
  image: plugins/docker
  settings:
    context: loki-build-image
    dockerfile: loki-build-image/Dockerfile
    dry_run: true
    repo: grafana/loki-build-image
    tags:
    - 0.28.0
  when:
    event:
    - pull_request
    paths:
    - loki-build-image/**

- name: push-image
  image: plugins/docker
  settings:
    context: loki-build-image
    dockerfile: loki-build-image/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-build-image
    tags:
    - 0.28.0
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
    paths:
    - loki-build-image/**

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

---
kind: pipeline
name: helm-test-image

platform:
  os: linux
  arch: amd64

workspace:
  base: /src
  path: loki

steps:
- name: test-image
  image: plugins/docker
  settings:
    dockerfile: production/helm/loki/src/helm-test/Dockerfile
    dry_run: true
    repo: grafana/loki-helm-test
  when:
    event:
    - pull_request
    paths:
    - production/helm/loki/src/helm-test/**

- name: push-image
  image: plugins/docker
  settings:
    dockerfile: production/helm/loki/src/helm-test/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-helm-test
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
    paths:
    - production/helm/loki/src/helm-test/**

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

---
kind: pipeline
name: check

platform:
  os: linux
  arch: amd64

workspace:
  base: /src
  path: loki

steps:
- name: check-drone-drift
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false check-drone-drift
  depends_on:
  - clone

- name: check-generated-files
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false check-generated-files
  depends_on:
  - clone

- name: clone-target-branch
  image: grafana/loki-build-image:0.27.1
  commands:
  - cd ..
  - "echo \"cloning \"$DRONE_TARGET_BRANCH "
  - git clone -b $DRONE_TARGET_BRANCH $CI_REPO_REMOTE loki-target-branch
  - cd -
  when:
    event:
    - pull_request
  depends_on:
  - clone

- name: test
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false test
  depends_on:
  - clone-target-branch
  - check-generated-files

- name: test-target-branch
  image: grafana/loki-build-image:0.27.1
  commands:
  - cd ../loki-target-branch
  - BUILD_IN_CONTAINER=false make test
  when:
    event:
    - pull_request
  depends_on:
  - clone-target-branch

- name: compare-coverage
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false compare-coverage old=../loki-target-branch/test_results.txt new=test_results.txt packages=ingester,distributor,querier,querier/queryrange,iter,storage,chunkenc,logql,loki > diff.txt
  when:
    event:
    - pull_request
  depends_on:
  - test
  - test-target-branch

- name: report-coverage
  image: grafana/loki-build-image:0.27.1
  commands:
  - total_diff=$(sed 's/%//' diff.txt | awk '{sum+=$3;}END{print sum;}')
  - if [ $total_diff = 0 ]; then exit 0; fi
  - pull=$(echo $CI_COMMIT_REF | awk -F '/' '{print $3}')
  - "body=$(jq -Rs '{body: . }' diff.txt)"
  - "curl -X POST -u $USER:$TOKEN -H \"Accept: application/vnd.github.v3+json\" https://api.github.com/repos/grafana/loki/issues/$pull/comments -d \"$body\" > /dev/null"
  environment:
    TOKEN:
      from_secret: github_token
    USER: grafanabot
  when:
    event:
    - pull_request
  depends_on:
  - compare-coverage

- name: lint
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false lint
  depends_on:
  - check-generated-files

- name: check-mod
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false check-mod
  depends_on:
  - test
  - lint

- name: shellcheck
  image: koalaman/shellcheck-alpine:stable
  commands:
  - apk add make bash && make lint-scripts

- name: loki
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false loki
  depends_on:
  - check-generated-files

- name: check-doc
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false check-doc
  depends_on:
  - loki

- name: validate-example-configs
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false validate-example-configs
  depends_on:
  - loki

- name: check-example-config-doc
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false check-example-config-doc
  depends_on:
  - clone

- name: build-docs-website
  image: grafana/docs-base:latest
  commands:
  - mkdir -p /hugo/content/docs/loki/latest
  - cp -r docs/sources/* /hugo/content/docs/loki/latest/
  - cd /hugo && make prod

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

---
kind: pipeline
name: mixins

platform:
  os: linux
  arch: amd64

workspace:
  base: /src
  path: loki

steps:
- name: lint-jsonnet
  image: grafana/jsonnet-build:c8b75df
  commands:
  - make BUILD_IN_CONTAINER=false lint-jsonnet
  depends_on:
  - clone

- name: loki-mixin-check
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false loki-mixin-check
  when:
    event:
    - pull_request
    paths:
    - production/loki-mixin/**
  depends_on:
  - clone

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

---
kind: pipeline
name: documentation-checks

platform:
  os: linux
  arch: amd64

workspace:
  base: /src
  path: loki

steps:
- name: documentation-helm-reference-check
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false documentation-helm-reference-check
  depends_on:
  - clone

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

---
kind: pipeline
name: docker-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags

- name: build-loki-image
  image: plugins/docker
  settings:
    dockerfile: cmd/loki/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: build-loki-canary-image
  image: plugins/docker
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: build-logcli-image
  image: plugins/docker
  settings:
    dockerfile: cmd/logcli/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/logcli
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-loki-image
  image: plugins/docker
  settings:
    dockerfile: cmd/loki/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

- name: publish-loki-canary-image
  image: plugins/docker
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

- name: publish-logcli-image
  image: plugins/docker
  settings:
    dockerfile: cmd/logcli/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/logcli
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: docker-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm64 > .tags

- name: build-loki-image
  image: plugins/docker
  settings:
    dockerfile: cmd/loki/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: build-loki-canary-image
  image: plugins/docker
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: build-logcli-image
  image: plugins/docker
  settings:
    dockerfile: cmd/logcli/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/logcli
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-loki-image
  image: plugins/docker
  settings:
    dockerfile: cmd/loki/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

- name: publish-loki-canary-image
  image: plugins/docker
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

- name: publish-logcli-image
  image: plugins/docker
  settings:
    dockerfile: cmd/logcli/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/logcli
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: docker-arm

platform:
  os: linux
  arch: arm

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm > .tags

- name: build-loki-image
  image: plugins/docker:linux-arm
  settings:
    dockerfile: cmd/loki/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: build-loki-canary-image
  image: plugins/docker:linux-arm
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: build-logcli-image
  image: plugins/docker:linux-arm
  settings:
    dockerfile: cmd/logcli/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/logcli
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-loki-image
  image: plugins/docker:linux-arm
  settings:
    dockerfile: cmd/loki/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

- name: publish-loki-canary-image
  image: plugins/docker:linux-arm
  settings:
    dockerfile: cmd/loki-canary/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-canary
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

- name: publish-logcli-image
  image: plugins/docker:linux-arm
  settings:
    dockerfile: cmd/logcli/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/logcli
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: promtail-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags

- name: build-promtail-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/promtail/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-promtail-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/promtail/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: promtail-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm64 > .tags

- name: build-promtail-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/promtail/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-promtail-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/promtail/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: promtail-arm

platform:
  os: linux
  arch: arm

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm > .tags

- name: build-promtail-image
  image: plugins/docker:linux-arm
  settings:
    dockerfile: clients/cmd/promtail/Dockerfile.arm32
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-promtail-image
  image: plugins/docker:linux-arm
  settings:
    dockerfile: clients/cmd/promtail/Dockerfile.arm32
    password:
      from_secret: docker_password
    repo: grafana/promtail
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: lokioperator-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags

- name: build-loki-operator-image
  image: plugins/docker
  settings:
    context: operator
    dockerfile: operator/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki-operator
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-loki-operator-image
  image: plugins/docker
  settings:
    context: operator
    dockerfile: operator/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-operator
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: lokioperator-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm64 > .tags

- name: build-loki-operator-image
  image: plugins/docker
  settings:
    context: operator
    dockerfile: operator/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki-operator
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-loki-operator-image
  image: plugins/docker
  settings:
    context: operator
    dockerfile: operator/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-operator
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: lokioperator-arm

platform:
  os: linux
  arch: arm

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm > .tags

- name: build-loki-operator-image
  image: plugins/docker:linux-arm
  settings:
    context: operator
    dockerfile: operator/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki-operator
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-loki-operator-image
  image: plugins/docker:linux-arm
  settings:
    context: operator
    dockerfile: operator/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-operator
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: fluent-bit-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags
  - echo ",main" >> .tags

- name: build-fluent-bit-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/fluent-bit/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/fluent-bit-plugin-loki
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-fluent-bit-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/fluent-bit/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/fluent-bit-plugin-loki
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: fluentd-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags
  - echo ",main" >> .tags

- name: build-fluentd-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/fluentd/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/fluent-plugin-loki
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-fluentd-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/fluentd/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/fluent-plugin-loki
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: logstash-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags
  - echo ",main" >> .tags

- name: build-logstash-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/logstash/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/logstash-output-loki
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-logstash-image
  image: plugins/docker
  settings:
    dockerfile: clients/cmd/logstash/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/logstash-output-loki
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: querytee-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags
  - echo ",main" >> .tags

- name: build-querytee-image
  image: plugins/docker
  settings:
    dockerfile: cmd/querytee/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/loki-query-tee
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-querytee-image
  image: plugins/docker
  settings:
    dockerfile: cmd/querytee/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/loki-query-tee
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: manifest

platform:
  os: linux
  arch: amd64

steps:
- name: manifest-promtail
  image: plugins/manifest
  settings:
    password:
      from_secret: docker_password
    spec: .drone/docker-manifest.tmpl
    target: promtail
    username:
      from_secret: docker_username
  depends_on:
  - clone

- name: manifest-loki
  image: plugins/manifest
  settings:
    password:
      from_secret: docker_password
    spec: .drone/docker-manifest.tmpl
    target: loki
    username:
      from_secret: docker_username
  depends_on:
  - clone
  - manifest-promtail

- name: manifest-loki-canary
  image: plugins/manifest
  settings:
    password:
      from_secret: docker_password
    spec: .drone/docker-manifest.tmpl
    target: loki-canary
    username:
      from_secret: docker_username
  depends_on:
  - clone
  - manifest-loki

- name: manifest-loki-operator
  image: plugins/manifest
  settings:
    password:
      from_secret: docker_password
    spec: .drone/docker-manifest.tmpl
    target: loki-operator
    username:
      from_secret: docker_username
  depends_on:
  - clone
  - manifest-loki-canary

trigger:
  event:
  - push
  - tag
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- docker-amd64
- docker-arm64
- docker-arm
- promtail-amd64
- promtail-arm64
- promtail-arm

---
kind: pipeline
name: deploy

platform:
  os: linux
  arch: amd64

steps:
- name: prepare-updater-config
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag) > .tag
  - export RELEASE_TAG=$(cat .tag)
  - export RELEASE_NAME=$([[ $RELEASE_TAG =~ $RELEASE_TAG_REGEXP ]] && echo $RELEASE_TAG | grep -oE $MAJOR_MINOR_VERSION_REGEXP | sed "s/\./-/g" | sed "s/$/-x/" || echo "next")
  - echo $RELEASE_NAME
  - echo $PLUGIN_CONFIG_TEMPLATE > updater-config.json
  - sed -i "s/\"{{release}}\"/\"$RELEASE_NAME\"/g" updater-config.json
  - sed -i "s/{{version}}/$RELEASE_TAG/g" updater-config.json
  settings:
    config_template:
      from_secret: updater_config_template
  environment:
    MAJOR_MINOR_VERSION_REGEXP: ([0-9]+\.[0-9]+)
    RELEASE_TAG_REGEXP: ^([0-9]+\.[0-9]+\.[0-9]+)$
  depends_on:
  - clone

- name: trigger
  image: us.gcr.io/kubernetes-dev/drone/plugins/updater
  settings:
    config_file: updater-config.json
    github_token:
      from_secret: github_token
  depends_on:
  - prepare-updater-config

image_pull_secrets:
- dockerconfigjson

trigger:
  event:
  - push
  - tag
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- manifest

---
kind: pipeline
name: promtail-windows

platform:
  os: windows
  arch: amd64
  version: 1809

steps:
- name: identify-runner
  image: golang:1.19-windowsservercore-1809
  commands:
  - Write-Output $env:DRONE_RUNNER_NAME

- name: test
  image: golang:1.19-windowsservercore-1809
  commands:
  - go test .\clients\pkg\promtail\targets\windows\... -v

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

---
kind: pipeline
name: logql-analyzer

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags

- name: build-logql-analyzer-image
  image: plugins/docker
  settings:
    dockerfile: cmd/logql-analyzer/Dockerfile
    dry_run: true
    password:
      from_secret: docker_password
    repo: grafana/logql-analyzer
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-logql-analyzer-image
  image: plugins/docker
  settings:
    dockerfile: cmd/logql-analyzer/Dockerfile
    password:
      from_secret: docker_password
    repo: grafana/logql-analyzer
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: release

platform:
  os: linux
  arch: amd64

steps:
- name: write-key
  image: grafana/loki-build-image:0.27.1
  commands:
  - printf "%s" "$NFPM_SIGNING_KEY" > $NFPM_SIGNING_KEY_FILE
  environment:
    NFPM_SIGNING_KEY:
      from_secret: gpg_private_key
    NFPM_SIGNING_KEY_FILE: /drone/src/private-key.key

- name: test packaging
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false packages
  environment:
    NFPM_PASSPHRASE:
      from_secret: gpg_passphrase
    NFPM_SIGNING_KEY_FILE: /drone/src/private-key.key

- name: test deb package
  image: docker
  commands:
  - ./tools/packaging/verify-deb-install.sh
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: test rpm package
  image: docker
  commands:
  - ./tools/packaging/verify-rpm-install.sh
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock

- name: publish
  image: grafana/loki-build-image:0.27.1
  commands:
  - make BUILD_IN_CONTAINER=false publish
  environment:
    GITHUB_TOKEN:
      from_secret: github_token
    NFPM_PASSPHRASE:
      from_secret: gpg_passphrase
    NFPM_SIGNING_KEY_FILE: /drone/src/private-key.key
  when:
    event:
    - tag

services:
- name: systemd-debian
  image: jrei/systemd-debian:12
  privileged: true
  volumes:
  - name: cgroup
    path: /sys/fs/cgroup

- name: systemd-centos
  image: jrei/systemd-centos:8
  privileged: true
  volumes:
  - name: cgroup
    path: /sys/fs/cgroup

volumes:
- name: cgroup
  host:
    path: /sys/fs/cgroup
- name: docker
  host:
    path: /var/run/docker.sock

image_pull_secrets:
- dockerconfigjson

trigger:
  event:
  - pull_request
  - tag
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: docker-driver

platform:
  os: linux
  arch: amd64

steps:
- name: build and push
  image: grafana/loki-build-image:0.27.1
  commands:
  - make docker-driver-push
  environment:
    DOCKER_PASSWORD:
      from_secret: docker_password
    DOCKER_USERNAME:
      from_secret: docker_username
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  depends_on:
  - clone

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

trigger:
  event:
  - push
  - tag
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

---
kind: pipeline
name: lambda-promtail-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-amd64 > .tags

- name: build-lambda-promtail-image
  image: cstyan/ecr
  settings:
    access_key:
      from_secret: ecr_key
    dockerfile: tools/lambda-promtail/Dockerfile
    dry_run: true
    region: us-east-1
    registry: public.ecr.aws/grafana
    repo: public.ecr.aws/grafana/lambda-promtail
    secret_key:
      from_secret: ecr_secret_key
  privileged: true
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-lambda-promtail-image
  image: cstyan/ecr
  settings:
    access_key:
      from_secret: ecr_key
    dockerfile: tools/lambda-promtail/Dockerfile
    region: us-east-1
    registry: public.ecr.aws/grafana
    repo: public.ecr.aws/grafana/lambda-promtail
    secret_key:
      from_secret: ecr_secret_key
  privileged: true
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: lambda-promtail-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: image-tag
  image: alpine
  commands:
  - apk add --no-cache bash git
  - git fetch origin --tags
  - echo $(./tools/image-tag)-arm64 > .tags

- name: build-lambda-promtail-image
  image: cstyan/ecr
  settings:
    access_key:
      from_secret: ecr_key
    dockerfile: tools/lambda-promtail/Dockerfile
    dry_run: true
    region: us-east-1
    registry: public.ecr.aws/grafana
    repo: public.ecr.aws/grafana/lambda-promtail
    secret_key:
      from_secret: ecr_secret_key
  privileged: true
  when:
    event:
    - pull_request
  depends_on:
  - image-tag

- name: publish-lambda-promtail-image
  image: cstyan/ecr
  settings:
    access_key:
      from_secret: ecr_key
    dockerfile: tools/lambda-promtail/Dockerfile
    region: us-east-1
    registry: public.ecr.aws/grafana
    repo: public.ecr.aws/grafana/lambda-promtail
    secret_key:
      from_secret: ecr_secret_key
  privileged: true
  when:
    event:
    - push
    - tag
  depends_on:
  - image-tag

trigger:
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- check

---
kind: pipeline
name: manifest-ecr

platform:
  os: linux
  arch: amd64

steps:
- name: ecr-login
  image: docker:dind
  commands:
  - apk add --no-cache aws-cli
  - docker login --username AWS --password $(aws ecr-public get-login-password --region us-east-1) public.ecr.aws
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: ecr_key
    AWS_SECRET_ACCESS_KEY:
      from_secret: ecr_secret_key
  volumes:
  - name: dockerconf
    path: /root/.docker
  depends_on:
  - clone

- name: manifest-lambda-promtail
  image: plugins/manifest
  settings:
    ignore_missing: true
    spec: .drone/docker-manifest-ecr.tmpl
    target: lambda-promtail
  volumes:
  - name: dockerconf
    path: /.docker
  depends_on:
  - clone
  - ecr-login

volumes:
- name: dockerconf
  temp: {}

trigger:
  event:
  - push
  ref:
  - refs/heads/main
  - refs/heads/k???
  - refs/tags/v*
  - refs/pull/*/head

depends_on:
- lambda-promtail-amd64
- lambda-promtail-arm64

---
kind: secret
name: github_token

get:
  path: infra/data/ci/github/grafanabot
  name: pat

---
kind: secret
name: dockerconfigjson

get:
  path: secret/data/common/gcr
  name: .dockerconfigjson

---
kind: secret
name: docker_username

get:
  path: infra/data/ci/docker_hub
  name: username

---
kind: secret
name: docker_password

get:
  path: infra/data/ci/docker_hub
  name: password

---
kind: secret
name: ecr_key

get:
  path: infra/data/ci/loki/aws-credentials
  name: access_key_id

---
kind: secret
name: ecr_secret_key

get:
  path: infra/data/ci/loki/aws-credentials
  name: secret_access_key

---
kind: secret
name: updater_config_template

get:
  path: secret/data/common/loki_ci_autodeploy
  name: updater-config-template.json

---
kind: secret
name: gpg_passphrase

get:
  path: infra/data/ci/packages-publish/gpg
  name: passphrase

---
kind: secret
name: gpg_private_key

get:
  path: infra/data/ci/packages-publish/gpg
  name: private-key

---
kind: signature
hmac: a0bb75defd507d8670f9ef0177b31e275bbf8686eae03865eb37b80d517d605b

...
