---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: lokistackconfigs.loki.grafana.com
spec:
  group: loki.grafana.com
  names:
    kind: LokiStackConfig
    listKind: LokiStackConfigList
    plural: lokistackconfigs
    singular: lokistackconfig
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: LokiStackConfig is the Schema for the lokistackconfigs API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: LokiStackConfigSpec defines the desired state of LokiStackConfig
            properties:
              featureGates:
                description: FeatureGates is the supported set of all operator feature
                  gates.
                properties:
                  builtInCertManagement:
                    description: 'BuiltInCertManagement enables the built-in facility
                      for generating and rotating TLS client and serving certificates
                      for all LokiStack services and internal clients except for the
                      lokistack-gateway, In detail all internal Loki HTTP and GRPC
                      communication is lifted to require mTLS. For the lokistack-gateay
                      you need to provide a secret with or use the `ServingCertsService`
                      on OpenShift: - `tls.crt`: The TLS server side certificate.
                      - `tls.key`: The TLS key for server-side encryption. In addition
                      each service requires a configmap named as the LokiStack CR
                      with the suffix `-ca-bundle`, e.g. `lokistack-dev-ca-bundle`
                      and the following data: - `service-ca.crt`: The CA signing the
                      service certificate in `tls.crt`.'
                    properties:
                      caRefresh:
                        description: CACertRefresh defines the duration of the CA
                          certificate validity until a rotation should happen. It
                          can be set up to 80% of CA certificate validity or equal
                          to the CA certificate validity. Latter should be used only
                          for rotating only when expired.
                        type: string
                      caValidity:
                        description: CACertValidity defines the total duration of
                          the CA certificate validity.
                        type: string
                      certRefresh:
                        description: CertRefresh defines the duration of the certificate
                          validity until a rotation should happen. It can be set up
                          to 80% of certificate validity or equal to the certificate
                          validity. Latter should be used only for rotating only when
                          expired. The refresh is applied to all LokiStack certificates
                          at once.
                        type: string
                      certValidity:
                        description: CertValidity defines the total duration of the
                          validity for all LokiStack certificates.
                        type: string
                      enabled:
                        description: Enabled defines to flag to enable/disable built-in
                          certificate management feature gate.
                        type: boolean
                    type: object
                  defaultNodeAffinity:
                    description: When DefaultNodeAffinity is enabled the operator
                      will set a default node affinity on all pods. This will limit
                      scheduling of the pods to Nodes with Linux.
                    type: boolean
                  grafanaLabsUsageReport:
                    description: 'GrafanaLabsUsageReport enables the Grafana Labs
                      usage report for Loki. More details: https://grafana.com/docs/loki/latest/release-notes/v2-5/#usage-reporting'
                    type: boolean
                  grpcEncryption:
                    description: 'GRPCEncryption enables TLS encryption for all GRPC
                      LokiStack services. Each GRPC service requires a secret named
                      as the service with the following data: - `tls.crt`: The TLS
                      server side certificate. - `tls.key`: The TLS key for server-side
                      encryption. In addition each service requires a configmap named
                      as the LokiStack CR with the suffix `-ca-bundle`, e.g. `lokistack-dev-ca-bundle`
                      and the following data: - `service-ca.crt`: The CA signing the
                      service certificate in `tls.crt`.'
                    type: boolean
                  httpEncryption:
                    description: 'HTTPEncryption enables TLS encryption for all HTTP
                      LokiStack services. Each HTTP service requires a secret named
                      as the service with the following data: - `tls.crt`: The TLS
                      server side certificate. - `tls.key`: The TLS key for server-side
                      encryption. In addition each service requires a configmap named
                      as the LokiStack CR with the suffix `-ca-bundle`, e.g. `lokistack-dev-ca-bundle`
                      and the following data: - `service-ca.crt`: The CA signing the
                      service certificate in `tls.crt`.'
                    type: boolean
                  lokiStackAlerts:
                    description: LokiStackAlerts enables creating Prometheus-Operator
                      managed PrometheusRules for common Loki alerts.
                    type: boolean
                  lokiStackGateway:
                    description: LokiStackGateway enables reconciling the reverse-proxy
                      lokistack-gateway component for multi-tenant authentication/authorization
                      traffic control to Loki.
                    type: boolean
                  openshift:
                    description: OpenShift contains a set of feature gates supported
                      only on OpenShift.
                    properties:
                      clusterTLSPolicy:
                        description: 'ClusterTLSPolicy enables usage of TLS policies
                          set in the API Server. More details: https://docs.openshift.com/container-platform/4.11/security/tls-security-profiles.html'
                        type: boolean
                      enabled:
                        description: Enabled defines the flag to enable that these
                          feature gates are used against OpenShift Container Platform
                          releases.
                        type: boolean
                      servingCertsService:
                        description: 'ServingCertsService enables OpenShift service-ca
                          annotations on the lokistack-gateway service only to use
                          the in-platform CA and generate a TLS cert/key pair per
                          service for in-cluster data-in-transit encryption. More
                          details: https://docs.openshift.com/container-platform/latest/security/certificate_types_descriptions/service-ca-certificates.html'
                        type: boolean
                    type: object
                  restrictedPodSecurityStandard:
                    description: 'RestrictedPodSecurityStandard enables compliance
                      with the restrictive pod security standard. More details: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted'
                    type: boolean
                  serviceMonitorTlsEndpoints:
                    description: ServiceMonitorTLSEndpoints enables TLS for the ServiceMonitor
                      endpoints.
                    type: boolean
                  serviceMonitors:
                    description: ServiceMonitors enables creating a Prometheus-Operator
                      managed ServiceMonitor resource per LokiStack component.
                    type: boolean
                  tlsProfile:
                    description: TLSProfile allows to chose a TLS security profile.
                      Enforced when using HTTPEncryption or GRPCEncryption.
                    type: string
                type: object
            type: object
          status:
            description: LokiStackConfigStatus defines the observed state of LokiStackConfig
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
