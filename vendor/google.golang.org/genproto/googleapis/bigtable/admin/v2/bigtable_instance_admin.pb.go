// Code generated by protoc-gen-go. DO NOT EDIT.
// source: google/bigtable/admin/v2/bigtable_instance_admin.proto

package admin // import "google.golang.org/genproto/googleapis/bigtable/admin/v2"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import v1 "google.golang.org/genproto/googleapis/iam/v1"
import longrunning "google.golang.org/genproto/googleapis/longrunning"
import field_mask "google.golang.org/genproto/protobuf/field_mask"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for BigtableInstanceAdmin.CreateInstance.
type CreateInstanceRequest struct {
	// The unique name of the project in which to create the new instance.
	// Values are of the form `projects/<project>`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The ID to be used when referring to the new instance within its project,
	// e.g., just `myinstance` rather than
	// `projects/myproject/instances/myinstance`.
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// The instance to create.
	// Fields marked `OutputOnly` must be left blank.
	Instance *Instance `protobuf:"bytes,3,opt,name=instance,proto3" json:"instance,omitempty"`
	// The clusters to be created within the instance, mapped by desired
	// cluster ID, e.g., just `mycluster` rather than
	// `projects/myproject/instances/myinstance/clusters/mycluster`.
	// Fields marked `OutputOnly` must be left blank.
	// Currently, at most two clusters can be specified.
	Clusters             map[string]*Cluster `protobuf:"bytes,4,rep,name=clusters,proto3" json:"clusters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateInstanceRequest) Reset()         { *m = CreateInstanceRequest{} }
func (m *CreateInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateInstanceRequest) ProtoMessage()    {}
func (*CreateInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{0}
}
func (m *CreateInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInstanceRequest.Unmarshal(m, b)
}
func (m *CreateInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInstanceRequest.Marshal(b, m, deterministic)
}
func (dst *CreateInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInstanceRequest.Merge(dst, src)
}
func (m *CreateInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateInstanceRequest.Size(m)
}
func (m *CreateInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInstanceRequest proto.InternalMessageInfo

func (m *CreateInstanceRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateInstanceRequest) GetInstanceId() string {
	if m != nil {
		return m.InstanceId
	}
	return ""
}

func (m *CreateInstanceRequest) GetInstance() *Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *CreateInstanceRequest) GetClusters() map[string]*Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

// Request message for BigtableInstanceAdmin.GetInstance.
type GetInstanceRequest struct {
	// The unique name of the requested instance. Values are of the form
	// `projects/<project>/instances/<instance>`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetInstanceRequest) Reset()         { *m = GetInstanceRequest{} }
func (m *GetInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetInstanceRequest) ProtoMessage()    {}
func (*GetInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{1}
}
func (m *GetInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetInstanceRequest.Unmarshal(m, b)
}
func (m *GetInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetInstanceRequest.Marshal(b, m, deterministic)
}
func (dst *GetInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetInstanceRequest.Merge(dst, src)
}
func (m *GetInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetInstanceRequest.Size(m)
}
func (m *GetInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetInstanceRequest proto.InternalMessageInfo

func (m *GetInstanceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for BigtableInstanceAdmin.ListInstances.
type ListInstancesRequest struct {
	// The unique name of the project for which a list of instances is requested.
	// Values are of the form `projects/<project>`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// DEPRECATED: This field is unused and ignored.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListInstancesRequest) Reset()         { *m = ListInstancesRequest{} }
func (m *ListInstancesRequest) String() string { return proto.CompactTextString(m) }
func (*ListInstancesRequest) ProtoMessage()    {}
func (*ListInstancesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{2}
}
func (m *ListInstancesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInstancesRequest.Unmarshal(m, b)
}
func (m *ListInstancesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInstancesRequest.Marshal(b, m, deterministic)
}
func (dst *ListInstancesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInstancesRequest.Merge(dst, src)
}
func (m *ListInstancesRequest) XXX_Size() int {
	return xxx_messageInfo_ListInstancesRequest.Size(m)
}
func (m *ListInstancesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInstancesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListInstancesRequest proto.InternalMessageInfo

func (m *ListInstancesRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListInstancesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response message for BigtableInstanceAdmin.ListInstances.
type ListInstancesResponse struct {
	// The list of requested instances.
	Instances []*Instance `protobuf:"bytes,1,rep,name=instances,proto3" json:"instances,omitempty"`
	// Locations from which Instance information could not be retrieved,
	// due to an outage or some other transient condition.
	// Instances whose Clusters are all in one of the failed locations
	// may be missing from `instances`, and Instances with at least one
	// Cluster in a failed location may only have partial information returned.
	// Values are of the form `projects/<project>/locations/<zone_id>`
	FailedLocations []string `protobuf:"bytes,2,rep,name=failed_locations,json=failedLocations,proto3" json:"failed_locations,omitempty"`
	// DEPRECATED: This field is unused and ignored.
	NextPageToken        string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListInstancesResponse) Reset()         { *m = ListInstancesResponse{} }
func (m *ListInstancesResponse) String() string { return proto.CompactTextString(m) }
func (*ListInstancesResponse) ProtoMessage()    {}
func (*ListInstancesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{3}
}
func (m *ListInstancesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListInstancesResponse.Unmarshal(m, b)
}
func (m *ListInstancesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListInstancesResponse.Marshal(b, m, deterministic)
}
func (dst *ListInstancesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListInstancesResponse.Merge(dst, src)
}
func (m *ListInstancesResponse) XXX_Size() int {
	return xxx_messageInfo_ListInstancesResponse.Size(m)
}
func (m *ListInstancesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListInstancesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListInstancesResponse proto.InternalMessageInfo

func (m *ListInstancesResponse) GetInstances() []*Instance {
	if m != nil {
		return m.Instances
	}
	return nil
}

func (m *ListInstancesResponse) GetFailedLocations() []string {
	if m != nil {
		return m.FailedLocations
	}
	return nil
}

func (m *ListInstancesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request message for BigtableInstanceAdmin.PartialUpdateInstance.
type PartialUpdateInstanceRequest struct {
	// The Instance which will (partially) replace the current value.
	Instance *Instance `protobuf:"bytes,1,opt,name=instance,proto3" json:"instance,omitempty"`
	// The subset of Instance fields which should be replaced.
	// Must be explicitly set.
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *PartialUpdateInstanceRequest) Reset()         { *m = PartialUpdateInstanceRequest{} }
func (m *PartialUpdateInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*PartialUpdateInstanceRequest) ProtoMessage()    {}
func (*PartialUpdateInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{4}
}
func (m *PartialUpdateInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PartialUpdateInstanceRequest.Unmarshal(m, b)
}
func (m *PartialUpdateInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PartialUpdateInstanceRequest.Marshal(b, m, deterministic)
}
func (dst *PartialUpdateInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PartialUpdateInstanceRequest.Merge(dst, src)
}
func (m *PartialUpdateInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_PartialUpdateInstanceRequest.Size(m)
}
func (m *PartialUpdateInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PartialUpdateInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PartialUpdateInstanceRequest proto.InternalMessageInfo

func (m *PartialUpdateInstanceRequest) GetInstance() *Instance {
	if m != nil {
		return m.Instance
	}
	return nil
}

func (m *PartialUpdateInstanceRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// Request message for BigtableInstanceAdmin.DeleteInstance.
type DeleteInstanceRequest struct {
	// The unique name of the instance to be deleted.
	// Values are of the form `projects/<project>/instances/<instance>`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteInstanceRequest) Reset()         { *m = DeleteInstanceRequest{} }
func (m *DeleteInstanceRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteInstanceRequest) ProtoMessage()    {}
func (*DeleteInstanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{5}
}
func (m *DeleteInstanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteInstanceRequest.Unmarshal(m, b)
}
func (m *DeleteInstanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteInstanceRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteInstanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteInstanceRequest.Merge(dst, src)
}
func (m *DeleteInstanceRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteInstanceRequest.Size(m)
}
func (m *DeleteInstanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteInstanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteInstanceRequest proto.InternalMessageInfo

func (m *DeleteInstanceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for BigtableInstanceAdmin.CreateCluster.
type CreateClusterRequest struct {
	// The unique name of the instance in which to create the new cluster.
	// Values are of the form
	// `projects/<project>/instances/<instance>`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The ID to be used when referring to the new cluster within its instance,
	// e.g., just `mycluster` rather than
	// `projects/myproject/instances/myinstance/clusters/mycluster`.
	ClusterId string `protobuf:"bytes,2,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// The cluster to be created.
	// Fields marked `OutputOnly` must be left blank.
	Cluster              *Cluster `protobuf:"bytes,3,opt,name=cluster,proto3" json:"cluster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateClusterRequest) Reset()         { *m = CreateClusterRequest{} }
func (m *CreateClusterRequest) String() string { return proto.CompactTextString(m) }
func (*CreateClusterRequest) ProtoMessage()    {}
func (*CreateClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{6}
}
func (m *CreateClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterRequest.Unmarshal(m, b)
}
func (m *CreateClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterRequest.Marshal(b, m, deterministic)
}
func (dst *CreateClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterRequest.Merge(dst, src)
}
func (m *CreateClusterRequest) XXX_Size() int {
	return xxx_messageInfo_CreateClusterRequest.Size(m)
}
func (m *CreateClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterRequest proto.InternalMessageInfo

func (m *CreateClusterRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateClusterRequest) GetClusterId() string {
	if m != nil {
		return m.ClusterId
	}
	return ""
}

func (m *CreateClusterRequest) GetCluster() *Cluster {
	if m != nil {
		return m.Cluster
	}
	return nil
}

// Request message for BigtableInstanceAdmin.GetCluster.
type GetClusterRequest struct {
	// The unique name of the requested cluster. Values are of the form
	// `projects/<project>/instances/<instance>/clusters/<cluster>`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetClusterRequest) Reset()         { *m = GetClusterRequest{} }
func (m *GetClusterRequest) String() string { return proto.CompactTextString(m) }
func (*GetClusterRequest) ProtoMessage()    {}
func (*GetClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{7}
}
func (m *GetClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetClusterRequest.Unmarshal(m, b)
}
func (m *GetClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetClusterRequest.Marshal(b, m, deterministic)
}
func (dst *GetClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetClusterRequest.Merge(dst, src)
}
func (m *GetClusterRequest) XXX_Size() int {
	return xxx_messageInfo_GetClusterRequest.Size(m)
}
func (m *GetClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetClusterRequest proto.InternalMessageInfo

func (m *GetClusterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for BigtableInstanceAdmin.ListClusters.
type ListClustersRequest struct {
	// The unique name of the instance for which a list of clusters is requested.
	// Values are of the form `projects/<project>/instances/<instance>`.
	// Use `<instance> = '-'` to list Clusters for all Instances in a project,
	// e.g., `projects/myproject/instances/-`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// DEPRECATED: This field is unused and ignored.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClustersRequest) Reset()         { *m = ListClustersRequest{} }
func (m *ListClustersRequest) String() string { return proto.CompactTextString(m) }
func (*ListClustersRequest) ProtoMessage()    {}
func (*ListClustersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{8}
}
func (m *ListClustersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClustersRequest.Unmarshal(m, b)
}
func (m *ListClustersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClustersRequest.Marshal(b, m, deterministic)
}
func (dst *ListClustersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClustersRequest.Merge(dst, src)
}
func (m *ListClustersRequest) XXX_Size() int {
	return xxx_messageInfo_ListClustersRequest.Size(m)
}
func (m *ListClustersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClustersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListClustersRequest proto.InternalMessageInfo

func (m *ListClustersRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListClustersRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response message for BigtableInstanceAdmin.ListClusters.
type ListClustersResponse struct {
	// The list of requested clusters.
	Clusters []*Cluster `protobuf:"bytes,1,rep,name=clusters,proto3" json:"clusters,omitempty"`
	// Locations from which Cluster information could not be retrieved,
	// due to an outage or some other transient condition.
	// Clusters from these locations may be missing from `clusters`,
	// or may only have partial information returned.
	// Values are of the form `projects/<project>/locations/<zone_id>`
	FailedLocations []string `protobuf:"bytes,2,rep,name=failed_locations,json=failedLocations,proto3" json:"failed_locations,omitempty"`
	// DEPRECATED: This field is unused and ignored.
	NextPageToken        string   `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListClustersResponse) Reset()         { *m = ListClustersResponse{} }
func (m *ListClustersResponse) String() string { return proto.CompactTextString(m) }
func (*ListClustersResponse) ProtoMessage()    {}
func (*ListClustersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{9}
}
func (m *ListClustersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListClustersResponse.Unmarshal(m, b)
}
func (m *ListClustersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListClustersResponse.Marshal(b, m, deterministic)
}
func (dst *ListClustersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListClustersResponse.Merge(dst, src)
}
func (m *ListClustersResponse) XXX_Size() int {
	return xxx_messageInfo_ListClustersResponse.Size(m)
}
func (m *ListClustersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListClustersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListClustersResponse proto.InternalMessageInfo

func (m *ListClustersResponse) GetClusters() []*Cluster {
	if m != nil {
		return m.Clusters
	}
	return nil
}

func (m *ListClustersResponse) GetFailedLocations() []string {
	if m != nil {
		return m.FailedLocations
	}
	return nil
}

func (m *ListClustersResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

// Request message for BigtableInstanceAdmin.DeleteCluster.
type DeleteClusterRequest struct {
	// The unique name of the cluster to be deleted. Values are of the form
	// `projects/<project>/instances/<instance>/clusters/<cluster>`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteClusterRequest) Reset()         { *m = DeleteClusterRequest{} }
func (m *DeleteClusterRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteClusterRequest) ProtoMessage()    {}
func (*DeleteClusterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{10}
}
func (m *DeleteClusterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteClusterRequest.Unmarshal(m, b)
}
func (m *DeleteClusterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteClusterRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteClusterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteClusterRequest.Merge(dst, src)
}
func (m *DeleteClusterRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteClusterRequest.Size(m)
}
func (m *DeleteClusterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteClusterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteClusterRequest proto.InternalMessageInfo

func (m *DeleteClusterRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// The metadata for the Operation returned by CreateInstance.
type CreateInstanceMetadata struct {
	// The request that prompted the initiation of this CreateInstance operation.
	OriginalRequest *CreateInstanceRequest `protobuf:"bytes,1,opt,name=original_request,json=originalRequest,proto3" json:"original_request,omitempty"`
	// The time at which the original request was received.
	RequestTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	// The time at which the operation failed or was completed successfully.
	FinishTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateInstanceMetadata) Reset()         { *m = CreateInstanceMetadata{} }
func (m *CreateInstanceMetadata) String() string { return proto.CompactTextString(m) }
func (*CreateInstanceMetadata) ProtoMessage()    {}
func (*CreateInstanceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{11}
}
func (m *CreateInstanceMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateInstanceMetadata.Unmarshal(m, b)
}
func (m *CreateInstanceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateInstanceMetadata.Marshal(b, m, deterministic)
}
func (dst *CreateInstanceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateInstanceMetadata.Merge(dst, src)
}
func (m *CreateInstanceMetadata) XXX_Size() int {
	return xxx_messageInfo_CreateInstanceMetadata.Size(m)
}
func (m *CreateInstanceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateInstanceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CreateInstanceMetadata proto.InternalMessageInfo

func (m *CreateInstanceMetadata) GetOriginalRequest() *CreateInstanceRequest {
	if m != nil {
		return m.OriginalRequest
	}
	return nil
}

func (m *CreateInstanceMetadata) GetRequestTime() *timestamp.Timestamp {
	if m != nil {
		return m.RequestTime
	}
	return nil
}

func (m *CreateInstanceMetadata) GetFinishTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

// The metadata for the Operation returned by UpdateInstance.
type UpdateInstanceMetadata struct {
	// The request that prompted the initiation of this UpdateInstance operation.
	OriginalRequest *PartialUpdateInstanceRequest `protobuf:"bytes,1,opt,name=original_request,json=originalRequest,proto3" json:"original_request,omitempty"`
	// The time at which the original request was received.
	RequestTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	// The time at which the operation failed or was completed successfully.
	FinishTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateInstanceMetadata) Reset()         { *m = UpdateInstanceMetadata{} }
func (m *UpdateInstanceMetadata) String() string { return proto.CompactTextString(m) }
func (*UpdateInstanceMetadata) ProtoMessage()    {}
func (*UpdateInstanceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{12}
}
func (m *UpdateInstanceMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateInstanceMetadata.Unmarshal(m, b)
}
func (m *UpdateInstanceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateInstanceMetadata.Marshal(b, m, deterministic)
}
func (dst *UpdateInstanceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateInstanceMetadata.Merge(dst, src)
}
func (m *UpdateInstanceMetadata) XXX_Size() int {
	return xxx_messageInfo_UpdateInstanceMetadata.Size(m)
}
func (m *UpdateInstanceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateInstanceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateInstanceMetadata proto.InternalMessageInfo

func (m *UpdateInstanceMetadata) GetOriginalRequest() *PartialUpdateInstanceRequest {
	if m != nil {
		return m.OriginalRequest
	}
	return nil
}

func (m *UpdateInstanceMetadata) GetRequestTime() *timestamp.Timestamp {
	if m != nil {
		return m.RequestTime
	}
	return nil
}

func (m *UpdateInstanceMetadata) GetFinishTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

// The metadata for the Operation returned by CreateCluster.
type CreateClusterMetadata struct {
	// The request that prompted the initiation of this CreateCluster operation.
	OriginalRequest *CreateClusterRequest `protobuf:"bytes,1,opt,name=original_request,json=originalRequest,proto3" json:"original_request,omitempty"`
	// The time at which the original request was received.
	RequestTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	// The time at which the operation failed or was completed successfully.
	FinishTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateClusterMetadata) Reset()         { *m = CreateClusterMetadata{} }
func (m *CreateClusterMetadata) String() string { return proto.CompactTextString(m) }
func (*CreateClusterMetadata) ProtoMessage()    {}
func (*CreateClusterMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{13}
}
func (m *CreateClusterMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateClusterMetadata.Unmarshal(m, b)
}
func (m *CreateClusterMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateClusterMetadata.Marshal(b, m, deterministic)
}
func (dst *CreateClusterMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateClusterMetadata.Merge(dst, src)
}
func (m *CreateClusterMetadata) XXX_Size() int {
	return xxx_messageInfo_CreateClusterMetadata.Size(m)
}
func (m *CreateClusterMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateClusterMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CreateClusterMetadata proto.InternalMessageInfo

func (m *CreateClusterMetadata) GetOriginalRequest() *CreateClusterRequest {
	if m != nil {
		return m.OriginalRequest
	}
	return nil
}

func (m *CreateClusterMetadata) GetRequestTime() *timestamp.Timestamp {
	if m != nil {
		return m.RequestTime
	}
	return nil
}

func (m *CreateClusterMetadata) GetFinishTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

// The metadata for the Operation returned by UpdateCluster.
type UpdateClusterMetadata struct {
	// The request that prompted the initiation of this UpdateCluster operation.
	OriginalRequest *Cluster `protobuf:"bytes,1,opt,name=original_request,json=originalRequest,proto3" json:"original_request,omitempty"`
	// The time at which the original request was received.
	RequestTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=request_time,json=requestTime,proto3" json:"request_time,omitempty"`
	// The time at which the operation failed or was completed successfully.
	FinishTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateClusterMetadata) Reset()         { *m = UpdateClusterMetadata{} }
func (m *UpdateClusterMetadata) String() string { return proto.CompactTextString(m) }
func (*UpdateClusterMetadata) ProtoMessage()    {}
func (*UpdateClusterMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{14}
}
func (m *UpdateClusterMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateClusterMetadata.Unmarshal(m, b)
}
func (m *UpdateClusterMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateClusterMetadata.Marshal(b, m, deterministic)
}
func (dst *UpdateClusterMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateClusterMetadata.Merge(dst, src)
}
func (m *UpdateClusterMetadata) XXX_Size() int {
	return xxx_messageInfo_UpdateClusterMetadata.Size(m)
}
func (m *UpdateClusterMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateClusterMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateClusterMetadata proto.InternalMessageInfo

func (m *UpdateClusterMetadata) GetOriginalRequest() *Cluster {
	if m != nil {
		return m.OriginalRequest
	}
	return nil
}

func (m *UpdateClusterMetadata) GetRequestTime() *timestamp.Timestamp {
	if m != nil {
		return m.RequestTime
	}
	return nil
}

func (m *UpdateClusterMetadata) GetFinishTime() *timestamp.Timestamp {
	if m != nil {
		return m.FinishTime
	}
	return nil
}

// Request message for BigtableInstanceAdmin.CreateAppProfile.
type CreateAppProfileRequest struct {
	// The unique name of the instance in which to create the new app profile.
	// Values are of the form
	// `projects/<project>/instances/<instance>`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The ID to be used when referring to the new app profile within its
	// instance, e.g., just `myprofile` rather than
	// `projects/myproject/instances/myinstance/appProfiles/myprofile`.
	AppProfileId string `protobuf:"bytes,2,opt,name=app_profile_id,json=appProfileId,proto3" json:"app_profile_id,omitempty"`
	// The app profile to be created.
	// Fields marked `OutputOnly` will be ignored.
	AppProfile *AppProfile `protobuf:"bytes,3,opt,name=app_profile,json=appProfile,proto3" json:"app_profile,omitempty"`
	// If true, ignore safety checks when creating the app profile.
	IgnoreWarnings       bool     `protobuf:"varint,4,opt,name=ignore_warnings,json=ignoreWarnings,proto3" json:"ignore_warnings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateAppProfileRequest) Reset()         { *m = CreateAppProfileRequest{} }
func (m *CreateAppProfileRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAppProfileRequest) ProtoMessage()    {}
func (*CreateAppProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{15}
}
func (m *CreateAppProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAppProfileRequest.Unmarshal(m, b)
}
func (m *CreateAppProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAppProfileRequest.Marshal(b, m, deterministic)
}
func (dst *CreateAppProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAppProfileRequest.Merge(dst, src)
}
func (m *CreateAppProfileRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAppProfileRequest.Size(m)
}
func (m *CreateAppProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAppProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAppProfileRequest proto.InternalMessageInfo

func (m *CreateAppProfileRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateAppProfileRequest) GetAppProfileId() string {
	if m != nil {
		return m.AppProfileId
	}
	return ""
}

func (m *CreateAppProfileRequest) GetAppProfile() *AppProfile {
	if m != nil {
		return m.AppProfile
	}
	return nil
}

func (m *CreateAppProfileRequest) GetIgnoreWarnings() bool {
	if m != nil {
		return m.IgnoreWarnings
	}
	return false
}

// Request message for BigtableInstanceAdmin.GetAppProfile.
type GetAppProfileRequest struct {
	// The unique name of the requested app profile. Values are of the form
	// `projects/<project>/instances/<instance>/appProfiles/<app_profile>`.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAppProfileRequest) Reset()         { *m = GetAppProfileRequest{} }
func (m *GetAppProfileRequest) String() string { return proto.CompactTextString(m) }
func (*GetAppProfileRequest) ProtoMessage()    {}
func (*GetAppProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{16}
}
func (m *GetAppProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAppProfileRequest.Unmarshal(m, b)
}
func (m *GetAppProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAppProfileRequest.Marshal(b, m, deterministic)
}
func (dst *GetAppProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAppProfileRequest.Merge(dst, src)
}
func (m *GetAppProfileRequest) XXX_Size() int {
	return xxx_messageInfo_GetAppProfileRequest.Size(m)
}
func (m *GetAppProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAppProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAppProfileRequest proto.InternalMessageInfo

func (m *GetAppProfileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Request message for BigtableInstanceAdmin.ListAppProfiles.
type ListAppProfilesRequest struct {
	// The unique name of the instance for which a list of app profiles is
	// requested. Values are of the form
	// `projects/<project>/instances/<instance>`.
	// Use `<instance> = '-'` to list AppProfiles for all Instances in a project,
	// e.g., `projects/myproject/instances/-`.
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// Maximum number of results per page.
	// CURRENTLY UNIMPLEMENTED AND IGNORED.
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// The value of `next_page_token` returned by a previous call.
	PageToken            string   `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAppProfilesRequest) Reset()         { *m = ListAppProfilesRequest{} }
func (m *ListAppProfilesRequest) String() string { return proto.CompactTextString(m) }
func (*ListAppProfilesRequest) ProtoMessage()    {}
func (*ListAppProfilesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{17}
}
func (m *ListAppProfilesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAppProfilesRequest.Unmarshal(m, b)
}
func (m *ListAppProfilesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAppProfilesRequest.Marshal(b, m, deterministic)
}
func (dst *ListAppProfilesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAppProfilesRequest.Merge(dst, src)
}
func (m *ListAppProfilesRequest) XXX_Size() int {
	return xxx_messageInfo_ListAppProfilesRequest.Size(m)
}
func (m *ListAppProfilesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAppProfilesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAppProfilesRequest proto.InternalMessageInfo

func (m *ListAppProfilesRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ListAppProfilesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListAppProfilesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

// Response message for BigtableInstanceAdmin.ListAppProfiles.
type ListAppProfilesResponse struct {
	// The list of requested app profiles.
	AppProfiles []*AppProfile `protobuf:"bytes,1,rep,name=app_profiles,json=appProfiles,proto3" json:"app_profiles,omitempty"`
	// Set if not all app profiles could be returned in a single response.
	// Pass this value to `page_token` in another request to get the next
	// page of results.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	// Locations from which AppProfile information could not be retrieved,
	// due to an outage or some other transient condition.
	// AppProfiles from these locations may be missing from `app_profiles`.
	// Values are of the form `projects/<project>/locations/<zone_id>`
	FailedLocations      []string `protobuf:"bytes,3,rep,name=failed_locations,json=failedLocations,proto3" json:"failed_locations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAppProfilesResponse) Reset()         { *m = ListAppProfilesResponse{} }
func (m *ListAppProfilesResponse) String() string { return proto.CompactTextString(m) }
func (*ListAppProfilesResponse) ProtoMessage()    {}
func (*ListAppProfilesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{18}
}
func (m *ListAppProfilesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAppProfilesResponse.Unmarshal(m, b)
}
func (m *ListAppProfilesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAppProfilesResponse.Marshal(b, m, deterministic)
}
func (dst *ListAppProfilesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAppProfilesResponse.Merge(dst, src)
}
func (m *ListAppProfilesResponse) XXX_Size() int {
	return xxx_messageInfo_ListAppProfilesResponse.Size(m)
}
func (m *ListAppProfilesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAppProfilesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAppProfilesResponse proto.InternalMessageInfo

func (m *ListAppProfilesResponse) GetAppProfiles() []*AppProfile {
	if m != nil {
		return m.AppProfiles
	}
	return nil
}

func (m *ListAppProfilesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func (m *ListAppProfilesResponse) GetFailedLocations() []string {
	if m != nil {
		return m.FailedLocations
	}
	return nil
}

// Request message for BigtableInstanceAdmin.UpdateAppProfile.
type UpdateAppProfileRequest struct {
	// The app profile which will (partially) replace the current value.
	AppProfile *AppProfile `protobuf:"bytes,1,opt,name=app_profile,json=appProfile,proto3" json:"app_profile,omitempty"`
	// The subset of app profile fields which should be replaced.
	// If unset, all fields will be replaced.
	UpdateMask *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	// If true, ignore safety checks when updating the app profile.
	IgnoreWarnings       bool     `protobuf:"varint,3,opt,name=ignore_warnings,json=ignoreWarnings,proto3" json:"ignore_warnings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAppProfileRequest) Reset()         { *m = UpdateAppProfileRequest{} }
func (m *UpdateAppProfileRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateAppProfileRequest) ProtoMessage()    {}
func (*UpdateAppProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{19}
}
func (m *UpdateAppProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAppProfileRequest.Unmarshal(m, b)
}
func (m *UpdateAppProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAppProfileRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateAppProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAppProfileRequest.Merge(dst, src)
}
func (m *UpdateAppProfileRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateAppProfileRequest.Size(m)
}
func (m *UpdateAppProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAppProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAppProfileRequest proto.InternalMessageInfo

func (m *UpdateAppProfileRequest) GetAppProfile() *AppProfile {
	if m != nil {
		return m.AppProfile
	}
	return nil
}

func (m *UpdateAppProfileRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func (m *UpdateAppProfileRequest) GetIgnoreWarnings() bool {
	if m != nil {
		return m.IgnoreWarnings
	}
	return false
}

// Request message for BigtableInstanceAdmin.DeleteAppProfile.
type DeleteAppProfileRequest struct {
	// The unique name of the app profile to be deleted. Values are of the form
	// `projects/<project>/instances/<instance>/appProfiles/<app_profile>`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// If true, ignore safety checks when deleting the app profile.
	IgnoreWarnings       bool     `protobuf:"varint,2,opt,name=ignore_warnings,json=ignoreWarnings,proto3" json:"ignore_warnings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteAppProfileRequest) Reset()         { *m = DeleteAppProfileRequest{} }
func (m *DeleteAppProfileRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteAppProfileRequest) ProtoMessage()    {}
func (*DeleteAppProfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{20}
}
func (m *DeleteAppProfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteAppProfileRequest.Unmarshal(m, b)
}
func (m *DeleteAppProfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteAppProfileRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteAppProfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteAppProfileRequest.Merge(dst, src)
}
func (m *DeleteAppProfileRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteAppProfileRequest.Size(m)
}
func (m *DeleteAppProfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteAppProfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteAppProfileRequest proto.InternalMessageInfo

func (m *DeleteAppProfileRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DeleteAppProfileRequest) GetIgnoreWarnings() bool {
	if m != nil {
		return m.IgnoreWarnings
	}
	return false
}

// The metadata for the Operation returned by UpdateAppProfile.
type UpdateAppProfileMetadata struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateAppProfileMetadata) Reset()         { *m = UpdateAppProfileMetadata{} }
func (m *UpdateAppProfileMetadata) String() string { return proto.CompactTextString(m) }
func (*UpdateAppProfileMetadata) ProtoMessage()    {}
func (*UpdateAppProfileMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f, []int{21}
}
func (m *UpdateAppProfileMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateAppProfileMetadata.Unmarshal(m, b)
}
func (m *UpdateAppProfileMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateAppProfileMetadata.Marshal(b, m, deterministic)
}
func (dst *UpdateAppProfileMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateAppProfileMetadata.Merge(dst, src)
}
func (m *UpdateAppProfileMetadata) XXX_Size() int {
	return xxx_messageInfo_UpdateAppProfileMetadata.Size(m)
}
func (m *UpdateAppProfileMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateAppProfileMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateAppProfileMetadata proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateInstanceRequest)(nil), "google.bigtable.admin.v2.CreateInstanceRequest")
	proto.RegisterMapType((map[string]*Cluster)(nil), "google.bigtable.admin.v2.CreateInstanceRequest.ClustersEntry")
	proto.RegisterType((*GetInstanceRequest)(nil), "google.bigtable.admin.v2.GetInstanceRequest")
	proto.RegisterType((*ListInstancesRequest)(nil), "google.bigtable.admin.v2.ListInstancesRequest")
	proto.RegisterType((*ListInstancesResponse)(nil), "google.bigtable.admin.v2.ListInstancesResponse")
	proto.RegisterType((*PartialUpdateInstanceRequest)(nil), "google.bigtable.admin.v2.PartialUpdateInstanceRequest")
	proto.RegisterType((*DeleteInstanceRequest)(nil), "google.bigtable.admin.v2.DeleteInstanceRequest")
	proto.RegisterType((*CreateClusterRequest)(nil), "google.bigtable.admin.v2.CreateClusterRequest")
	proto.RegisterType((*GetClusterRequest)(nil), "google.bigtable.admin.v2.GetClusterRequest")
	proto.RegisterType((*ListClustersRequest)(nil), "google.bigtable.admin.v2.ListClustersRequest")
	proto.RegisterType((*ListClustersResponse)(nil), "google.bigtable.admin.v2.ListClustersResponse")
	proto.RegisterType((*DeleteClusterRequest)(nil), "google.bigtable.admin.v2.DeleteClusterRequest")
	proto.RegisterType((*CreateInstanceMetadata)(nil), "google.bigtable.admin.v2.CreateInstanceMetadata")
	proto.RegisterType((*UpdateInstanceMetadata)(nil), "google.bigtable.admin.v2.UpdateInstanceMetadata")
	proto.RegisterType((*CreateClusterMetadata)(nil), "google.bigtable.admin.v2.CreateClusterMetadata")
	proto.RegisterType((*UpdateClusterMetadata)(nil), "google.bigtable.admin.v2.UpdateClusterMetadata")
	proto.RegisterType((*CreateAppProfileRequest)(nil), "google.bigtable.admin.v2.CreateAppProfileRequest")
	proto.RegisterType((*GetAppProfileRequest)(nil), "google.bigtable.admin.v2.GetAppProfileRequest")
	proto.RegisterType((*ListAppProfilesRequest)(nil), "google.bigtable.admin.v2.ListAppProfilesRequest")
	proto.RegisterType((*ListAppProfilesResponse)(nil), "google.bigtable.admin.v2.ListAppProfilesResponse")
	proto.RegisterType((*UpdateAppProfileRequest)(nil), "google.bigtable.admin.v2.UpdateAppProfileRequest")
	proto.RegisterType((*DeleteAppProfileRequest)(nil), "google.bigtable.admin.v2.DeleteAppProfileRequest")
	proto.RegisterType((*UpdateAppProfileMetadata)(nil), "google.bigtable.admin.v2.UpdateAppProfileMetadata")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BigtableInstanceAdminClient is the client API for BigtableInstanceAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BigtableInstanceAdminClient interface {
	// Create an instance within a project.
	CreateInstance(ctx context.Context, in *CreateInstanceRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Gets information about an instance.
	GetInstance(ctx context.Context, in *GetInstanceRequest, opts ...grpc.CallOption) (*Instance, error)
	// Lists information about instances in a project.
	ListInstances(ctx context.Context, in *ListInstancesRequest, opts ...grpc.CallOption) (*ListInstancesResponse, error)
	// Updates an instance within a project.
	UpdateInstance(ctx context.Context, in *Instance, opts ...grpc.CallOption) (*Instance, error)
	// Partially updates an instance within a project.
	PartialUpdateInstance(ctx context.Context, in *PartialUpdateInstanceRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Delete an instance from a project.
	DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Creates a cluster within an instance.
	CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Gets information about a cluster.
	GetCluster(ctx context.Context, in *GetClusterRequest, opts ...grpc.CallOption) (*Cluster, error)
	// Lists information about clusters in an instance.
	ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (*ListClustersResponse, error)
	// Updates a cluster within an instance.
	UpdateCluster(ctx context.Context, in *Cluster, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Deletes a cluster from an instance.
	DeleteCluster(ctx context.Context, in *DeleteClusterRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Creates an app profile within an instance.
	CreateAppProfile(ctx context.Context, in *CreateAppProfileRequest, opts ...grpc.CallOption) (*AppProfile, error)
	// Gets information about an app profile.
	GetAppProfile(ctx context.Context, in *GetAppProfileRequest, opts ...grpc.CallOption) (*AppProfile, error)
	// Lists information about app profiles in an instance.
	ListAppProfiles(ctx context.Context, in *ListAppProfilesRequest, opts ...grpc.CallOption) (*ListAppProfilesResponse, error)
	// Updates an app profile within an instance.
	UpdateAppProfile(ctx context.Context, in *UpdateAppProfileRequest, opts ...grpc.CallOption) (*longrunning.Operation, error)
	// Deletes an app profile from an instance.
	DeleteAppProfile(ctx context.Context, in *DeleteAppProfileRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// Gets the access control policy for an instance resource. Returns an empty
	// policy if an instance exists but does not have a policy set.
	GetIamPolicy(ctx context.Context, in *v1.GetIamPolicyRequest, opts ...grpc.CallOption) (*v1.Policy, error)
	// Sets the access control policy on an instance resource. Replaces any
	// existing policy.
	SetIamPolicy(ctx context.Context, in *v1.SetIamPolicyRequest, opts ...grpc.CallOption) (*v1.Policy, error)
	// Returns permissions that the caller has on the specified instance resource.
	TestIamPermissions(ctx context.Context, in *v1.TestIamPermissionsRequest, opts ...grpc.CallOption) (*v1.TestIamPermissionsResponse, error)
}

type bigtableInstanceAdminClient struct {
	cc *grpc.ClientConn
}

func NewBigtableInstanceAdminClient(cc *grpc.ClientConn) BigtableInstanceAdminClient {
	return &bigtableInstanceAdminClient{cc}
}

func (c *bigtableInstanceAdminClient) CreateInstance(ctx context.Context, in *CreateInstanceRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) GetInstance(ctx context.Context, in *GetInstanceRequest, opts ...grpc.CallOption) (*Instance, error) {
	out := new(Instance)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) ListInstances(ctx context.Context, in *ListInstancesRequest, opts ...grpc.CallOption) (*ListInstancesResponse, error) {
	out := new(ListInstancesResponse)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListInstances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) UpdateInstance(ctx context.Context, in *Instance, opts ...grpc.CallOption) (*Instance, error) {
	out := new(Instance)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) PartialUpdateInstance(ctx context.Context, in *PartialUpdateInstanceRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/PartialUpdateInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) DeleteInstance(ctx context.Context, in *DeleteInstanceRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteInstance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) CreateCluster(ctx context.Context, in *CreateClusterRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) GetCluster(ctx context.Context, in *GetClusterRequest, opts ...grpc.CallOption) (*Cluster, error) {
	out := new(Cluster)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) ListClusters(ctx context.Context, in *ListClustersRequest, opts ...grpc.CallOption) (*ListClustersResponse, error) {
	out := new(ListClustersResponse)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListClusters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) UpdateCluster(ctx context.Context, in *Cluster, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) DeleteCluster(ctx context.Context, in *DeleteClusterRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteCluster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) CreateAppProfile(ctx context.Context, in *CreateAppProfileRequest, opts ...grpc.CallOption) (*AppProfile, error) {
	out := new(AppProfile)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateAppProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) GetAppProfile(ctx context.Context, in *GetAppProfileRequest, opts ...grpc.CallOption) (*AppProfile, error) {
	out := new(AppProfile)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetAppProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) ListAppProfiles(ctx context.Context, in *ListAppProfilesRequest, opts ...grpc.CallOption) (*ListAppProfilesResponse, error) {
	out := new(ListAppProfilesResponse)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListAppProfiles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) UpdateAppProfile(ctx context.Context, in *UpdateAppProfileRequest, opts ...grpc.CallOption) (*longrunning.Operation, error) {
	out := new(longrunning.Operation)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateAppProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) DeleteAppProfile(ctx context.Context, in *DeleteAppProfileRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteAppProfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) GetIamPolicy(ctx context.Context, in *v1.GetIamPolicyRequest, opts ...grpc.CallOption) (*v1.Policy, error) {
	out := new(v1.Policy)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetIamPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) SetIamPolicy(ctx context.Context, in *v1.SetIamPolicyRequest, opts ...grpc.CallOption) (*v1.Policy, error) {
	out := new(v1.Policy)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/SetIamPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bigtableInstanceAdminClient) TestIamPermissions(ctx context.Context, in *v1.TestIamPermissionsRequest, opts ...grpc.CallOption) (*v1.TestIamPermissionsResponse, error) {
	out := new(v1.TestIamPermissionsResponse)
	err := c.cc.Invoke(ctx, "/google.bigtable.admin.v2.BigtableInstanceAdmin/TestIamPermissions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BigtableInstanceAdminServer is the server API for BigtableInstanceAdmin service.
type BigtableInstanceAdminServer interface {
	// Create an instance within a project.
	CreateInstance(context.Context, *CreateInstanceRequest) (*longrunning.Operation, error)
	// Gets information about an instance.
	GetInstance(context.Context, *GetInstanceRequest) (*Instance, error)
	// Lists information about instances in a project.
	ListInstances(context.Context, *ListInstancesRequest) (*ListInstancesResponse, error)
	// Updates an instance within a project.
	UpdateInstance(context.Context, *Instance) (*Instance, error)
	// Partially updates an instance within a project.
	PartialUpdateInstance(context.Context, *PartialUpdateInstanceRequest) (*longrunning.Operation, error)
	// Delete an instance from a project.
	DeleteInstance(context.Context, *DeleteInstanceRequest) (*empty.Empty, error)
	// Creates a cluster within an instance.
	CreateCluster(context.Context, *CreateClusterRequest) (*longrunning.Operation, error)
	// Gets information about a cluster.
	GetCluster(context.Context, *GetClusterRequest) (*Cluster, error)
	// Lists information about clusters in an instance.
	ListClusters(context.Context, *ListClustersRequest) (*ListClustersResponse, error)
	// Updates a cluster within an instance.
	UpdateCluster(context.Context, *Cluster) (*longrunning.Operation, error)
	// Deletes a cluster from an instance.
	DeleteCluster(context.Context, *DeleteClusterRequest) (*empty.Empty, error)
	// Creates an app profile within an instance.
	CreateAppProfile(context.Context, *CreateAppProfileRequest) (*AppProfile, error)
	// Gets information about an app profile.
	GetAppProfile(context.Context, *GetAppProfileRequest) (*AppProfile, error)
	// Lists information about app profiles in an instance.
	ListAppProfiles(context.Context, *ListAppProfilesRequest) (*ListAppProfilesResponse, error)
	// Updates an app profile within an instance.
	UpdateAppProfile(context.Context, *UpdateAppProfileRequest) (*longrunning.Operation, error)
	// Deletes an app profile from an instance.
	DeleteAppProfile(context.Context, *DeleteAppProfileRequest) (*empty.Empty, error)
	// Gets the access control policy for an instance resource. Returns an empty
	// policy if an instance exists but does not have a policy set.
	GetIamPolicy(context.Context, *v1.GetIamPolicyRequest) (*v1.Policy, error)
	// Sets the access control policy on an instance resource. Replaces any
	// existing policy.
	SetIamPolicy(context.Context, *v1.SetIamPolicyRequest) (*v1.Policy, error)
	// Returns permissions that the caller has on the specified instance resource.
	TestIamPermissions(context.Context, *v1.TestIamPermissionsRequest) (*v1.TestIamPermissionsResponse, error)
}

func RegisterBigtableInstanceAdminServer(s *grpc.Server, srv BigtableInstanceAdminServer) {
	s.RegisterService(&_BigtableInstanceAdmin_serviceDesc, srv)
}

func _BigtableInstanceAdmin_CreateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).CreateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).CreateInstance(ctx, req.(*CreateInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_GetInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).GetInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).GetInstance(ctx, req.(*GetInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_ListInstances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListInstancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).ListInstances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListInstances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).ListInstances(ctx, req.(*ListInstancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_UpdateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Instance)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).UpdateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).UpdateInstance(ctx, req.(*Instance))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_PartialUpdateInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PartialUpdateInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).PartialUpdateInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/PartialUpdateInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).PartialUpdateInstance(ctx, req.(*PartialUpdateInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_DeleteInstance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteInstanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).DeleteInstance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteInstance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).DeleteInstance(ctx, req.(*DeleteInstanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_CreateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).CreateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).CreateCluster(ctx, req.(*CreateClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_GetCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).GetCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).GetCluster(ctx, req.(*GetClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_ListClusters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClustersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).ListClusters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListClusters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).ListClusters(ctx, req.(*ListClustersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_UpdateCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cluster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).UpdateCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).UpdateCluster(ctx, req.(*Cluster))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_DeleteCluster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteClusterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).DeleteCluster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteCluster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).DeleteCluster(ctx, req.(*DeleteClusterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_CreateAppProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAppProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).CreateAppProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/CreateAppProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).CreateAppProfile(ctx, req.(*CreateAppProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_GetAppProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).GetAppProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetAppProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).GetAppProfile(ctx, req.(*GetAppProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_ListAppProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAppProfilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).ListAppProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/ListAppProfiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).ListAppProfiles(ctx, req.(*ListAppProfilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_UpdateAppProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAppProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).UpdateAppProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/UpdateAppProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).UpdateAppProfile(ctx, req.(*UpdateAppProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_DeleteAppProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAppProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).DeleteAppProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/DeleteAppProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).DeleteAppProfile(ctx, req.(*DeleteAppProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_GetIamPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.GetIamPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).GetIamPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/GetIamPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).GetIamPolicy(ctx, req.(*v1.GetIamPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_SetIamPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.SetIamPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).SetIamPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/SetIamPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).SetIamPolicy(ctx, req.(*v1.SetIamPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BigtableInstanceAdmin_TestIamPermissions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.TestIamPermissionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BigtableInstanceAdminServer).TestIamPermissions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.bigtable.admin.v2.BigtableInstanceAdmin/TestIamPermissions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BigtableInstanceAdminServer).TestIamPermissions(ctx, req.(*v1.TestIamPermissionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BigtableInstanceAdmin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.bigtable.admin.v2.BigtableInstanceAdmin",
	HandlerType: (*BigtableInstanceAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateInstance",
			Handler:    _BigtableInstanceAdmin_CreateInstance_Handler,
		},
		{
			MethodName: "GetInstance",
			Handler:    _BigtableInstanceAdmin_GetInstance_Handler,
		},
		{
			MethodName: "ListInstances",
			Handler:    _BigtableInstanceAdmin_ListInstances_Handler,
		},
		{
			MethodName: "UpdateInstance",
			Handler:    _BigtableInstanceAdmin_UpdateInstance_Handler,
		},
		{
			MethodName: "PartialUpdateInstance",
			Handler:    _BigtableInstanceAdmin_PartialUpdateInstance_Handler,
		},
		{
			MethodName: "DeleteInstance",
			Handler:    _BigtableInstanceAdmin_DeleteInstance_Handler,
		},
		{
			MethodName: "CreateCluster",
			Handler:    _BigtableInstanceAdmin_CreateCluster_Handler,
		},
		{
			MethodName: "GetCluster",
			Handler:    _BigtableInstanceAdmin_GetCluster_Handler,
		},
		{
			MethodName: "ListClusters",
			Handler:    _BigtableInstanceAdmin_ListClusters_Handler,
		},
		{
			MethodName: "UpdateCluster",
			Handler:    _BigtableInstanceAdmin_UpdateCluster_Handler,
		},
		{
			MethodName: "DeleteCluster",
			Handler:    _BigtableInstanceAdmin_DeleteCluster_Handler,
		},
		{
			MethodName: "CreateAppProfile",
			Handler:    _BigtableInstanceAdmin_CreateAppProfile_Handler,
		},
		{
			MethodName: "GetAppProfile",
			Handler:    _BigtableInstanceAdmin_GetAppProfile_Handler,
		},
		{
			MethodName: "ListAppProfiles",
			Handler:    _BigtableInstanceAdmin_ListAppProfiles_Handler,
		},
		{
			MethodName: "UpdateAppProfile",
			Handler:    _BigtableInstanceAdmin_UpdateAppProfile_Handler,
		},
		{
			MethodName: "DeleteAppProfile",
			Handler:    _BigtableInstanceAdmin_DeleteAppProfile_Handler,
		},
		{
			MethodName: "GetIamPolicy",
			Handler:    _BigtableInstanceAdmin_GetIamPolicy_Handler,
		},
		{
			MethodName: "SetIamPolicy",
			Handler:    _BigtableInstanceAdmin_SetIamPolicy_Handler,
		},
		{
			MethodName: "TestIamPermissions",
			Handler:    _BigtableInstanceAdmin_TestIamPermissions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "google/bigtable/admin/v2/bigtable_instance_admin.proto",
}

func init() {
	proto.RegisterFile("google/bigtable/admin/v2/bigtable_instance_admin.proto", fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f)
}

var fileDescriptor_bigtable_instance_admin_8d2ac73e5c48a41f = []byte{
	// 1592 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0xcd, 0x6f, 0xdc, 0x44,
	0x14, 0xd7, 0xec, 0xb6, 0x25, 0x79, 0x9b, 0x2f, 0x86, 0x26, 0x59, 0xb9, 0x5f, 0xa9, 0x5b, 0xb5,
	0xe9, 0x36, 0xd8, 0x64, 0x41, 0x6d, 0x95, 0x90, 0x8a, 0x36, 0x2d, 0x51, 0x50, 0x2a, 0xa2, 0x6d,
	0x29, 0x6a, 0x15, 0xb1, 0x9a, 0x64, 0x27, 0x8b, 0x89, 0xd7, 0x36, 0xb6, 0x37, 0xd0, 0xa2, 0x5e,
	0x10, 0x42, 0xa8, 0x12, 0x1c, 0x40, 0xe2, 0x52, 0xc1, 0x85, 0x0b, 0xaa, 0x10, 0x88, 0x03, 0xdc,
	0xb8, 0x82, 0x04, 0x47, 0xfe, 0x02, 0x24, 0xce, 0x88, 0x1b, 0x57, 0x34, 0xe3, 0x19, 0xaf, 0xed,
	0xb5, 0xd7, 0x4e, 0xab, 0x4a, 0x3d, 0x75, 0x3d, 0xf3, 0xe6, 0xcd, 0xef, 0xbd, 0xf7, 0x7b, 0x6f,
	0xde, 0x4b, 0xe1, 0x5c, 0xdb, 0xb6, 0xdb, 0x26, 0xd5, 0x37, 0x8d, 0xb6, 0x4f, 0x36, 0x4d, 0xaa,
	0x93, 0x56, 0xc7, 0xb0, 0xf4, 0xdd, 0x7a, 0xb8, 0xd2, 0x34, 0x2c, 0xcf, 0x27, 0xd6, 0x16, 0x6d,
	0xf2, 0x2d, 0xcd, 0x71, 0x6d, 0xdf, 0xc6, 0xd5, 0xe0, 0x9c, 0x26, 0xa5, 0xb4, 0x60, 0x73, 0xb7,
	0xae, 0x1c, 0x16, 0x1a, 0x89, 0x63, 0xe8, 0xc4, 0xb2, 0x6c, 0x9f, 0xf8, 0x86, 0x6d, 0x79, 0xc1,
	0x39, 0xe5, 0x74, 0xe6, 0x7d, 0xf2, 0x1a, 0x21, 0x78, 0x54, 0x08, 0x1a, 0xa4, 0xa3, 0xef, 0xce,
	0xb3, 0x7f, 0x9a, 0x8e, 0x6d, 0x1a, 0x5b, 0x77, 0xc4, 0xbe, 0x12, 0xdf, 0x8f, 0xed, 0x9d, 0x10,
	0x7b, 0xa6, 0x6d, 0xb5, 0xdd, 0xae, 0x65, 0x19, 0x56, 0x5b, 0xb7, 0x1d, 0xea, 0xc6, 0x90, 0x1c,
	0x12, 0x42, 0xfc, 0x6b, 0xb3, 0xbb, 0xad, 0xd3, 0x8e, 0xe3, 0x4b, 0x0d, 0x33, 0xc9, 0xcd, 0x6d,
	0x83, 0x9a, 0xad, 0x66, 0x87, 0x78, 0x3b, 0x42, 0xe2, 0x58, 0x52, 0xc2, 0x37, 0x3a, 0xd4, 0xf3,
	0x49, 0xc7, 0x09, 0x04, 0xd4, 0x3f, 0x4a, 0x30, 0xb9, 0xec, 0x52, 0xe2, 0xd3, 0x55, 0x61, 0x59,
	0x83, 0xbe, 0xdb, 0xa5, 0x9e, 0x8f, 0xa7, 0xe0, 0x80, 0x43, 0x5c, 0x6a, 0xf9, 0x55, 0x34, 0x83,
	0x66, 0x87, 0x1b, 0xe2, 0x0b, 0x1f, 0x83, 0x4a, 0xe8, 0x6b, 0xa3, 0x55, 0x2d, 0xf1, 0x4d, 0x90,
	0x4b, 0xab, 0x2d, 0x7c, 0x11, 0x86, 0xe4, 0x57, 0xb5, 0x3c, 0x83, 0x66, 0x2b, 0x75, 0x55, 0xcb,
	0x8a, 0x83, 0x16, 0xde, 0x1a, 0x9e, 0xc1, 0xb7, 0x60, 0x68, 0xcb, 0xec, 0x7a, 0x3e, 0x75, 0xbd,
	0xea, 0xbe, 0x99, 0xf2, 0x6c, 0xa5, 0xbe, 0x94, 0x7d, 0x3e, 0x15, 0xbb, 0xb6, 0x2c, 0xce, 0x5f,
	0xb5, 0x7c, 0xf7, 0x4e, 0x23, 0x54, 0xa7, 0xbc, 0x05, 0xa3, 0xb1, 0x2d, 0x3c, 0x01, 0xe5, 0x1d,
	0x7a, 0x47, 0x58, 0xc8, 0x7e, 0xe2, 0xf3, 0xb0, 0x7f, 0x97, 0x98, 0x5d, 0xca, 0x0d, 0xab, 0xd4,
	0x8f, 0x0f, 0xb8, 0x3a, 0xd0, 0xd4, 0x08, 0xe4, 0x17, 0x4a, 0x17, 0x90, 0x3a, 0x0b, 0x78, 0x85,
	0xfa, 0x49, 0x4f, 0x62, 0xd8, 0x67, 0x91, 0x0e, 0x15, 0xb7, 0xf0, 0xdf, 0xea, 0x35, 0x38, 0xb8,
	0x66, 0x78, 0xa1, 0xa8, 0x97, 0xe7, 0xf5, 0x23, 0x00, 0x0e, 0x69, 0xd3, 0xa6, 0x6f, 0xef, 0x50,
	0x4b, 0x38, 0x7d, 0x98, 0xad, 0xdc, 0x60, 0x0b, 0xea, 0x77, 0x08, 0x26, 0x13, 0xfa, 0x3c, 0xc7,
	0xb6, 0x3c, 0x8a, 0x5f, 0x81, 0x61, 0xe9, 0x59, 0xaf, 0x8a, 0xb8, 0x3b, 0x8b, 0x84, 0xa3, 0x77,
	0x08, 0x9f, 0x81, 0x89, 0x6d, 0x62, 0x98, 0xb4, 0xd5, 0x34, 0xed, 0xad, 0x80, 0x9c, 0xd5, 0xd2,
	0x4c, 0x79, 0x76, 0xb8, 0x31, 0x1e, 0xac, 0xaf, 0xc9, 0x65, 0x7c, 0x0a, 0xc6, 0x2d, 0xfa, 0xbe,
	0xdf, 0x8c, 0x40, 0x2d, 0x73, 0xa8, 0xa3, 0x6c, 0x79, 0x3d, 0x84, 0xfb, 0x00, 0xc1, 0xe1, 0x75,
	0xe2, 0xfa, 0x06, 0x31, 0xdf, 0x70, 0x5a, 0x29, 0xe4, 0x8b, 0x72, 0x08, 0x3d, 0x02, 0x87, 0x16,
	0xa1, 0xd2, 0xe5, 0x8a, 0x79, 0x32, 0x88, 0x58, 0x2a, 0x52, 0x85, 0xcc, 0x06, 0xed, 0x55, 0x96,
	0x2f, 0xd7, 0x88, 0xb7, 0xd3, 0x80, 0x40, 0x9c, 0xfd, 0x56, 0xcf, 0xc2, 0xe4, 0x15, 0x6a, 0xd2,
	0x7e, 0x54, 0x69, 0x81, 0xbc, 0x8f, 0xe0, 0x60, 0x40, 0x42, 0xc9, 0x87, 0xfc, 0x48, 0x0a, 0x3e,
	0xf6, 0xd2, 0x67, 0x58, 0xac, 0xac, 0xb6, 0xf0, 0x22, 0x3c, 0x23, 0x3e, 0x44, 0xf2, 0x14, 0x60,
	0xa0, 0x3c, 0xa1, 0x9e, 0x86, 0x67, 0x57, 0xa8, 0x9f, 0x00, 0x92, 0x86, 0x7a, 0x0d, 0x9e, 0x63,
	0x74, 0x91, 0xc9, 0xf0, 0x98, 0xec, 0xfb, 0x16, 0x05, 0x6c, 0xee, 0xa9, 0x13, 0xe4, 0x5b, 0x8a,
	0xa4, 0x72, 0xc0, 0xbd, 0x02, 0xd6, 0x84, 0x47, 0x9e, 0x04, 0xf3, 0x6a, 0x70, 0x30, 0x88, 0x6d,
	0x01, 0x27, 0xfd, 0x8b, 0x60, 0x2a, 0x5e, 0x5f, 0xae, 0x51, 0x9f, 0xb4, 0x88, 0x4f, 0xf0, 0x6d,
	0x98, 0xb0, 0x5d, 0xa3, 0x6d, 0x58, 0xc4, 0x6c, 0xba, 0x81, 0x0a, 0xc1, 0x53, 0x7d, 0x8f, 0xb5,
	0xaa, 0x31, 0x2e, 0x15, 0x49, 0x28, 0x4b, 0x30, 0x22, 0x54, 0x36, 0x59, 0xb5, 0xce, 0x24, 0xef,
	0x0d, 0x59, 0xca, 0x1b, 0x15, 0x21, 0xcf, 0x56, 0x18, 0xf5, 0xb7, 0x0d, 0xcb, 0xf0, 0xde, 0x0e,
	0x4e, 0x97, 0x73, 0x4f, 0x43, 0x20, 0xce, 0x16, 0xd4, 0xff, 0x10, 0x4c, 0xc5, 0x33, 0x32, 0x34,
	0x99, 0x64, 0x9a, 0x7c, 0x2e, 0xdb, 0xe4, 0x41, 0x49, 0xfe, 0x74, 0x59, 0xfe, 0x0f, 0x92, 0x0f,
	0xa1, 0x60, 0x46, 0x68, 0xf8, 0xad, 0x4c, 0xc3, 0xb5, 0xbc, 0x58, 0xc7, 0x49, 0xf6, 0x74, 0x19,
	0xfc, 0x17, 0x82, 0xc9, 0x20, 0x2e, 0x49, 0x83, 0xd7, 0x32, 0x0d, 0x2e, 0x90, 0xbd, 0x4f, 0x95,
	0x8d, 0xbf, 0x21, 0x98, 0x0e, 0x22, 0x71, 0xc9, 0x71, 0xd6, 0x5d, 0x7b, 0xdb, 0x30, 0x73, 0xfb,
	0x9b, 0x93, 0x30, 0x46, 0x1c, 0xa7, 0xe9, 0x04, 0xd2, 0xbd, 0x1a, 0x3d, 0x42, 0x42, 0x15, 0xab,
	0x2d, 0x7c, 0x15, 0x2a, 0x11, 0x29, 0x01, 0xeb, 0x64, 0xb6, 0x7b, 0x22, 0xf7, 0x43, 0x4f, 0x11,
	0x3e, 0x0d, 0xe3, 0x46, 0xdb, 0xb2, 0x5d, 0xda, 0x7c, 0x8f, 0xb8, 0xac, 0x03, 0x64, 0x2d, 0x0f,
	0x9a, 0x1d, 0x6a, 0x8c, 0x05, 0xcb, 0x6f, 0x8a, 0x55, 0x56, 0xb7, 0x56, 0xa8, 0xdf, 0x6f, 0x45,
	0x5a, 0xdd, 0x32, 0x61, 0x8a, 0x55, 0xe3, 0x9e, 0x70, 0x6e, 0x7d, 0x3f, 0x04, 0xbc, 0x9a, 0x37,
	0x3d, 0xe3, 0x6e, 0x60, 0xcb, 0xfe, 0xc6, 0x10, 0x5b, 0xb8, 0x6e, 0xdc, 0xa5, 0x79, 0xc5, 0xff,
	0x27, 0x04, 0xd3, 0x7d, 0xd7, 0x89, 0xfa, 0xbf, 0x02, 0x23, 0x11, 0x2f, 0xc9, 0x37, 0xa0, 0x98,
	0x9b, 0x2a, 0x3d, 0x37, 0xa5, 0x96, 0xf7, 0x52, 0x4a, 0x79, 0x4f, 0x7d, 0x31, 0xca, 0xa9, 0x2f,
	0x86, 0xfa, 0x2b, 0x82, 0xe9, 0x80, 0xff, 0xfd, 0x5e, 0x4d, 0x44, 0x17, 0x3d, 0x62, 0x74, 0x1f,
	0xa7, 0x0b, 0x49, 0xa3, 0x46, 0x39, 0x95, 0x1a, 0x37, 0x61, 0x3a, 0x78, 0xd2, 0x0a, 0xb1, 0x23,
	0x4d, 0x6f, 0x29, 0x55, 0xaf, 0x02, 0xd5, 0xa4, 0x7f, 0x64, 0x89, 0xa8, 0x3f, 0x9c, 0x86, 0xc9,
	0xcb, 0xc2, 0x0d, 0xb2, 0xac, 0x5f, 0x62, 0xde, 0xc0, 0x9f, 0x21, 0x18, 0x8b, 0x3f, 0x74, 0x78,
	0xaf, 0x4f, 0xa2, 0x72, 0x44, 0x1e, 0x88, 0x8c, 0x46, 0xda, 0xeb, 0x72, 0x34, 0x52, 0xe7, 0x3e,
	0xfc, 0xf3, 0xef, 0x2f, 0x4a, 0xa7, 0xd4, 0xe3, 0x6c, 0x20, 0xfb, 0x20, 0xa0, 0xf0, 0x92, 0xe3,
	0xda, 0xef, 0xd0, 0x2d, 0xdf, 0xd3, 0x6b, 0xf7, 0xc2, 0x21, 0xcd, 0x5b, 0x40, 0x35, 0x7c, 0x1f,
	0x41, 0x25, 0xd2, 0x94, 0xe3, 0xb9, 0x6c, 0x34, 0xfd, 0xbd, 0xbb, 0x52, 0xa0, 0xed, 0x54, 0xcf,
	0x70, 0x3c, 0x27, 0x70, 0x80, 0x87, 0x39, 0x39, 0x82, 0xa6, 0x07, 0x46, 0xaf, 0xdd, 0xc3, 0x0f,
	0x10, 0x8c, 0xc6, 0xfa, 0x74, 0x3c, 0xe0, 0x0d, 0x49, 0x1b, 0x10, 0x14, 0xbd, 0xb0, 0x7c, 0x90,
	0x83, 0x09, 0x74, 0x83, 0xbc, 0x85, 0x3f, 0x46, 0x30, 0x16, 0x7f, 0xaa, 0x71, 0x01, 0xfb, 0x0b,
	0xf9, 0x48, 0xc4, 0x4c, 0xc9, 0xf7, 0x11, 0x8b, 0x19, 0x1b, 0x67, 0x52, 0x5b, 0x07, 0xfc, 0x88,
	0xbd, 0x46, 0x1e, 0xa5, 0x5e, 0xe6, 0xf0, 0xce, 0xd5, 0x6b, 0x1c, 0x5e, 0x38, 0xe4, 0x0f, 0xc4,
	0xd9, 0x9b, 0x36, 0x3e, 0x42, 0x30, 0x16, 0x9f, 0x18, 0x06, 0x71, 0x3e, 0x75, 0xb6, 0x50, 0xa6,
	0xfa, 0xca, 0xc2, 0x55, 0x36, 0xe9, 0xcb, 0xf0, 0xd5, 0x0a, 0x90, 0xeb, 0x2b, 0x04, 0xa3, 0xb1,
	0xbe, 0x03, 0xef, 0xb1, 0x41, 0xc9, 0xf3, 0xd2, 0x12, 0xc7, 0x72, 0x5e, 0x9d, 0x4b, 0xa7, 0x52,
	0x0c, 0x8d, 0x2e, 0xbb, 0xf8, 0x05, 0x39, 0x9d, 0xe0, 0xcf, 0x11, 0x40, 0x6f, 0x3c, 0xc1, 0x67,
	0x07, 0x26, 0x62, 0x02, 0x59, 0x7e, 0xe7, 0xa1, 0xbe, 0xc4, 0xd1, 0x69, 0x78, 0x2e, 0xcf, 0x53,
	0x21, 0x34, 0xe6, 0xb4, 0x6f, 0x10, 0x8c, 0x44, 0x67, 0x17, 0xfc, 0xfc, 0xe0, 0x04, 0x4b, 0x8c,
	0x4c, 0x8a, 0x56, 0x54, 0x5c, 0xa4, 0x63, 0x1c, 0x65, 0x41, 0x1f, 0xb2, 0x22, 0x36, 0x1a, 0x6b,
	0xd6, 0x70, 0xbe, 0x43, 0xf2, 0xa2, 0x79, 0x9e, 0x23, 0x99, 0x57, 0xf6, 0xe4, 0x2f, 0x96, 0x9d,
	0x9f, 0x22, 0x18, 0x8d, 0x0d, 0x51, 0x83, 0x78, 0x96, 0x36, 0x6d, 0x65, 0x92, 0x5d, 0x38, 0xa7,
	0xb6, 0xb7, 0x10, 0xfe, 0x88, 0x60, 0x22, 0xd9, 0xe5, 0xe1, 0xf9, 0x3c, 0xea, 0xf7, 0xbd, 0x96,
	0x4a, 0xa1, 0x07, 0x5e, 0xbd, 0xc2, 0x31, 0x5e, 0x54, 0xf5, 0x22, 0x01, 0x8c, 0xf4, 0x30, 0x0b,
	0xd1, 0x96, 0x02, 0x7f, 0x8d, 0x60, 0x34, 0xd6, 0xd0, 0x0d, 0xf2, 0x61, 0x5a, 0xe7, 0x57, 0x10,
	0xad, 0x08, 0x32, 0xd6, 0x73, 0x3d, 0x1a, 0x81, 0xca, 0x9c, 0xfa, 0x03, 0x82, 0xf1, 0x44, 0x5b,
	0x87, 0x5f, 0x18, 0xcc, 0xf5, 0xfe, 0x86, 0x53, 0x99, 0xdf, 0xc3, 0x09, 0x91, 0x20, 0x71, 0xc4,
	0xc5, 0xfd, 0x8b, 0x7f, 0x46, 0x30, 0x91, 0x6c, 0x58, 0x06, 0xd1, 0x20, 0xa3, 0xf9, 0xcb, 0x4b,
	0x9b, 0x75, 0x8e, 0xef, 0xb5, 0xfa, 0x22, 0xc7, 0x17, 0x89, 0xa9, 0x56, 0xdc, 0xbb, 0x71, 0x2e,
	0x7c, 0x89, 0x60, 0x22, 0xd9, 0xc1, 0x0d, 0x02, 0x9e, 0xd1, 0xed, 0x65, 0x66, 0x95, 0xf0, 0x68,
	0x6d, 0xcf, 0x1c, 0xf8, 0x04, 0xc1, 0x08, 0xeb, 0x89, 0x48, 0x67, 0x9d, 0xff, 0xe1, 0xba, 0xd7,
	0x0d, 0x18, 0xa4, 0xa3, 0xed, 0xce, 0x6b, 0xd1, 0x4d, 0x89, 0x62, 0x32, 0x21, 0x13, 0xec, 0x86,
	0x6f, 0x47, 0x9d, 0x83, 0x70, 0xa9, 0x67, 0x77, 0xdd, 0xad, 0xec, 0xc7, 0xb5, 0x1d, 0xd1, 0xcc,
	0x6a, 0x0e, 0x83, 0x72, 0x7d, 0x10, 0x94, 0xeb, 0x4f, 0x0c, 0x8a, 0x97, 0x80, 0xf2, 0x3d, 0x02,
	0x7c, 0x83, 0x7a, 0x7c, 0x91, 0xba, 0x1d, 0xc3, 0xf3, 0xf8, 0x5f, 0xa0, 0x66, 0x13, 0x97, 0xf5,
	0x8b, 0x48, 0x58, 0x67, 0x0a, 0x48, 0x8a, 0x64, 0x58, 0xe6, 0x50, 0x97, 0xd4, 0x0b, 0xc5, 0xa0,
	0xfa, 0x7d, 0x9a, 0x16, 0x50, 0xed, 0xf2, 0x2f, 0x08, 0x0e, 0x6f, 0xd9, 0x9d, 0x4c, 0x42, 0x5d,
	0x56, 0x52, 0x5b, 0xf9, 0x75, 0xc6, 0xa2, 0x75, 0x74, 0x7b, 0x49, 0x9c, 0x6b, 0xdb, 0x26, 0xb1,
	0xda, 0x9a, 0xed, 0xb6, 0xf5, 0x36, 0xb5, 0x38, 0xc7, 0xf4, 0x60, 0x8b, 0x38, 0x86, 0xd7, 0xff,
	0x7f, 0x25, 0x8b, 0xfc, 0xc7, 0xc3, 0xd2, 0xd1, 0x95, 0xe0, 0xfc, 0xb2, 0x69, 0x77, 0x5b, 0x9a,
	0xbc, 0x4a, 0xe3, 0x77, 0x68, 0x37, 0xeb, 0xbf, 0x4b, 0x81, 0x0d, 0x2e, 0xb0, 0x21, 0x05, 0x36,
	0xb8, 0xc0, 0xc6, 0xcd, 0xfa, 0xe6, 0x01, 0x7e, 0xd7, 0x8b, 0xff, 0x07, 0x00, 0x00, 0xff, 0xff,
	0x5c, 0x29, 0x0c, 0x23, 0x06, 0x1a, 0x00, 0x00,
}
