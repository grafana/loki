// Code generated by 'ccgo unistd/gen.c -crt-import-path "" -export-defines "" -export-enums "" -export-externs X -export-fields F -export-structs "" -export-typedefs "" -header -hide _OSSwapInt16,_OSSwapInt32,_OSSwapInt64 -ignore-unsupported-alignment -o unistd/unistd_freebsd_386.go -pkgname unistd', DO NOT EDIT.

package unistd

import (
	"math"
	"reflect"
	"sync/atomic"
	"unsafe"
)

var _ = math.Pi
var _ reflect.Kind
var _ atomic.Value
var _ unsafe.Pointer

const (
	BIG_ENDIAN                          = 4321       // _endian.h:70:1:
	BYTE_ORDER                          = 1234       // _endian.h:72:1:
	CLOSE_RANGE_CLOEXEC                 = 4          // unistd.h:205:1:
	FD_SETSIZE                          = 1024       // select.h:61:1:
	F_LOCK                              = 1          // unistd.h:85:1:
	F_OK                                = 0          // unistd.h:102:1:
	F_TEST                              = 3          // unistd.h:87:1:
	F_TLOCK                             = 2          // unistd.h:86:1:
	F_ULOCK                             = 0          // unistd.h:84:1:
	LITTLE_ENDIAN                       = 1234       // _endian.h:69:1:
	L_INCR                              = 1          // unistd.h:121:1:
	L_SET                               = 0          // unistd.h:120:1:
	L_XTND                              = 2          // unistd.h:122:1:
	PDP_ENDIAN                          = 3412       // _endian.h:71:1:
	RFCENVG                             = 2048       // unistd.h:178:1:
	RFCFDG                              = 4096       // unistd.h:179:1:
	RFCNAMEG                            = 1024       // unistd.h:177:1:
	RFENVG                              = 2          // unistd.h:171:1:
	RFFDG                               = 4          // unistd.h:172:1:
	RFFLAGS                             = 2416930932 // unistd.h:195:1:
	RFHIGHPID                           = 262144     // unistd.h:184:1:
	RFKERNELONLY                        = 268828672  // unistd.h:198:1:
	RFLINUXTHPN                         = 65536      // unistd.h:182:1:
	RFMEM                               = 32         // unistd.h:175:1:
	RFNAMEG                             = 1          // unistd.h:170:1:
	RFNOTEG                             = 8          // unistd.h:173:1:
	RFNOWAIT                            = 64         // unistd.h:176:1:
	RFPPWAIT                            = 2147483648 // unistd.h:192:1:
	RFPROC                              = 16         // unistd.h:174:1:
	RFPROCDESC                          = 268435456  // unistd.h:190:1:
	RFSIGSHARE                          = 16384      // unistd.h:181:1:
	RFSPAWN                             = 2147483648 // unistd.h:194:1:
	RFSTOPPED                           = 131072     // unistd.h:183:1:
	RFTHREAD                            = 8192       // unistd.h:180:1:
	RFTSIGMASK                          = 0xFF       // unistd.h:187:1:
	RFTSIGSHIFT                         = 20         // unistd.h:186:1:
	RFTSIGZMB                           = 524288     // unistd.h:185:1:
	R_OK                                = 0x04       // unistd.h:105:1:
	SEEK_CUR                            = 1          // unistd.h:110:1:
	SEEK_DATA                           = 3          // unistd.h:114:1:
	SEEK_END                            = 2          // unistd.h:111:1:
	SEEK_HOLE                           = 4          // unistd.h:115:1:
	SEEK_SET                            = 0          // unistd.h:109:1:
	STDERR_FILENO                       = 2          // unistd.h:81:1:
	STDIN_FILENO                        = 0          // unistd.h:79:1:
	STDOUT_FILENO                       = 1          // unistd.h:80:1:
	SWAPOFF_FORCE                       = 0x00000001 // unistd.h:200:1:
	W_OK                                = 0x02       // unistd.h:104:1:
	X_OK                                = 0x01       // unistd.h:103:1:
	X_ACCMODE_T_DECLARED                = 0          // types.h:166:1:
	X_BIG_ENDIAN                        = 4321       // _endian.h:47:1:
	X_BLKCNT_T_DECLARED                 = 0          // types.h:90:1:
	X_BLKSIZE_T_DECLARED                = 0          // types.h:81:1:
	X_BYTE_ORDER                        = 1234       // _endian.h:40:1:
	X_CAP_IOCTL_T_DECLARED              = 0          // types.h:243:1:
	X_CAP_RIGHTS_T_DECLARED             = 0          // types.h:248:1:
	X_CLOCKID_T_DECLARED                = 0          // types.h:100:1:
	X_CLOCK_T_DECLARED                  = 0          // types.h:95:1:
	X_CS_PATH                           = 1          // unistd.h:302:1:
	X_CS_POSIX_V6_ILP32_OFF32_CFLAGS    = 2          // unistd.h:306:1:
	X_CS_POSIX_V6_ILP32_OFF32_LDFLAGS   = 3          // unistd.h:307:1:
	X_CS_POSIX_V6_ILP32_OFF32_LIBS      = 4          // unistd.h:308:1:
	X_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS   = 5          // unistd.h:309:1:
	X_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS  = 6          // unistd.h:310:1:
	X_CS_POSIX_V6_ILP32_OFFBIG_LIBS     = 7          // unistd.h:311:1:
	X_CS_POSIX_V6_LP64_OFF64_CFLAGS     = 8          // unistd.h:312:1:
	X_CS_POSIX_V6_LP64_OFF64_LDFLAGS    = 9          // unistd.h:313:1:
	X_CS_POSIX_V6_LP64_OFF64_LIBS       = 10         // unistd.h:314:1:
	X_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS   = 11         // unistd.h:315:1:
	X_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS  = 12         // unistd.h:316:1:
	X_CS_POSIX_V6_LPBIG_OFFBIG_LIBS     = 13         // unistd.h:317:1:
	X_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS = 14         // unistd.h:318:1:
	X_DEV_T_DECLARED                    = 0          // types.h:108:1:
	X_FFLAGS_T_DECLARED                 = 0          // types.h:113:1:
	X_FILE_OFFSET_BITS                  = 64         // <builtin>:25:1:
	X_FSBLKCNT_T_DECLARED               = 0          // types.h:121:1:
	X_FTRUNCATE_DECLARED                = 0          // types.h:417:1:
	X_GETOPT_DECLARED                   = 0          // unistd.h:378:1:
	X_GID_T_DECLARED                    = 0          // types.h:126:1:
	X_ID_T_DECLARED                     = 0          // types.h:141:1:
	X_ILP32                             = 1          // <predefined>:1:1:
	X_INO_T_DECLARED                    = 0          // types.h:146:1:
	X_INT16_T_DECLARED                  = 0          // _stdint.h:42:1:
	X_INT32_T_DECLARED                  = 0          // _stdint.h:47:1:
	X_INT64_T_DECLARED                  = 0          // _stdint.h:52:1:
	X_INT8_T_DECLARED                   = 0          // _stdint.h:37:1:
	X_INTMAX_T_DECLARED                 = 0          // _stdint.h:85:1:
	X_INTPTR_T_DECLARED                 = 0          // _stdint.h:77:1:
	X_IN_ADDR_T_DECLARED                = 0          // types.h:131:1:
	X_IN_PORT_T_DECLARED                = 0          // types.h:136:1:
	X_KEY_T_DECLARED                    = 0          // types.h:151:1:
	X_LITTLE_ENDIAN                     = 1234       // _endian.h:46:1:
	X_LSEEK_DECLARED                    = 0          // types.h:421:1:
	X_LWPID_T_DECLARED                  = 0          // types.h:156:1:
	X_MACHINE_ENDIAN_H_                 = 0          // endian.h:36:1:
	X_MACHINE__LIMITS_H_                = 0          // _limits.h:36:1:
	X_MACHINE__TYPES_H_                 = 0          // _types.h:42:1:
	X_MKDTEMP_DECLARED                  = 0          // unistd.h:528:1:
	X_MKNOD_DECLARED                    = 0          // unistd.h:532:1:
	X_MKSTEMP_DECLARED                  = 0          // unistd.h:536:1:
	X_MKTEMP_DECLARED                   = 0          // unistd.h:541:1:
	X_MMAP_DECLARED                     = 0          // types.h:425:1:
	X_MODE_T_DECLARED                   = 0          // types.h:161:1:
	X_MQD_T_DECLARED                    = 0          // types.h:227:1:
	X_NLINK_T_DECLARED                  = 0          // types.h:171:1:
	X_Nonnull                           = 0          // cdefs.h:790:1:
	X_Null_unspecified                  = 0          // cdefs.h:792:1:
	X_Nullable                          = 0          // cdefs.h:791:1:
	X_OFF64_T_DECLARED                  = 0          // types.h:181:1:
	X_OFF_T_DECLARED                    = 0          // types.h:176:1:
	X_OPTRESET_DECLARED                 = 0          // unistd.h:592:1:
	X_PC_ACL_EXTENDED                   = 59         // unistd.h:153:1:
	X_PC_ACL_NFS4                       = 64         // unistd.h:158:1:
	X_PC_ACL_PATH_MAX                   = 60         // unistd.h:154:1:
	X_PC_ALLOC_SIZE_MIN                 = 10         // unistd.h:143:1:
	X_PC_ASYNC_IO                       = 53         // unistd.h:137:1:
	X_PC_CAP_PRESENT                    = 61         // unistd.h:155:1:
	X_PC_CHOWN_RESTRICTED               = 7          // unistd.h:132:1:
	X_PC_FILESIZEBITS                   = 12         // unistd.h:144:1:
	X_PC_INF_PRESENT                    = 62         // unistd.h:156:1:
	X_PC_LINK_MAX                       = 1          // unistd.h:126:1:
	X_PC_MAC_PRESENT                    = 63         // unistd.h:157:1:
	X_PC_MAX_CANON                      = 2          // unistd.h:127:1:
	X_PC_MAX_INPUT                      = 3          // unistd.h:128:1:
	X_PC_MIN_HOLE_SIZE                  = 21         // unistd.h:162:1:
	X_PC_NAME_MAX                       = 4          // unistd.h:129:1:
	X_PC_NO_TRUNC                       = 8          // unistd.h:133:1:
	X_PC_PATH_MAX                       = 5          // unistd.h:130:1:
	X_PC_PIPE_BUF                       = 6          // unistd.h:131:1:
	X_PC_PRIO_IO                        = 54         // unistd.h:138:1:
	X_PC_REC_INCR_XFER_SIZE             = 14         // unistd.h:145:1:
	X_PC_REC_MAX_XFER_SIZE              = 15         // unistd.h:146:1:
	X_PC_REC_MIN_XFER_SIZE              = 16         // unistd.h:147:1:
	X_PC_REC_XFER_ALIGN                 = 17         // unistd.h:148:1:
	X_PC_SYMLINK_MAX                    = 18         // unistd.h:149:1:
	X_PC_SYNC_IO                        = 55         // unistd.h:139:1:
	X_PC_VDISABLE                       = 9          // unistd.h:134:1:
	X_PDP_ENDIAN                        = 3412       // _endian.h:48:1:
	X_PID_T_DECLARED                    = 0          // types.h:186:1:
	X_POSIX2_CHAR_TERM                  = 1          // unistd.h:127:1:
	X_POSIX2_C_BIND                     = 200112     // unistd.h:125:1:
	X_POSIX2_C_DEV                      = -1         // unistd.h:126:1:
	X_POSIX2_FORT_DEV                   = -1         // unistd.h:128:1:
	X_POSIX2_FORT_RUN                   = 200112     // unistd.h:129:1:
	X_POSIX2_LOCALEDEF                  = -1         // unistd.h:130:1:
	X_POSIX2_PBS                        = -1         // unistd.h:131:1:
	X_POSIX2_PBS_ACCOUNTING             = -1         // unistd.h:132:1:
	X_POSIX2_PBS_CHECKPOINT             = -1         // unistd.h:133:1:
	X_POSIX2_PBS_LOCATE                 = -1         // unistd.h:134:1:
	X_POSIX2_PBS_MESSAGE                = -1         // unistd.h:135:1:
	X_POSIX2_PBS_TRACK                  = -1         // unistd.h:136:1:
	X_POSIX2_SW_DEV                     = -1         // unistd.h:137:1:
	X_POSIX2_UPE                        = 200112     // unistd.h:138:1:
	X_POSIX2_VERSION                    = 199212     // unistd.h:154:1:
	X_POSIX_ADVISORY_INFO               = 200112     // unistd.h:54:1:
	X_POSIX_ASYNCHRONOUS_IO             = 200112     // unistd.h:55:1:
	X_POSIX_BARRIERS                    = 200112     // unistd.h:104:1:
	X_POSIX_CHOWN_RESTRICTED            = 1          // unistd.h:56:1:
	X_POSIX_CLOCK_SELECTION             = -1         // unistd.h:57:1:
	X_POSIX_CPUTIME                     = 200112     // unistd.h:105:1:
	X_POSIX_FSYNC                       = 200112     // unistd.h:59:1:
	X_POSIX_IPV6                        = 0          // unistd.h:60:1:
	X_POSIX_JOB_CONTROL                 = 1          // unistd.h:61:1:
	X_POSIX_MAPPED_FILES                = 200112     // unistd.h:62:1:
	X_POSIX_MEMLOCK                     = -1         // unistd.h:63:1:
	X_POSIX_MEMLOCK_RANGE               = 200112     // unistd.h:64:1:
	X_POSIX_MEMORY_PROTECTION           = 200112     // unistd.h:65:1:
	X_POSIX_MESSAGE_PASSING             = 200112     // unistd.h:66:1:
	X_POSIX_MONOTONIC_CLOCK             = 200112     // unistd.h:67:1:
	X_POSIX_NO_TRUNC                    = 1          // unistd.h:68:1:
	X_POSIX_PRIORITIZED_IO              = -1         // unistd.h:69:1:
	X_POSIX_PRIORITY_SCHEDULING         = 0          // unistd.h:70:1:
	X_POSIX_RAW_SOCKETS                 = 200112     // unistd.h:71:1:
	X_POSIX_READER_WRITER_LOCKS         = 200112     // unistd.h:106:1:
	X_POSIX_REALTIME_SIGNALS            = 200112     // unistd.h:72:1:
	X_POSIX_REGEXP                      = 1          // unistd.h:107:1:
	X_POSIX_SEMAPHORES                  = 200112     // unistd.h:73:1:
	X_POSIX_SHARED_MEMORY_OBJECTS       = 200112     // unistd.h:74:1:
	X_POSIX_SHELL                       = 1          // unistd.h:108:1:
	X_POSIX_SPAWN                       = 200112     // unistd.h:109:1:
	X_POSIX_SPIN_LOCKS                  = 200112     // unistd.h:110:1:
	X_POSIX_SPORADIC_SERVER             = -1         // unistd.h:75:1:
	X_POSIX_SYNCHRONIZED_IO             = -1         // unistd.h:76:1:
	X_POSIX_THREADS                     = 200112     // unistd.h:120:1:
	X_POSIX_THREAD_ATTR_STACKADDR       = 200112     // unistd.h:111:1:
	X_POSIX_THREAD_ATTR_STACKSIZE       = 200112     // unistd.h:112:1:
	X_POSIX_THREAD_CPUTIME              = 200112     // unistd.h:113:1:
	X_POSIX_THREAD_PRIORITY_SCHEDULING  = 200112     // unistd.h:116:1:
	X_POSIX_THREAD_PRIO_INHERIT         = 200112     // unistd.h:114:1:
	X_POSIX_THREAD_PRIO_PROTECT         = 200112     // unistd.h:115:1:
	X_POSIX_THREAD_PROCESS_SHARED       = 200112     // unistd.h:117:1:
	X_POSIX_THREAD_SAFE_FUNCTIONS       = -1         // unistd.h:118:1:
	X_POSIX_THREAD_SPORADIC_SERVER      = -1         // unistd.h:119:1:
	X_POSIX_TIMEOUTS                    = 200112     // unistd.h:77:1:
	X_POSIX_TIMERS                      = 200112     // unistd.h:78:1:
	X_POSIX_TRACE                       = -1         // unistd.h:121:1:
	X_POSIX_TRACE_EVENT_FILTER          = -1         // unistd.h:122:1:
	X_POSIX_TRACE_INHERIT               = -1         // unistd.h:123:1:
	X_POSIX_TRACE_LOG                   = -1         // unistd.h:124:1:
	X_POSIX_TYPED_MEMORY_OBJECTS        = -1         // unistd.h:79:1:
	X_POSIX_VDISABLE                    = 0xff       // unistd.h:80:1:
	X_POSIX_VERSION                     = 200112     // unistd.h:99:1:
	X_PTHREAD_T_DECLARED                = 0          // _pthreadtypes.h:68:1:
	X_QUAD_HIGHWORD                     = 1          // _endian.h:55:1:
	X_QUAD_LOWWORD                      = 0          // _endian.h:56:1:
	X_RLIM_T_DECLARED                   = 0          // types.h:193:1:
	X_SC_2_CHAR_TERM                    = 20         // unistd.h:184:1:
	X_SC_2_C_BIND                       = 18         // unistd.h:182:1:
	X_SC_2_C_DEV                        = 19         // unistd.h:183:1:
	X_SC_2_FORT_DEV                     = 21         // unistd.h:185:1:
	X_SC_2_FORT_RUN                     = 22         // unistd.h:186:1:
	X_SC_2_LOCALEDEF                    = 23         // unistd.h:187:1:
	X_SC_2_PBS                          = 59         // unistd.h:222:1:
	X_SC_2_PBS_ACCOUNTING               = 60         // unistd.h:223:1:
	X_SC_2_PBS_CHECKPOINT               = 61         // unistd.h:224:1:
	X_SC_2_PBS_LOCATE                   = 62         // unistd.h:225:1:
	X_SC_2_PBS_MESSAGE                  = 63         // unistd.h:226:1:
	X_SC_2_PBS_TRACK                    = 64         // unistd.h:227:1:
	X_SC_2_SW_DEV                       = 24         // unistd.h:188:1:
	X_SC_2_UPE                          = 25         // unistd.h:189:1:
	X_SC_2_VERSION                      = 17         // unistd.h:181:1:
	X_SC_ADVISORY_INFO                  = 65         // unistd.h:228:1:
	X_SC_AIO_LISTIO_MAX                 = 42         // unistd.h:208:1:
	X_SC_AIO_MAX                        = 43         // unistd.h:209:1:
	X_SC_AIO_PRIO_DELTA_MAX             = 44         // unistd.h:210:1:
	X_SC_ARG_MAX                        = 1          // unistd.h:165:1:
	X_SC_ASYNCHRONOUS_IO                = 28         // unistd.h:194:1:
	X_SC_ATEXIT_MAX                     = 107        // unistd.h:276:1:
	X_SC_BARRIERS                       = 66         // unistd.h:229:1:
	X_SC_BC_BASE_MAX                    = 9          // unistd.h:173:1:
	X_SC_BC_DIM_MAX                     = 10         // unistd.h:174:1:
	X_SC_BC_SCALE_MAX                   = 11         // unistd.h:175:1:
	X_SC_BC_STRING_MAX                  = 12         // unistd.h:176:1:
	X_SC_CHILD_MAX                      = 2          // unistd.h:166:1:
	X_SC_CLK_TCK                        = 3          // unistd.h:167:1:
	X_SC_CLOCK_SELECTION                = 67         // unistd.h:230:1:
	X_SC_COLL_WEIGHTS_MAX               = 13         // unistd.h:177:1:
	X_SC_CPUSET_SIZE                    = 122        // unistd.h:294:1:
	X_SC_CPUTIME                        = 68         // unistd.h:231:1:
	X_SC_DELAYTIMER_MAX                 = 45         // unistd.h:211:1:
	X_SC_EXPR_NEST_MAX                  = 14         // unistd.h:178:1:
	X_SC_FILE_LOCKING                   = 69         // unistd.h:232:1:
	X_SC_FSYNC                          = 38         // unistd.h:204:1:
	X_SC_GETGR_R_SIZE_MAX               = 70         // unistd.h:233:1:
	X_SC_GETPW_R_SIZE_MAX               = 71         // unistd.h:234:1:
	X_SC_HOST_NAME_MAX                  = 72         // unistd.h:235:1:
	X_SC_IOV_MAX                        = 56         // unistd.h:277:1:
	X_SC_IPV6                           = 118        // unistd.h:270:1:
	X_SC_JOB_CONTROL                    = 6          // unistd.h:170:1:
	X_SC_LINE_MAX                       = 15         // unistd.h:179:1:
	X_SC_LOGIN_NAME_MAX                 = 73         // unistd.h:236:1:
	X_SC_MAPPED_FILES                   = 29         // unistd.h:195:1:
	X_SC_MEMLOCK                        = 30         // unistd.h:196:1:
	X_SC_MEMLOCK_RANGE                  = 31         // unistd.h:197:1:
	X_SC_MEMORY_PROTECTION              = 32         // unistd.h:198:1:
	X_SC_MESSAGE_PASSING                = 33         // unistd.h:199:1:
	X_SC_MONOTONIC_CLOCK                = 74         // unistd.h:237:1:
	X_SC_MQ_OPEN_MAX                    = 46         // unistd.h:212:1:
	X_SC_MQ_PRIO_MAX                    = 75         // unistd.h:238:1:
	X_SC_NGROUPS_MAX                    = 4          // unistd.h:168:1:
	X_SC_NPROCESSORS_CONF               = 57         // unistd.h:292:1:
	X_SC_NPROCESSORS_ONLN               = 58         // unistd.h:293:1:
	X_SC_OPEN_MAX                       = 5          // unistd.h:169:1:
	X_SC_PAGESIZE                       = 47         // unistd.h:213:1:
	X_SC_PAGE_SIZE                      = 47         // unistd.h:278:1:
	X_SC_PHYS_PAGES                     = 121        // unistd.h:298:1:
	X_SC_PRIORITIZED_IO                 = 34         // unistd.h:200:1:
	X_SC_PRIORITY_SCHEDULING            = 35         // unistd.h:201:1:
	X_SC_RAW_SOCKETS                    = 119        // unistd.h:271:1:
	X_SC_READER_WRITER_LOCKS            = 76         // unistd.h:239:1:
	X_SC_REALTIME_SIGNALS               = 36         // unistd.h:202:1:
	X_SC_REGEXP                         = 77         // unistd.h:240:1:
	X_SC_RE_DUP_MAX                     = 16         // unistd.h:180:1:
	X_SC_RTSIG_MAX                      = 48         // unistd.h:214:1:
	X_SC_SAVED_IDS                      = 7          // unistd.h:171:1:
	X_SC_SEMAPHORES                     = 37         // unistd.h:203:1:
	X_SC_SEM_NSEMS_MAX                  = 49         // unistd.h:215:1:
	X_SC_SEM_VALUE_MAX                  = 50         // unistd.h:216:1:
	X_SC_SHARED_MEMORY_OBJECTS          = 39         // unistd.h:205:1:
	X_SC_SHELL                          = 78         // unistd.h:241:1:
	X_SC_SIGQUEUE_MAX                   = 51         // unistd.h:217:1:
	X_SC_SPAWN                          = 79         // unistd.h:242:1:
	X_SC_SPIN_LOCKS                     = 80         // unistd.h:243:1:
	X_SC_SPORADIC_SERVER                = 81         // unistd.h:244:1:
	X_SC_STREAM_MAX                     = 26         // unistd.h:190:1:
	X_SC_SYMLOOP_MAX                    = 120        // unistd.h:272:1:
	X_SC_SYNCHRONIZED_IO                = 40         // unistd.h:206:1:
	X_SC_THREADS                        = 96         // unistd.h:259:1:
	X_SC_THREAD_ATTR_STACKADDR          = 82         // unistd.h:245:1:
	X_SC_THREAD_ATTR_STACKSIZE          = 83         // unistd.h:246:1:
	X_SC_THREAD_CPUTIME                 = 84         // unistd.h:247:1:
	X_SC_THREAD_DESTRUCTOR_ITERATIONS   = 85         // unistd.h:248:1:
	X_SC_THREAD_KEYS_MAX                = 86         // unistd.h:249:1:
	X_SC_THREAD_PRIORITY_SCHEDULING     = 89         // unistd.h:252:1:
	X_SC_THREAD_PRIO_INHERIT            = 87         // unistd.h:250:1:
	X_SC_THREAD_PRIO_PROTECT            = 88         // unistd.h:251:1:
	X_SC_THREAD_PROCESS_SHARED          = 90         // unistd.h:253:1:
	X_SC_THREAD_SAFE_FUNCTIONS          = 91         // unistd.h:254:1:
	X_SC_THREAD_SPORADIC_SERVER         = 92         // unistd.h:255:1:
	X_SC_THREAD_STACK_MIN               = 93         // unistd.h:256:1:
	X_SC_THREAD_THREADS_MAX             = 94         // unistd.h:257:1:
	X_SC_TIMEOUTS                       = 95         // unistd.h:258:1:
	X_SC_TIMERS                         = 41         // unistd.h:207:1:
	X_SC_TIMER_MAX                      = 52         // unistd.h:218:1:
	X_SC_TRACE                          = 97         // unistd.h:260:1:
	X_SC_TRACE_EVENT_FILTER             = 98         // unistd.h:261:1:
	X_SC_TRACE_INHERIT                  = 99         // unistd.h:262:1:
	X_SC_TRACE_LOG                      = 100        // unistd.h:263:1:
	X_SC_TTY_NAME_MAX                   = 101        // unistd.h:264:1:
	X_SC_TYPED_MEMORY_OBJECTS           = 102        // unistd.h:265:1:
	X_SC_TZNAME_MAX                     = 27         // unistd.h:191:1:
	X_SC_V6_ILP32_OFF32                 = 103        // unistd.h:266:1:
	X_SC_V6_ILP32_OFFBIG                = 104        // unistd.h:267:1:
	X_SC_V6_LP64_OFF64                  = 105        // unistd.h:268:1:
	X_SC_V6_LPBIG_OFFBIG                = 106        // unistd.h:269:1:
	X_SC_VERSION                        = 8          // unistd.h:172:1:
	X_SC_XOPEN_CRYPT                    = 108        // unistd.h:279:1:
	X_SC_XOPEN_ENH_I18N                 = 109        // unistd.h:280:1:
	X_SC_XOPEN_LEGACY                   = 110        // unistd.h:281:1:
	X_SC_XOPEN_REALTIME                 = 111        // unistd.h:282:1:
	X_SC_XOPEN_REALTIME_THREADS         = 112        // unistd.h:283:1:
	X_SC_XOPEN_SHM                      = 113        // unistd.h:284:1:
	X_SC_XOPEN_STREAMS                  = 114        // unistd.h:285:1:
	X_SC_XOPEN_UNIX                     = 115        // unistd.h:286:1:
	X_SC_XOPEN_VERSION                  = 116        // unistd.h:287:1:
	X_SC_XOPEN_XCU_VERSION              = 117        // unistd.h:288:1:
	X_SELECT_DECLARED                   = 0          // select.h:103:1:
	X_SIGSET_T_DECLARED                 = 0          // select.h:50:1:
	X_SIG_MAXSIG                        = 128        // _sigset.h:47:1:
	X_SIG_WORDS                         = 4          // _sigset.h:46:1:
	X_SIZE_T_DECLARED                   = 0          // types.h:202:1:
	X_SSIZE_T_DECLARED                  = 0          // types.h:207:1:
	X_SUSECONDS_T_DECLARED              = 0          // types.h:212:1:
	X_SWAB_DECLARED                     = 0          // unistd.h:461:1:
	X_SYS_CDEFS_H_                      = 0          // cdefs.h:39:1:
	X_SYS_SELECT_H_                     = 0          // select.h:35:1:
	X_SYS_TIMESPEC_H_                   = 0          // timespec.h:37:1:
	X_SYS_TYPES_H_                      = 0          // types.h:41:1:
	X_SYS_UNISTD_H_                     = 0          // unistd.h:36:1:
	X_SYS__ENDIAN_H_                    = 0          // _endian.h:33:1:
	X_SYS__PTHREADTYPES_H_              = 0          // _pthreadtypes.h:39:1:
	X_SYS__SIGSET_H_                    = 0          // _sigset.h:41:1:
	X_SYS__STDINT_H_                    = 0          // _stdint.h:33:1:
	X_SYS__TIMESPEC_H_                  = 0          // _timespec.h:37:1:
	X_SYS__TIMEVAL_H_                   = 0          // _timeval.h:32:1:
	X_SYS__TYPES_H_                     = 0          // _types.h:32:1:
	X_TIMER_T_DECLARED                  = 0          // types.h:222:1:
	X_TIME_T_DECLARED                   = 0          // types.h:217:1:
	X_TRUNCATE_DECLARED                 = 0          // types.h:429:1:
	X_UID_T_DECLARED                    = 0          // types.h:234:1:
	X_UINT16_T_DECLARED                 = 0          // _stdint.h:62:1:
	X_UINT32_T_DECLARED                 = 0          // _stdint.h:67:1:
	X_UINT64_T_DECLARED                 = 0          // _stdint.h:72:1:
	X_UINT8_T_DECLARED                  = 0          // _stdint.h:57:1:
	X_UINTMAX_T_DECLARED                = 0          // _stdint.h:89:1:
	X_UINTPTR_T_DECLARED                = 0          // _stdint.h:81:1:
	X_UNISTD_H_                         = 0          // unistd.h:36:1:
	X_USECONDS_T_DECLARED               = 0          // types.h:239:1:
	X_V6_ILP32_OFF32                    = -1         // unistd.h:139:1:
	X_V6_ILP32_OFFBIG                   = 0          // unistd.h:140:1:
	X_V6_LP64_OFF64                     = 0          // unistd.h:141:1:
	X_V6_LPBIG_OFFBIG                   = -1         // unistd.h:142:1:
	X_XOPEN_CRYPT                       = -1         // unistd.h:145:1:
	X_XOPEN_ENH_I18N                    = -1         // unistd.h:146:1:
	X_XOPEN_LEGACY                      = -1         // unistd.h:147:1:
	X_XOPEN_REALTIME                    = -1         // unistd.h:148:1:
	X_XOPEN_REALTIME_THREADS            = -1         // unistd.h:149:1:
	X_XOPEN_SHM                         = 1          // unistd.h:83:1:
	X_XOPEN_STREAMS                     = -1         // unistd.h:84:1:
	X_XOPEN_UNIX                        = -1         // unistd.h:150:1:
	I386                                = 1          // <predefined>:335:1:
	Unix                                = 1          // <predefined>:336:1:
)

type Ptrdiff_t = int32 /* <builtin>:3:26 */

type Size_t = uint32 /* <builtin>:9:23 */

type Wchar_t = int32 /* <builtin>:15:24 */

type X__builtin_va_list = uintptr /* <builtin>:46:14 */
type X__float128 = float64        /* <builtin>:47:21 */

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1991, 1993, 1994
//	The Regents of the University of California.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)unistd.h	8.12 (Berkeley) 4/27/95
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1991, 1993
//	The Regents of the University of California.  All rights reserved.
//
// This code is derived from software contributed to Berkeley by
// Berkeley Software Design, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)cdefs.h	8.8 (Berkeley) 1/9/95
// $FreeBSD$

// Testing against Clang-specific extensions.

// This code has been put in place to help reduce the addition of
// compiler specific defines in FreeBSD code.  It helps to aid in
// having a compiler-agnostic source tree.

// Compiler memory barriers, specific to gcc and clang.

// XXX: if __GNUC__ >= 2: not tested everywhere originally, where replaced

// Macro to test if we're using a specific version of gcc or later.

// The __CONCAT macro is used to concatenate parts of symbol names, e.g.
// with "#define OLD(foo) __CONCAT(old,foo)", OLD(foo) produces oldfoo.
// The __CONCAT macro is a bit tricky to use if it must work in non-ANSI
// mode -- there must be no spaces between its arguments, and for nested
// __CONCAT's, all the __CONCAT's must be at the left.  __CONCAT can also
// concatenate double-quoted strings produced by the __STRING macro, but
// this only works with ANSI C.
//
// __XSTRING is like __STRING, but it expands any macros in its argument
// first.  It is only available with ANSI C.

// Compiler-dependent macros to help declare dead (non-returning) and
// pure (no side effects) functions, and unused variables.  They are
// null except for versions of gcc that are known to support the features
// properly (old versions of gcc-2 supported the dead and pure features
// in a different (wrong) way).  If we do not provide an implementation
// for a given compiler, let the compile fail if it is told to use
// a feature that we cannot live without.

// Keywords added in C11.

// Emulation of C11 _Generic().  Unlike the previously defined C11
// keywords, it is not possible to implement this using exactly the same
// syntax.  Therefore implement something similar under the name
// __generic().  Unlike _Generic(), this macro can only distinguish
// between a single type, so it requires nested invocations to
// distinguish multiple cases.

// C99 Static array indices in function parameter declarations.  Syntax such as:
// void bar(int myArray[static 10]);
// is allowed in C99 but not in C++.  Define __min_size appropriately so
// headers using it can be compiled in either language.  Use like this:
// void bar(int myArray[__min_size(10)]);

// XXX: should use `#if __STDC_VERSION__ < 199901'.

// C++11 exposes a load of C99 stuff

// GCC 2.95 provides `__restrict' as an extension to C90 to support the
// C99-specific `restrict' type qualifier.  We happen to use `__restrict' as
// a way to define the `restrict' type qualifier without disturbing older
// software that is unaware of C99 keywords.

// GNU C version 2.96 adds explicit branch prediction so that
// the CPU back-end can hint the processor and also so that
// code blocks can be reordered such that the predicted path
// sees a more linear flow, thus improving cache behavior, etc.
//
// The following two macros provide us with a way to utilize this
// compiler feature.  Use __predict_true() if you expect the expression
// to evaluate to true, and __predict_false() if you expect the
// expression to evaluate to false.
//
// A few notes about usage:
//
//	* Generally, __predict_false() error condition checks (unless
//	  you have some _strong_ reason to do otherwise, in which case
//	  document it), and/or __predict_true() `no-error' condition
//	  checks, assuming you want to optimize for the no-error case.
//
//	* Other than that, if you don't know the likelihood of a test
//	  succeeding from empirical or other `hard' evidence, don't
//	  make predictions.
//
//	* These are meant to be used in places that are run `a lot'.
//	  It is wasteful to make predictions in code that is run
//	  seldomly (e.g. at subsystem initialization time) as the
//	  basic block reordering that this affects can often generate
//	  larger code.

// We define this here since <stddef.h>, <sys/queue.h>, and <sys/types.h>
// require it.

// Given the pointer x to the member m of the struct s, return
// a pointer to the containing structure.  When using GCC, we first
// assign pointer x to a local variable, to check that its type is
// compatible with member m.

// Compiler-dependent macros to declare that functions take printf-like
// or scanf-like arguments.  They are null except for versions of gcc
// that are known to support the features properly (old versions of gcc-2
// didn't permit keeping the keywords out of the application namespace).

// Compiler-dependent macros that rely on FreeBSD-specific extensions.

// Embed the rcs id of a source file in the resulting library.  Note that in
// more recent ELF binutils, we use .ident allowing the ID to be stripped.
// Usage:
//	__FBSDID("$FreeBSD$");

// -
// The following definitions are an extension of the behavior originally
// implemented in <sys/_posix.h>, but with a different level of granularity.
// POSIX.1 requires that the macros we test be defined before any standard
// header file is included.
//
// Here's a quick run-down of the versions:
//  defined(_POSIX_SOURCE)		1003.1-1988
//  _POSIX_C_SOURCE == 1		1003.1-1990
//  _POSIX_C_SOURCE == 2		1003.2-1992 C Language Binding Option
//  _POSIX_C_SOURCE == 199309		1003.1b-1993
//  _POSIX_C_SOURCE == 199506		1003.1c-1995, 1003.1i-1995,
//					and the omnibus ISO/IEC 9945-1: 1996
//  _POSIX_C_SOURCE == 200112		1003.1-2001
//  _POSIX_C_SOURCE == 200809		1003.1-2008
//
// In addition, the X/Open Portability Guide, which is now the Single UNIX
// Specification, defines a feature-test macro which indicates the version of
// that specification, and which subsumes _POSIX_C_SOURCE.
//
// Our macros begin with two underscores to avoid namespace screwage.

// Deal with IEEE Std. 1003.1-1990, in which _POSIX_C_SOURCE == 1.

// Deal with IEEE Std. 1003.2-1992, in which _POSIX_C_SOURCE == 2.

// Deal with various X/Open Portability Guides and Single UNIX Spec.

// Deal with all versions of POSIX.  The ordering relative to the tests above is
// important.
// -
// Deal with _ANSI_SOURCE:
// If it is defined, and no other compilation environment is explicitly
// requested, then define our internal feature-test macros to zero.  This
// makes no difference to the preprocessor (undefined symbols in preprocessing
// expressions are defined to have value zero), but makes it more convenient for
// a test program to print out the values.
//
// If a program mistakenly defines _ANSI_SOURCE and some other macro such as
// _POSIX_C_SOURCE, we will assume that it wants the broader compilation
// environment (and in fact we will never get here).

// User override __EXT1_VISIBLE

// Old versions of GCC use non-standard ARM arch symbols; acle-compat.h
// translates them to __ARM_ARCH and the modern feature symbols defined by ARM.

// Nullability qualifiers: currently only supported by Clang.

// Type Safety Checking
//
// Clang provides additional attributes to enable checking type safety
// properties that cannot be enforced by the C type system.

// Lock annotations.
//
// Clang provides support for doing basic thread-safety tests at
// compile-time, by marking which locks will/should be held when
// entering/leaving a functions.
//
// Furthermore, it is also possible to annotate variables and structure
// members to enforce that they are only accessed when certain locks are
// held.

// Structure implements a lock.

// Function acquires an exclusive or shared lock.

// Function attempts to acquire an exclusive or shared lock.

// Function releases a lock.

// Function asserts that an exclusive or shared lock is held.

// Function requires that an exclusive or shared lock is or is not held.

// Function should not be analyzed.

// Function or variable should not be sanitized, e.g., by AddressSanitizer.
// GCC has the nosanitize attribute, but as a function attribute only, and
// warns on use as a variable attribute.

// Guard variables and structure members by lock.

// Alignment builtins for better type checking and improved code generation.
// Provide fallback versions for other compilers (GCC/Clang < 10):

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1982, 1986, 1991, 1993, 1994
//	The Regents of the University of California.  All rights reserved.
// (c) UNIX System Laboratories, Inc.
// All or some portions of this file are derived from material licensed
// to the University of California by American Telephone and Telegraph
// Co. or Unix System Laboratories, Inc. and are reproduced herein with
// the permission of UNIX System Laboratories, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)types.h	8.6 (Berkeley) 2/19/95
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1991, 1993
//	The Regents of the University of California.  All rights reserved.
//
// This code is derived from software contributed to Berkeley by
// Berkeley Software Design, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)cdefs.h	8.8 (Berkeley) 1/9/95
// $FreeBSD$

// Machine type dependent parameters.
// -
// This file is in the public domain.
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1987, 1991 Regents of the University of California.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)endian.h	7.8 (Berkeley) 4/3/91
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-2-Clause-FreeBSD
//
// Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1991, 1993
//	The Regents of the University of California.  All rights reserved.
//
// This code is derived from software contributed to Berkeley by
// Berkeley Software Design, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)cdefs.h	8.8 (Berkeley) 1/9/95
// $FreeBSD$

// -
// This file is in the public domain.
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-4-Clause
//
// Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>
// Copyright (c) 1990, 1993
//	The Regents of the University of California.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. All advertising materials mentioning features or use of this software
//    must display the following acknowledgement:
//	This product includes software developed by the University of
//	California, Berkeley and its contributors.
// 4. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	From: @(#)ansi.h	8.2 (Berkeley) 1/4/94
//	From: @(#)types.h	8.3 (Berkeley) 1/5/94
// $FreeBSD$

// -
// This file is in the public domain.
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1988, 1993
//	The Regents of the University of California.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)limits.h	8.3 (Berkeley) 1/4/94
// $FreeBSD$

// According to ANSI (section 2.2.4.2), the values below must be usable by
// #if preprocessing directives.  Additionally, the expression must have the
// same type as would an expression that is an object of the corresponding
// type converted according to the integral promotions.  The subtraction for
// INT_MIN, etc., is so the value is not unsigned; e.g., 0x80000000 is an
// unsigned int for 32-bit two's complement ANSI compilers (section 3.1.3.2).

// max value for an unsigned long long

// Minimum signal stack size.

// Basic types upon which most other types are built.
type X__int8_t = int8     /* _types.h:55:22 */
type X__uint8_t = uint8   /* _types.h:56:24 */
type X__int16_t = int16   /* _types.h:57:17 */
type X__uint16_t = uint16 /* _types.h:58:25 */
type X__int32_t = int32   /* _types.h:59:15 */
type X__uint32_t = uint32 /* _types.h:60:23 */

type X__int64_t = int64 /* _types.h:66:20 */

type X__uint64_t = uint64 /* _types.h:68:28 */

// Standard type definitions.
type X__clock_t = uint32             /* _types.h:84:23 */
type X__critical_t = X__int32_t      /* _types.h:85:19 */
type X__double_t = float64           /* _types.h:87:21 */
type X__float_t = float64            /* _types.h:88:21 */
type X__intfptr_t = X__int32_t       /* _types.h:90:19 */
type X__intptr_t = X__int32_t        /* _types.h:91:19 */
type X__intmax_t = X__int64_t        /* _types.h:93:19 */
type X__int_fast8_t = X__int32_t     /* _types.h:94:19 */
type X__int_fast16_t = X__int32_t    /* _types.h:95:19 */
type X__int_fast32_t = X__int32_t    /* _types.h:96:19 */
type X__int_fast64_t = X__int64_t    /* _types.h:97:19 */
type X__int_least8_t = X__int8_t     /* _types.h:98:18 */
type X__int_least16_t = X__int16_t   /* _types.h:99:19 */
type X__int_least32_t = X__int32_t   /* _types.h:100:19 */
type X__int_least64_t = X__int64_t   /* _types.h:101:19 */
type X__ptrdiff_t = X__int32_t       /* _types.h:112:19 */
type X__register_t = X__int32_t      /* _types.h:113:19 */
type X__segsz_t = X__int32_t         /* _types.h:114:19 */
type X__size_t = X__uint32_t         /* _types.h:115:20 */
type X__ssize_t = X__int32_t         /* _types.h:116:19 */
type X__time_t = X__int32_t          /* _types.h:117:19 */
type X__uintfptr_t = X__uint32_t     /* _types.h:118:20 */
type X__uintptr_t = X__uint32_t      /* _types.h:119:20 */
type X__uintmax_t = X__uint64_t      /* _types.h:121:20 */
type X__uint_fast8_t = X__uint32_t   /* _types.h:122:20 */
type X__uint_fast16_t = X__uint32_t  /* _types.h:123:20 */
type X__uint_fast32_t = X__uint32_t  /* _types.h:124:20 */
type X__uint_fast64_t = X__uint64_t  /* _types.h:125:20 */
type X__uint_least8_t = X__uint8_t   /* _types.h:126:19 */
type X__uint_least16_t = X__uint16_t /* _types.h:127:20 */
type X__uint_least32_t = X__uint32_t /* _types.h:128:20 */
type X__uint_least64_t = X__uint64_t /* _types.h:129:20 */
type X__u_register_t = X__uint32_t   /* _types.h:136:20 */
type X__vm_offset_t = X__uint32_t    /* _types.h:137:20 */
type X__vm_paddr_t = X__uint64_t     /* _types.h:138:20 */
type X__vm_size_t = X__uint32_t      /* _types.h:139:20 */
type X___wchar_t = int32             /* _types.h:141:14 */

// Standard type definitions.
type X__blksize_t = X__int32_t   /* _types.h:40:19 */ // file block size
type X__blkcnt_t = X__int64_t    /* _types.h:41:19 */ // file block count
type X__clockid_t = X__int32_t   /* _types.h:42:19 */ // clock_gettime()...
type X__fflags_t = X__uint32_t   /* _types.h:43:20 */ // file flags
type X__fsblkcnt_t = X__uint64_t /* _types.h:44:20 */
type X__fsfilcnt_t = X__uint64_t /* _types.h:45:20 */
type X__gid_t = X__uint32_t      /* _types.h:46:20 */
type X__id_t = X__int64_t        /* _types.h:47:19 */ // can hold a gid_t, pid_t, or uid_t
type X__ino_t = X__uint64_t      /* _types.h:48:20 */ // inode number
type X__key_t = int32            /* _types.h:49:15 */ // IPC key (for Sys V IPC)
type X__lwpid_t = X__int32_t     /* _types.h:50:19 */ // Thread ID (a.k.a. LWP)
type X__mode_t = X__uint16_t     /* _types.h:51:20 */ // permissions
type X__accmode_t = int32        /* _types.h:52:14 */ // access permissions
type X__nl_item = int32          /* _types.h:53:14 */
type X__nlink_t = X__uint64_t    /* _types.h:54:20 */ // link count
type X__off_t = X__int64_t       /* _types.h:55:19 */ // file offset
type X__off64_t = X__int64_t     /* _types.h:56:19 */ // file offset (alias)
type X__pid_t = X__int32_t       /* _types.h:57:19 */ // process [group]
type X__rlim_t = X__int64_t      /* _types.h:58:19 */ // resource limit - intentionally
// signed, because of legacy code
// that uses -1 for RLIM_INFINITY
type X__sa_family_t = X__uint8_t /* _types.h:61:19 */
type X__socklen_t = X__uint32_t  /* _types.h:62:20 */
type X__suseconds_t = int32      /* _types.h:63:15 */ // microseconds (signed)
type X__timer_t = uintptr        /* _types.h:64:24 */ // timer_gettime()...
type X__mqd_t = uintptr          /* _types.h:65:21 */ // mq_open()...
type X__uid_t = X__uint32_t      /* _types.h:66:20 */
type X__useconds_t = uint32      /* _types.h:67:22 */ // microseconds (unsigned)
type X__cpuwhich_t = int32       /* _types.h:68:14 */ // which parameter for cpuset.
type X__cpulevel_t = int32       /* _types.h:69:14 */ // level parameter for cpuset.
type X__cpusetid_t = int32       /* _types.h:70:14 */ // cpuset identifier.
type X__daddr_t = X__int64_t     /* _types.h:71:19 */ // bwrite(3), FIOBMAP2, etc

// Unusual type definitions.
// rune_t is declared to be an “int” instead of the more natural
// “unsigned long” or “long”.  Two things are happening here.  It is not
// unsigned so that EOF (-1) can be naturally assigned to it and used.  Also,
// it looks like 10646 will be a 31 bit standard.  This means that if your
// ints cannot hold 32 bits, you will be in trouble.  The reason an int was
// chosen over a long is that the is*() and to*() routines take ints (says
// ANSI C), but they use __ct_rune_t instead of int.
//
// NOTE: rune_t is not covered by ANSI nor other standards, and should not
// be instantiated outside of lib/libc/locale.  Use wchar_t.  wint_t and
// rune_t must be the same type.  Also, wint_t should be able to hold all
// members of the largest character set plus one extra value (WEOF), and
// must be at least 16 bits.
type X__ct_rune_t = int32     /* _types.h:91:14 */ // arg type for ctype funcs
type X__rune_t = X__ct_rune_t /* _types.h:92:21 */ // rune_t (see above)
type X__wint_t = X__ct_rune_t /* _types.h:93:21 */ // wint_t (see above)

// Clang already provides these types as built-ins, but only in C++ mode.
type X__char16_t = X__uint_least16_t /* _types.h:97:26 */
type X__char32_t = X__uint_least32_t /* _types.h:98:26 */
// In C++11, char16_t and char32_t are built-in types.

type X__max_align_t = struct {
	F__max_align1 int64
	F__max_align2 float64
} /* _types.h:111:3 */

type X__dev_t = X__uint64_t /* _types.h:113:20 */ // device number

type X__fixpt_t = X__uint32_t /* _types.h:115:20 */ // fixed point number

// mbstate_t is an opaque object to keep conversion state during multibyte
// stream conversions.
type X__mbstate_t = struct {
	F__ccgo_pad1 [0]uint32
	F__mbstate8  [128]int8
} /* _types.h:124:3 */

type X__rman_res_t = X__uintmax_t /* _types.h:126:25 */

// Types for varargs. These are all provided by builtin types these
// days, so centralize their definition.
type X__va_list = X__builtin_va_list /* _types.h:133:27 */ // internally known to gcc
type X__gnuc_va_list = X__va_list    /* _types.h:140:20 */
type Pthread_once = struct {
	Fstate int32
	Fmutex Pthread_mutex_t
} /* _pthreadtypes.h:52:1 */

// Primitive system data type definitions required by P1003.1c.
//
// Note that P1003.1c specifies that there are no defined comparison
// or assignment operators for the types pthread_attr_t, pthread_cond_t,
// pthread_condattr_t, pthread_mutex_t, pthread_mutexattr_t.
type Pthread_t = uintptr             /* _pthreadtypes.h:67:26 */
type Pthread_attr_t = uintptr        /* _pthreadtypes.h:70:30 */
type Pthread_mutex_t = uintptr       /* _pthreadtypes.h:71:31 */
type Pthread_mutexattr_t = uintptr   /* _pthreadtypes.h:72:35 */
type Pthread_cond_t = uintptr        /* _pthreadtypes.h:73:30 */
type Pthread_condattr_t = uintptr    /* _pthreadtypes.h:74:34 */
type Pthread_key_t = int32           /* _pthreadtypes.h:75:20 */
type Pthread_once_t = Pthread_once   /* _pthreadtypes.h:76:30 */
type Pthread_rwlock_t = uintptr      /* _pthreadtypes.h:77:32 */
type Pthread_rwlockattr_t = uintptr  /* _pthreadtypes.h:78:35 */
type Pthread_barrier_t = uintptr     /* _pthreadtypes.h:79:33 */
type Pthread_barrierattr_t = uintptr /* _pthreadtypes.h:80:36 */
type Pthread_spinlock_t = uintptr    /* _pthreadtypes.h:81:33 */

// Additional type definitions:
//
// Note that P1003.1c reserves the prefixes pthread_ and PTHREAD_ for
// use in header symbols.
type Pthread_addr_t = uintptr         /* _pthreadtypes.h:89:14 */
type Pthread_startroutine_t = uintptr /* _pthreadtypes.h:90:14 */

type U_char = uint8   /* types.h:52:23 */
type U_short = uint16 /* types.h:53:24 */
type U_int = uint32   /* types.h:54:22 */
type U_long = uint32  /* types.h:55:23 */
type Ushort = uint16  /* types.h:57:24 */ // Sys V compatibility
type Uint = uint32    /* types.h:58:22 */ // Sys V compatibility

// XXX POSIX sized integrals that should appear only in <sys/stdint.h>.
// -
// SPDX-License-Identifier: BSD-2-Clause-FreeBSD
//
// Copyright (c) 2011 David E. O'Brien <obrien@FreeBSD.org>
// Copyright (c) 2001 Mike Barcroft <mike@FreeBSD.org>
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

type Int8_t = X__int8_t /* _stdint.h:36:19 */

type Int16_t = X__int16_t /* _stdint.h:41:20 */

type Int32_t = X__int32_t /* _stdint.h:46:20 */

type Int64_t = X__int64_t /* _stdint.h:51:20 */

type Uint8_t = X__uint8_t /* _stdint.h:56:20 */

type Uint16_t = X__uint16_t /* _stdint.h:61:21 */

type Uint32_t = X__uint32_t /* _stdint.h:66:21 */

type Uint64_t = X__uint64_t /* _stdint.h:71:21 */

type Intptr_t = X__intptr_t   /* _stdint.h:76:21 */
type Uintptr_t = X__uintptr_t /* _stdint.h:80:22 */
type Intmax_t = X__intmax_t   /* _stdint.h:84:21 */
type Uintmax_t = X__uintmax_t /* _stdint.h:88:22 */

type U_int8_t = X__uint8_t   /* types.h:67:19 */ // unsigned integrals (deprecated)
type U_int16_t = X__uint16_t /* types.h:68:20 */
type U_int32_t = X__uint32_t /* types.h:69:20 */
type U_int64_t = X__uint64_t /* types.h:70:20 */

type U_quad_t = X__uint64_t /* types.h:72:20 */ // quads (deprecated)
type Quad_t = X__int64_t    /* types.h:73:19 */
type Qaddr_t = uintptr      /* types.h:74:16 */

type Caddr_t = uintptr   /* types.h:76:14 */ // core address
type C_caddr_t = uintptr /* types.h:77:20 */ // core address, pointer to const

type Blksize_t = X__blksize_t /* types.h:80:21 */

type Cpuwhich_t = X__cpuwhich_t /* types.h:84:22 */
type Cpulevel_t = X__cpulevel_t /* types.h:85:22 */
type Cpusetid_t = X__cpusetid_t /* types.h:86:22 */

type Blkcnt_t = X__blkcnt_t /* types.h:89:20 */

type Clock_t = X__clock_t /* types.h:94:19 */

type Clockid_t = X__clockid_t /* types.h:99:21 */

type Critical_t = X__critical_t /* types.h:103:22 */ // Critical section value
type Daddr_t = X__daddr_t       /* types.h:104:19 */ // disk address

type Dev_t = X__dev_t /* types.h:107:18 */ // device number or struct cdev

type Fflags_t = X__fflags_t /* types.h:112:20 */ // file flags

type Fixpt_t = X__fixpt_t /* types.h:116:19 */ // fixed point number

type Fsblkcnt_t = X__fsblkcnt_t /* types.h:119:22 */
type Fsfilcnt_t = X__fsfilcnt_t /* types.h:120:22 */

type Gid_t = X__gid_t /* types.h:125:18 */ // group id

type In_addr_t = X__uint32_t /* types.h:130:20 */ // base type for internet address

type In_port_t = X__uint16_t /* types.h:135:20 */

type Id_t = X__id_t /* types.h:140:17 */ // can hold a uid_t or pid_t

type Ino_t = X__ino_t /* types.h:145:18 */ // inode number

type Key_t = X__key_t /* types.h:150:18 */ // IPC key (for Sys V IPC)

type Lwpid_t = X__lwpid_t /* types.h:155:19 */ // Thread ID (a.k.a. LWP)

type Mode_t = X__mode_t /* types.h:160:18 */ // permissions

type Accmode_t = X__accmode_t /* types.h:165:21 */ // access permissions

type Nlink_t = X__nlink_t /* types.h:170:19 */ // link count

type Off_t = X__off_t /* types.h:175:18 */ // file offset

type Off64_t = X__off64_t /* types.h:180:19 */ // file offset (alias)

type Pid_t = X__pid_t /* types.h:185:18 */ // process id

type Register_t = X__register_t /* types.h:189:22 */

type Rlim_t = X__rlim_t /* types.h:192:18 */ // resource limit

type Sbintime_t = X__int64_t /* types.h:196:19 */

type Segsz_t = X__segsz_t /* types.h:198:19 */

type Ssize_t = X__ssize_t /* types.h:206:19 */

type Suseconds_t = X__suseconds_t /* types.h:211:23 */ // microseconds (signed)

type Time_t = X__time_t /* types.h:216:18 */

type Timer_t = X__timer_t /* types.h:221:19 */

type Mqd_t = X__mqd_t /* types.h:226:17 */

type U_register_t = X__u_register_t /* types.h:230:24 */

type Uid_t = X__uid_t /* types.h:233:18 */ // user id

type Useconds_t = X__useconds_t /* types.h:238:22 */ // microseconds (unsigned)

type Cap_ioctl_t = uint32 /* types.h:244:23 */

// Types suitable for exporting physical addresses, virtual addresses
// (pointers), and memory object sizes from the kernel independent of native
// word size.  These should be used in place of vm_paddr_t, (u)intptr_t, and
// size_t in structs which contain such types that are shared with userspace.
type Kpaddr_t = X__uint64_t /* types.h:260:20 */
type Kvaddr_t = X__uint64_t /* types.h:261:20 */
type Ksize_t = X__uint64_t  /* types.h:262:20 */
type Kssize_t = X__int64_t  /* types.h:263:19 */

type Vm_offset_t = X__vm_offset_t /* types.h:265:23 */
type Vm_ooffset_t = X__uint64_t   /* types.h:266:20 */
type Vm_paddr_t = X__vm_paddr_t   /* types.h:267:22 */
type Vm_pindex_t = X__uint64_t    /* types.h:268:20 */
type Vm_size_t = X__vm_size_t     /* types.h:269:21 */

type Rman_res_t = X__rman_res_t /* types.h:271:25 */

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1992, 1993
//	The Regents of the University of California.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1991, 1993
//	The Regents of the University of California.  All rights reserved.
//
// This code is derived from software contributed to Berkeley by
// Berkeley Software Design, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)cdefs.h	8.8 (Berkeley) 1/9/95
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-2-Clause-FreeBSD
//
// Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1982, 1986, 1989, 1991, 1993
//	The Regents of the University of California.  All rights reserved.
// (c) UNIX System Laboratories, Inc.
// All or some portions of this file are derived from material licensed
// to the University of California by American Telephone and Telegraph
// Co. or Unix System Laboratories, Inc. and are reproduced herein with
// the permission of UNIX System Laboratories, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)signal.h	8.4 (Berkeley) 5/4/95
// $FreeBSD$

// sigset_t macros.

type X__sigset = struct{ F__bits [4]X__uint32_t } /* _sigset.h:53:9 */

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1992, 1993
//	The Regents of the University of California.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1991, 1993
//	The Regents of the University of California.  All rights reserved.
//
// This code is derived from software contributed to Berkeley by
// Berkeley Software Design, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)cdefs.h	8.8 (Berkeley) 1/9/95
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-2-Clause-FreeBSD
//
// Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1982, 1986, 1989, 1991, 1993
//	The Regents of the University of California.  All rights reserved.
// (c) UNIX System Laboratories, Inc.
// All or some portions of this file are derived from material licensed
// to the University of California by American Telephone and Telegraph
// Co. or Unix System Laboratories, Inc. and are reproduced herein with
// the permission of UNIX System Laboratories, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)signal.h	8.4 (Berkeley) 5/4/95
// $FreeBSD$

// sigset_t macros.

type X__sigset_t = X__sigset /* _sigset.h:55:3 */

// -
// SPDX-License-Identifier: BSD-2-Clause-FreeBSD
//
// Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-2-Clause-FreeBSD
//
// Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

// Structure returned by gettimeofday(2) system call, and used in other calls.
type Timeval = struct {
	Ftv_sec  Time_t
	Ftv_usec Suseconds_t
} /* _timeval.h:49:1 */

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1982, 1986, 1993
//	The Regents of the University of California.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)time.h	8.5 (Berkeley) 5/4/95
// from: FreeBSD: src/sys/sys/time.h,v 1.43 2000/03/20 14:09:05 phk Exp
//	$FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1991, 1993
//	The Regents of the University of California.  All rights reserved.
//
// This code is derived from software contributed to Berkeley by
// Berkeley Software Design, Inc.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)cdefs.h	8.8 (Berkeley) 1/9/95
// $FreeBSD$

// -
// SPDX-License-Identifier: BSD-3-Clause
//
// Copyright (c) 1982, 1986, 1993
//	The Regents of the University of California.  All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 3. Neither the name of the University nor the names of its contributors
//    may be used to endorse or promote products derived from this software
//    without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
//	@(#)time.h	8.5 (Berkeley) 5/4/95
// from: FreeBSD: src/sys/sys/time.h,v 1.43 2000/03/20 14:09:05 phk Exp
//	$FreeBSD$

// -
// SPDX-License-Identifier: BSD-2-Clause-FreeBSD
//
// Copyright (c) 2002 Mike Barcroft <mike@FreeBSD.org>
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// $FreeBSD$

type Timespec = struct {
	Ftv_sec  Time_t
	Ftv_nsec int32
} /* _timespec.h:46:1 */

// Structure defined by POSIX.1b to be like a itimerval, but with
// timespecs. Used in the timer_*() system calls.
type Itimerspec = struct {
	Fit_interval struct {
		Ftv_sec  Time_t
		Ftv_nsec int32
	}
	Fit_value struct {
		Ftv_sec  Time_t
		Ftv_nsec int32
	}
} /* timespec.h:60:1 */

type X__fd_mask = uint32  /* select.h:44:23 */
type Fd_mask = X__fd_mask /* select.h:46:19 */

type Sigset_t = X__sigset_t /* select.h:51:20 */

// Select uses bit masks of file descriptors in longs.  These macros
// manipulate such bit fields (the filesystem macros use chars).
// FD_SETSIZE may be defined by the user, but the default here should
// be enough for most uses.

type Fd_set1 = struct{ F__fds_bits [32]X__fd_mask } /* select.h:73:9 */

// Select uses bit masks of file descriptors in longs.  These macros
// manipulate such bit fields (the filesystem macros use chars).
// FD_SETSIZE may be defined by the user, but the default here should
// be enough for most uses.

type Fd_set = Fd_set1 /* select.h:75:3 */ // select(2)

type Crypt_data = struct {
	Finitialized int32
	F__buf       [256]int8
} /* unistd.h:489:1 */

// getopt(3) external variable

var _ int8 /* gen.c:2:13: */
