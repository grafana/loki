//go:build go1.18
// +build go1.18

// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.
// Code generated by Microsoft (R) AutoRest Code Generator. DO NOT EDIT.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

package armnetwork

// AdminRuleCollectionsClientBeginDeleteOptions contains the optional parameters for the AdminRuleCollectionsClient.BeginDelete
// method.
type AdminRuleCollectionsClientBeginDeleteOptions struct {
	// Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service
	// will do a cleanup deployment in the background, prior to the delete.
	Force *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AdminRuleCollectionsClientCreateOrUpdateOptions contains the optional parameters for the AdminRuleCollectionsClient.CreateOrUpdate
// method.
type AdminRuleCollectionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AdminRuleCollectionsClientGetOptions contains the optional parameters for the AdminRuleCollectionsClient.Get method.
type AdminRuleCollectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AdminRuleCollectionsClientListOptions contains the optional parameters for the AdminRuleCollectionsClient.NewListPager
// method.
type AdminRuleCollectionsClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// AdminRulesClientBeginDeleteOptions contains the optional parameters for the AdminRulesClient.BeginDelete method.
type AdminRulesClientBeginDeleteOptions struct {
	// Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service
	// will do a cleanup deployment in the background, prior to the delete.
	Force *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AdminRulesClientCreateOrUpdateOptions contains the optional parameters for the AdminRulesClient.CreateOrUpdate method.
type AdminRulesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// AdminRulesClientGetOptions contains the optional parameters for the AdminRulesClient.Get method.
type AdminRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// AdminRulesClientListOptions contains the optional parameters for the AdminRulesClient.NewListPager method.
type AdminRulesClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ApplicationGatewayPrivateEndpointConnectionsClientBeginDeleteOptions contains the optional parameters for the ApplicationGatewayPrivateEndpointConnectionsClient.BeginDelete
// method.
type ApplicationGatewayPrivateEndpointConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationGatewayPrivateEndpointConnectionsClientBeginUpdateOptions contains the optional parameters for the ApplicationGatewayPrivateEndpointConnectionsClient.BeginUpdate
// method.
type ApplicationGatewayPrivateEndpointConnectionsClientBeginUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationGatewayPrivateEndpointConnectionsClientGetOptions contains the optional parameters for the ApplicationGatewayPrivateEndpointConnectionsClient.Get
// method.
type ApplicationGatewayPrivateEndpointConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewayPrivateEndpointConnectionsClientListOptions contains the optional parameters for the ApplicationGatewayPrivateEndpointConnectionsClient.NewListPager
// method.
type ApplicationGatewayPrivateEndpointConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewayPrivateLinkResourcesClientListOptions contains the optional parameters for the ApplicationGatewayPrivateLinkResourcesClient.NewListPager
// method.
type ApplicationGatewayPrivateLinkResourcesClientListOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewayWafDynamicManifestsClientGetOptions contains the optional parameters for the ApplicationGatewayWafDynamicManifestsClient.NewGetPager
// method.
type ApplicationGatewayWafDynamicManifestsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewayWafDynamicManifestsDefaultClientGetOptions contains the optional parameters for the ApplicationGatewayWafDynamicManifestsDefaultClient.Get
// method.
type ApplicationGatewayWafDynamicManifestsDefaultClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientBeginBackendHealthOnDemandOptions contains the optional parameters for the ApplicationGatewaysClient.BeginBackendHealthOnDemand
// method.
type ApplicationGatewaysClientBeginBackendHealthOnDemandOptions struct {
	// Expands BackendAddressPool and BackendHttpSettings referenced in backend health.
	Expand *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationGatewaysClientBeginBackendHealthOptions contains the optional parameters for the ApplicationGatewaysClient.BeginBackendHealth
// method.
type ApplicationGatewaysClientBeginBackendHealthOptions struct {
	// Expands BackendAddressPool and BackendHttpSettings referenced in backend health.
	Expand *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationGatewaysClientBeginCreateOrUpdateOptions contains the optional parameters for the ApplicationGatewaysClient.BeginCreateOrUpdate
// method.
type ApplicationGatewaysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationGatewaysClientBeginDeleteOptions contains the optional parameters for the ApplicationGatewaysClient.BeginDelete
// method.
type ApplicationGatewaysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationGatewaysClientBeginStartOptions contains the optional parameters for the ApplicationGatewaysClient.BeginStart
// method.
type ApplicationGatewaysClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationGatewaysClientBeginStopOptions contains the optional parameters for the ApplicationGatewaysClient.BeginStop
// method.
type ApplicationGatewaysClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationGatewaysClientGetOptions contains the optional parameters for the ApplicationGatewaysClient.Get method.
type ApplicationGatewaysClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientGetSSLPredefinedPolicyOptions contains the optional parameters for the ApplicationGatewaysClient.GetSSLPredefinedPolicy
// method.
type ApplicationGatewaysClientGetSSLPredefinedPolicyOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientListAllOptions contains the optional parameters for the ApplicationGatewaysClient.NewListAllPager
// method.
type ApplicationGatewaysClientListAllOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientListAvailableRequestHeadersOptions contains the optional parameters for the ApplicationGatewaysClient.ListAvailableRequestHeaders
// method.
type ApplicationGatewaysClientListAvailableRequestHeadersOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientListAvailableResponseHeadersOptions contains the optional parameters for the ApplicationGatewaysClient.ListAvailableResponseHeaders
// method.
type ApplicationGatewaysClientListAvailableResponseHeadersOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientListAvailableSSLOptionsOptions contains the optional parameters for the ApplicationGatewaysClient.ListAvailableSSLOptions
// method.
type ApplicationGatewaysClientListAvailableSSLOptionsOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientListAvailableSSLPredefinedPoliciesOptions contains the optional parameters for the ApplicationGatewaysClient.NewListAvailableSSLPredefinedPoliciesPager
// method.
type ApplicationGatewaysClientListAvailableSSLPredefinedPoliciesOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientListAvailableServerVariablesOptions contains the optional parameters for the ApplicationGatewaysClient.ListAvailableServerVariables
// method.
type ApplicationGatewaysClientListAvailableServerVariablesOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientListAvailableWafRuleSetsOptions contains the optional parameters for the ApplicationGatewaysClient.ListAvailableWafRuleSets
// method.
type ApplicationGatewaysClientListAvailableWafRuleSetsOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientListOptions contains the optional parameters for the ApplicationGatewaysClient.NewListPager method.
type ApplicationGatewaysClientListOptions struct {
	// placeholder for future optional parameters
}

// ApplicationGatewaysClientUpdateTagsOptions contains the optional parameters for the ApplicationGatewaysClient.UpdateTags
// method.
type ApplicationGatewaysClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ApplicationSecurityGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the ApplicationSecurityGroupsClient.BeginCreateOrUpdate
// method.
type ApplicationSecurityGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationSecurityGroupsClientBeginDeleteOptions contains the optional parameters for the ApplicationSecurityGroupsClient.BeginDelete
// method.
type ApplicationSecurityGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ApplicationSecurityGroupsClientGetOptions contains the optional parameters for the ApplicationSecurityGroupsClient.Get
// method.
type ApplicationSecurityGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ApplicationSecurityGroupsClientListAllOptions contains the optional parameters for the ApplicationSecurityGroupsClient.NewListAllPager
// method.
type ApplicationSecurityGroupsClientListAllOptions struct {
	// placeholder for future optional parameters
}

// ApplicationSecurityGroupsClientListOptions contains the optional parameters for the ApplicationSecurityGroupsClient.NewListPager
// method.
type ApplicationSecurityGroupsClientListOptions struct {
	// placeholder for future optional parameters
}

// ApplicationSecurityGroupsClientUpdateTagsOptions contains the optional parameters for the ApplicationSecurityGroupsClient.UpdateTags
// method.
type ApplicationSecurityGroupsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// AvailableDelegationsClientListOptions contains the optional parameters for the AvailableDelegationsClient.NewListPager
// method.
type AvailableDelegationsClientListOptions struct {
	// placeholder for future optional parameters
}

// AvailableEndpointServicesClientListOptions contains the optional parameters for the AvailableEndpointServicesClient.NewListPager
// method.
type AvailableEndpointServicesClientListOptions struct {
	// placeholder for future optional parameters
}

// AvailablePrivateEndpointTypesClientListByResourceGroupOptions contains the optional parameters for the AvailablePrivateEndpointTypesClient.NewListByResourceGroupPager
// method.
type AvailablePrivateEndpointTypesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AvailablePrivateEndpointTypesClientListOptions contains the optional parameters for the AvailablePrivateEndpointTypesClient.NewListPager
// method.
type AvailablePrivateEndpointTypesClientListOptions struct {
	// placeholder for future optional parameters
}

// AvailableResourceGroupDelegationsClientListOptions contains the optional parameters for the AvailableResourceGroupDelegationsClient.NewListPager
// method.
type AvailableResourceGroupDelegationsClientListOptions struct {
	// placeholder for future optional parameters
}

// AvailableServiceAliasesClientListByResourceGroupOptions contains the optional parameters for the AvailableServiceAliasesClient.NewListByResourceGroupPager
// method.
type AvailableServiceAliasesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// AvailableServiceAliasesClientListOptions contains the optional parameters for the AvailableServiceAliasesClient.NewListPager
// method.
type AvailableServiceAliasesClientListOptions struct {
	// placeholder for future optional parameters
}

// AzureFirewallFqdnTagsClientListAllOptions contains the optional parameters for the AzureFirewallFqdnTagsClient.NewListAllPager
// method.
type AzureFirewallFqdnTagsClientListAllOptions struct {
	// placeholder for future optional parameters
}

// AzureFirewallsClientBeginCreateOrUpdateOptions contains the optional parameters for the AzureFirewallsClient.BeginCreateOrUpdate
// method.
type AzureFirewallsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AzureFirewallsClientBeginDeleteOptions contains the optional parameters for the AzureFirewallsClient.BeginDelete method.
type AzureFirewallsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AzureFirewallsClientBeginListLearnedPrefixesOptions contains the optional parameters for the AzureFirewallsClient.BeginListLearnedPrefixes
// method.
type AzureFirewallsClientBeginListLearnedPrefixesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AzureFirewallsClientBeginPacketCaptureOptions contains the optional parameters for the AzureFirewallsClient.BeginPacketCapture
// method.
type AzureFirewallsClientBeginPacketCaptureOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AzureFirewallsClientBeginUpdateTagsOptions contains the optional parameters for the AzureFirewallsClient.BeginUpdateTags
// method.
type AzureFirewallsClientBeginUpdateTagsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// AzureFirewallsClientGetOptions contains the optional parameters for the AzureFirewallsClient.Get method.
type AzureFirewallsClientGetOptions struct {
	// placeholder for future optional parameters
}

// AzureFirewallsClientListAllOptions contains the optional parameters for the AzureFirewallsClient.NewListAllPager method.
type AzureFirewallsClientListAllOptions struct {
	// placeholder for future optional parameters
}

// AzureFirewallsClientListOptions contains the optional parameters for the AzureFirewallsClient.NewListPager method.
type AzureFirewallsClientListOptions struct {
	// placeholder for future optional parameters
}

// BastionHostsClientBeginCreateOrUpdateOptions contains the optional parameters for the BastionHostsClient.BeginCreateOrUpdate
// method.
type BastionHostsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// BastionHostsClientBeginDeleteOptions contains the optional parameters for the BastionHostsClient.BeginDelete method.
type BastionHostsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// BastionHostsClientBeginUpdateTagsOptions contains the optional parameters for the BastionHostsClient.BeginUpdateTags method.
type BastionHostsClientBeginUpdateTagsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// BastionHostsClientGetOptions contains the optional parameters for the BastionHostsClient.Get method.
type BastionHostsClientGetOptions struct {
	// placeholder for future optional parameters
}

// BastionHostsClientListByResourceGroupOptions contains the optional parameters for the BastionHostsClient.NewListByResourceGroupPager
// method.
type BastionHostsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// BastionHostsClientListOptions contains the optional parameters for the BastionHostsClient.NewListPager method.
type BastionHostsClientListOptions struct {
	// placeholder for future optional parameters
}

// BgpServiceCommunitiesClientListOptions contains the optional parameters for the BgpServiceCommunitiesClient.NewListPager
// method.
type BgpServiceCommunitiesClientListOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationPolicyGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the ConfigurationPolicyGroupsClient.BeginCreateOrUpdate
// method.
type ConfigurationPolicyGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConfigurationPolicyGroupsClientBeginDeleteOptions contains the optional parameters for the ConfigurationPolicyGroupsClient.BeginDelete
// method.
type ConfigurationPolicyGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConfigurationPolicyGroupsClientGetOptions contains the optional parameters for the ConfigurationPolicyGroupsClient.Get
// method.
type ConfigurationPolicyGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConfigurationPolicyGroupsClientListByVPNServerConfigurationOptions contains the optional parameters for the ConfigurationPolicyGroupsClient.NewListByVPNServerConfigurationPager
// method.
type ConfigurationPolicyGroupsClientListByVPNServerConfigurationOptions struct {
	// placeholder for future optional parameters
}

// ConnectionMonitorsClientBeginCreateOrUpdateOptions contains the optional parameters for the ConnectionMonitorsClient.BeginCreateOrUpdate
// method.
type ConnectionMonitorsClientBeginCreateOrUpdateOptions struct {
	// Value indicating whether connection monitor V1 should be migrated to V2 format.
	Migrate *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectionMonitorsClientBeginDeleteOptions contains the optional parameters for the ConnectionMonitorsClient.BeginDelete
// method.
type ConnectionMonitorsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectionMonitorsClientBeginQueryOptions contains the optional parameters for the ConnectionMonitorsClient.BeginQuery
// method.
type ConnectionMonitorsClientBeginQueryOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectionMonitorsClientBeginStartOptions contains the optional parameters for the ConnectionMonitorsClient.BeginStart
// method.
type ConnectionMonitorsClientBeginStartOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectionMonitorsClientBeginStopOptions contains the optional parameters for the ConnectionMonitorsClient.BeginStop method.
type ConnectionMonitorsClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectionMonitorsClientGetOptions contains the optional parameters for the ConnectionMonitorsClient.Get method.
type ConnectionMonitorsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConnectionMonitorsClientListOptions contains the optional parameters for the ConnectionMonitorsClient.NewListPager method.
type ConnectionMonitorsClientListOptions struct {
	// placeholder for future optional parameters
}

// ConnectionMonitorsClientUpdateTagsOptions contains the optional parameters for the ConnectionMonitorsClient.UpdateTags
// method.
type ConnectionMonitorsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ConnectivityConfigurationsClientBeginDeleteOptions contains the optional parameters for the ConnectivityConfigurationsClient.BeginDelete
// method.
type ConnectivityConfigurationsClientBeginDeleteOptions struct {
	// Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service
	// will do a cleanup deployment in the background, prior to the delete.
	Force *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ConnectivityConfigurationsClientCreateOrUpdateOptions contains the optional parameters for the ConnectivityConfigurationsClient.CreateOrUpdate
// method.
type ConnectivityConfigurationsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ConnectivityConfigurationsClientGetOptions contains the optional parameters for the ConnectivityConfigurationsClient.Get
// method.
type ConnectivityConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ConnectivityConfigurationsClientListOptions contains the optional parameters for the ConnectivityConfigurationsClient.NewListPager
// method.
type ConnectivityConfigurationsClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// CustomIPPrefixesClientBeginCreateOrUpdateOptions contains the optional parameters for the CustomIPPrefixesClient.BeginCreateOrUpdate
// method.
type CustomIPPrefixesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CustomIPPrefixesClientBeginDeleteOptions contains the optional parameters for the CustomIPPrefixesClient.BeginDelete method.
type CustomIPPrefixesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// CustomIPPrefixesClientGetOptions contains the optional parameters for the CustomIPPrefixesClient.Get method.
type CustomIPPrefixesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// CustomIPPrefixesClientListAllOptions contains the optional parameters for the CustomIPPrefixesClient.NewListAllPager method.
type CustomIPPrefixesClientListAllOptions struct {
	// placeholder for future optional parameters
}

// CustomIPPrefixesClientListOptions contains the optional parameters for the CustomIPPrefixesClient.NewListPager method.
type CustomIPPrefixesClientListOptions struct {
	// placeholder for future optional parameters
}

// CustomIPPrefixesClientUpdateTagsOptions contains the optional parameters for the CustomIPPrefixesClient.UpdateTags method.
type CustomIPPrefixesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// DdosCustomPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the DdosCustomPoliciesClient.BeginCreateOrUpdate
// method.
type DdosCustomPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DdosCustomPoliciesClientBeginDeleteOptions contains the optional parameters for the DdosCustomPoliciesClient.BeginDelete
// method.
type DdosCustomPoliciesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DdosCustomPoliciesClientGetOptions contains the optional parameters for the DdosCustomPoliciesClient.Get method.
type DdosCustomPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DdosCustomPoliciesClientUpdateTagsOptions contains the optional parameters for the DdosCustomPoliciesClient.UpdateTags
// method.
type DdosCustomPoliciesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// DdosProtectionPlansClientBeginCreateOrUpdateOptions contains the optional parameters for the DdosProtectionPlansClient.BeginCreateOrUpdate
// method.
type DdosProtectionPlansClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DdosProtectionPlansClientBeginDeleteOptions contains the optional parameters for the DdosProtectionPlansClient.BeginDelete
// method.
type DdosProtectionPlansClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DdosProtectionPlansClientGetOptions contains the optional parameters for the DdosProtectionPlansClient.Get method.
type DdosProtectionPlansClientGetOptions struct {
	// placeholder for future optional parameters
}

// DdosProtectionPlansClientListByResourceGroupOptions contains the optional parameters for the DdosProtectionPlansClient.NewListByResourceGroupPager
// method.
type DdosProtectionPlansClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// DdosProtectionPlansClientListOptions contains the optional parameters for the DdosProtectionPlansClient.NewListPager method.
type DdosProtectionPlansClientListOptions struct {
	// placeholder for future optional parameters
}

// DdosProtectionPlansClientUpdateTagsOptions contains the optional parameters for the DdosProtectionPlansClient.UpdateTags
// method.
type DdosProtectionPlansClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// DefaultSecurityRulesClientGetOptions contains the optional parameters for the DefaultSecurityRulesClient.Get method.
type DefaultSecurityRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// DefaultSecurityRulesClientListOptions contains the optional parameters for the DefaultSecurityRulesClient.NewListPager
// method.
type DefaultSecurityRulesClientListOptions struct {
	// placeholder for future optional parameters
}

// DscpConfigurationClientBeginCreateOrUpdateOptions contains the optional parameters for the DscpConfigurationClient.BeginCreateOrUpdate
// method.
type DscpConfigurationClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DscpConfigurationClientBeginDeleteOptions contains the optional parameters for the DscpConfigurationClient.BeginDelete
// method.
type DscpConfigurationClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// DscpConfigurationClientGetOptions contains the optional parameters for the DscpConfigurationClient.Get method.
type DscpConfigurationClientGetOptions struct {
	// placeholder for future optional parameters
}

// DscpConfigurationClientListAllOptions contains the optional parameters for the DscpConfigurationClient.NewListAllPager
// method.
type DscpConfigurationClientListAllOptions struct {
	// placeholder for future optional parameters
}

// DscpConfigurationClientListOptions contains the optional parameters for the DscpConfigurationClient.NewListPager method.
type DscpConfigurationClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitAuthorizationsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRouteCircuitAuthorizationsClient.BeginCreateOrUpdate
// method.
type ExpressRouteCircuitAuthorizationsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitAuthorizationsClientBeginDeleteOptions contains the optional parameters for the ExpressRouteCircuitAuthorizationsClient.BeginDelete
// method.
type ExpressRouteCircuitAuthorizationsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitAuthorizationsClientGetOptions contains the optional parameters for the ExpressRouteCircuitAuthorizationsClient.Get
// method.
type ExpressRouteCircuitAuthorizationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitAuthorizationsClientListOptions contains the optional parameters for the ExpressRouteCircuitAuthorizationsClient.NewListPager
// method.
type ExpressRouteCircuitAuthorizationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRouteCircuitConnectionsClient.BeginCreateOrUpdate
// method.
type ExpressRouteCircuitConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitConnectionsClientBeginDeleteOptions contains the optional parameters for the ExpressRouteCircuitConnectionsClient.BeginDelete
// method.
type ExpressRouteCircuitConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitConnectionsClientGetOptions contains the optional parameters for the ExpressRouteCircuitConnectionsClient.Get
// method.
type ExpressRouteCircuitConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitConnectionsClientListOptions contains the optional parameters for the ExpressRouteCircuitConnectionsClient.NewListPager
// method.
type ExpressRouteCircuitConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitPeeringsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRouteCircuitPeeringsClient.BeginCreateOrUpdate
// method.
type ExpressRouteCircuitPeeringsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitPeeringsClientBeginDeleteOptions contains the optional parameters for the ExpressRouteCircuitPeeringsClient.BeginDelete
// method.
type ExpressRouteCircuitPeeringsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitPeeringsClientGetOptions contains the optional parameters for the ExpressRouteCircuitPeeringsClient.Get
// method.
type ExpressRouteCircuitPeeringsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitPeeringsClientListOptions contains the optional parameters for the ExpressRouteCircuitPeeringsClient.NewListPager
// method.
type ExpressRouteCircuitPeeringsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRouteCircuitsClient.BeginCreateOrUpdate
// method.
type ExpressRouteCircuitsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitsClientBeginDeleteOptions contains the optional parameters for the ExpressRouteCircuitsClient.BeginDelete
// method.
type ExpressRouteCircuitsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitsClientBeginListArpTableOptions contains the optional parameters for the ExpressRouteCircuitsClient.BeginListArpTable
// method.
type ExpressRouteCircuitsClientBeginListArpTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitsClientBeginListRoutesTableOptions contains the optional parameters for the ExpressRouteCircuitsClient.BeginListRoutesTable
// method.
type ExpressRouteCircuitsClientBeginListRoutesTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitsClientBeginListRoutesTableSummaryOptions contains the optional parameters for the ExpressRouteCircuitsClient.BeginListRoutesTableSummary
// method.
type ExpressRouteCircuitsClientBeginListRoutesTableSummaryOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCircuitsClientGetOptions contains the optional parameters for the ExpressRouteCircuitsClient.Get method.
type ExpressRouteCircuitsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitsClientGetPeeringStatsOptions contains the optional parameters for the ExpressRouteCircuitsClient.GetPeeringStats
// method.
type ExpressRouteCircuitsClientGetPeeringStatsOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitsClientGetStatsOptions contains the optional parameters for the ExpressRouteCircuitsClient.GetStats
// method.
type ExpressRouteCircuitsClientGetStatsOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitsClientListAllOptions contains the optional parameters for the ExpressRouteCircuitsClient.NewListAllPager
// method.
type ExpressRouteCircuitsClientListAllOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitsClientListOptions contains the optional parameters for the ExpressRouteCircuitsClient.NewListPager
// method.
type ExpressRouteCircuitsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCircuitsClientUpdateTagsOptions contains the optional parameters for the ExpressRouteCircuitsClient.UpdateTags
// method.
type ExpressRouteCircuitsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRouteConnectionsClient.BeginCreateOrUpdate
// method.
type ExpressRouteConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteConnectionsClientBeginDeleteOptions contains the optional parameters for the ExpressRouteConnectionsClient.BeginDelete
// method.
type ExpressRouteConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteConnectionsClientGetOptions contains the optional parameters for the ExpressRouteConnectionsClient.Get method.
type ExpressRouteConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteConnectionsClientListOptions contains the optional parameters for the ExpressRouteConnectionsClient.List method.
type ExpressRouteConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCrossConnectionPeeringsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRouteCrossConnectionPeeringsClient.BeginCreateOrUpdate
// method.
type ExpressRouteCrossConnectionPeeringsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCrossConnectionPeeringsClientBeginDeleteOptions contains the optional parameters for the ExpressRouteCrossConnectionPeeringsClient.BeginDelete
// method.
type ExpressRouteCrossConnectionPeeringsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCrossConnectionPeeringsClientGetOptions contains the optional parameters for the ExpressRouteCrossConnectionPeeringsClient.Get
// method.
type ExpressRouteCrossConnectionPeeringsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCrossConnectionPeeringsClientListOptions contains the optional parameters for the ExpressRouteCrossConnectionPeeringsClient.NewListPager
// method.
type ExpressRouteCrossConnectionPeeringsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCrossConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRouteCrossConnectionsClient.BeginCreateOrUpdate
// method.
type ExpressRouteCrossConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCrossConnectionsClientBeginListArpTableOptions contains the optional parameters for the ExpressRouteCrossConnectionsClient.BeginListArpTable
// method.
type ExpressRouteCrossConnectionsClientBeginListArpTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCrossConnectionsClientBeginListRoutesTableOptions contains the optional parameters for the ExpressRouteCrossConnectionsClient.BeginListRoutesTable
// method.
type ExpressRouteCrossConnectionsClientBeginListRoutesTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCrossConnectionsClientBeginListRoutesTableSummaryOptions contains the optional parameters for the ExpressRouteCrossConnectionsClient.BeginListRoutesTableSummary
// method.
type ExpressRouteCrossConnectionsClientBeginListRoutesTableSummaryOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteCrossConnectionsClientGetOptions contains the optional parameters for the ExpressRouteCrossConnectionsClient.Get
// method.
type ExpressRouteCrossConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCrossConnectionsClientListByResourceGroupOptions contains the optional parameters for the ExpressRouteCrossConnectionsClient.NewListByResourceGroupPager
// method.
type ExpressRouteCrossConnectionsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCrossConnectionsClientListOptions contains the optional parameters for the ExpressRouteCrossConnectionsClient.NewListPager
// method.
type ExpressRouteCrossConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteCrossConnectionsClientUpdateTagsOptions contains the optional parameters for the ExpressRouteCrossConnectionsClient.UpdateTags
// method.
type ExpressRouteCrossConnectionsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteGatewaysClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRouteGatewaysClient.BeginCreateOrUpdate
// method.
type ExpressRouteGatewaysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteGatewaysClientBeginDeleteOptions contains the optional parameters for the ExpressRouteGatewaysClient.BeginDelete
// method.
type ExpressRouteGatewaysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteGatewaysClientBeginUpdateTagsOptions contains the optional parameters for the ExpressRouteGatewaysClient.BeginUpdateTags
// method.
type ExpressRouteGatewaysClientBeginUpdateTagsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRouteGatewaysClientGetOptions contains the optional parameters for the ExpressRouteGatewaysClient.Get method.
type ExpressRouteGatewaysClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteGatewaysClientListByResourceGroupOptions contains the optional parameters for the ExpressRouteGatewaysClient.ListByResourceGroup
// method.
type ExpressRouteGatewaysClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteGatewaysClientListBySubscriptionOptions contains the optional parameters for the ExpressRouteGatewaysClient.ListBySubscription
// method.
type ExpressRouteGatewaysClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteLinksClientGetOptions contains the optional parameters for the ExpressRouteLinksClient.Get method.
type ExpressRouteLinksClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteLinksClientListOptions contains the optional parameters for the ExpressRouteLinksClient.NewListPager method.
type ExpressRouteLinksClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortAuthorizationsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRoutePortAuthorizationsClient.BeginCreateOrUpdate
// method.
type ExpressRoutePortAuthorizationsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRoutePortAuthorizationsClientBeginDeleteOptions contains the optional parameters for the ExpressRoutePortAuthorizationsClient.BeginDelete
// method.
type ExpressRoutePortAuthorizationsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRoutePortAuthorizationsClientGetOptions contains the optional parameters for the ExpressRoutePortAuthorizationsClient.Get
// method.
type ExpressRoutePortAuthorizationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortAuthorizationsClientListOptions contains the optional parameters for the ExpressRoutePortAuthorizationsClient.NewListPager
// method.
type ExpressRoutePortAuthorizationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortsClientBeginCreateOrUpdateOptions contains the optional parameters for the ExpressRoutePortsClient.BeginCreateOrUpdate
// method.
type ExpressRoutePortsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRoutePortsClientBeginDeleteOptions contains the optional parameters for the ExpressRoutePortsClient.BeginDelete
// method.
type ExpressRoutePortsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ExpressRoutePortsClientGenerateLOAOptions contains the optional parameters for the ExpressRoutePortsClient.GenerateLOA
// method.
type ExpressRoutePortsClientGenerateLOAOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortsClientGetOptions contains the optional parameters for the ExpressRoutePortsClient.Get method.
type ExpressRoutePortsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortsClientListByResourceGroupOptions contains the optional parameters for the ExpressRoutePortsClient.NewListByResourceGroupPager
// method.
type ExpressRoutePortsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortsClientListOptions contains the optional parameters for the ExpressRoutePortsClient.NewListPager method.
type ExpressRoutePortsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortsClientUpdateTagsOptions contains the optional parameters for the ExpressRoutePortsClient.UpdateTags method.
type ExpressRoutePortsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortsLocationsClientGetOptions contains the optional parameters for the ExpressRoutePortsLocationsClient.Get
// method.
type ExpressRoutePortsLocationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ExpressRoutePortsLocationsClientListOptions contains the optional parameters for the ExpressRoutePortsLocationsClient.NewListPager
// method.
type ExpressRoutePortsLocationsClientListOptions struct {
	// placeholder for future optional parameters
}

// ExpressRouteProviderPortsLocationClientListOptions contains the optional parameters for the ExpressRouteProviderPortsLocationClient.List
// method.
type ExpressRouteProviderPortsLocationClientListOptions struct {
	// The filter to apply on the operation. For example, you can use $filter=location eq '{state}'.
	Filter *string
}

// ExpressRouteServiceProvidersClientListOptions contains the optional parameters for the ExpressRouteServiceProvidersClient.NewListPager
// method.
type ExpressRouteServiceProvidersClientListOptions struct {
	// placeholder for future optional parameters
}

// FirewallPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the FirewallPoliciesClient.BeginCreateOrUpdate
// method.
type FirewallPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FirewallPoliciesClientBeginDeleteOptions contains the optional parameters for the FirewallPoliciesClient.BeginDelete method.
type FirewallPoliciesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FirewallPoliciesClientGetOptions contains the optional parameters for the FirewallPoliciesClient.Get method.
type FirewallPoliciesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// FirewallPoliciesClientListAllOptions contains the optional parameters for the FirewallPoliciesClient.NewListAllPager method.
type FirewallPoliciesClientListAllOptions struct {
	// placeholder for future optional parameters
}

// FirewallPoliciesClientListOptions contains the optional parameters for the FirewallPoliciesClient.NewListPager method.
type FirewallPoliciesClientListOptions struct {
	// placeholder for future optional parameters
}

// FirewallPoliciesClientUpdateTagsOptions contains the optional parameters for the FirewallPoliciesClient.UpdateTags method.
type FirewallPoliciesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// FirewallPolicyIdpsSignaturesClientListOptions contains the optional parameters for the FirewallPolicyIdpsSignaturesClient.List
// method.
type FirewallPolicyIdpsSignaturesClientListOptions struct {
	// placeholder for future optional parameters
}

// FirewallPolicyIdpsSignaturesFilterValuesClientListOptions contains the optional parameters for the FirewallPolicyIdpsSignaturesFilterValuesClient.List
// method.
type FirewallPolicyIdpsSignaturesFilterValuesClientListOptions struct {
	// placeholder for future optional parameters
}

// FirewallPolicyIdpsSignaturesOverridesClientGetOptions contains the optional parameters for the FirewallPolicyIdpsSignaturesOverridesClient.Get
// method.
type FirewallPolicyIdpsSignaturesOverridesClientGetOptions struct {
	// placeholder for future optional parameters
}

// FirewallPolicyIdpsSignaturesOverridesClientListOptions contains the optional parameters for the FirewallPolicyIdpsSignaturesOverridesClient.List
// method.
type FirewallPolicyIdpsSignaturesOverridesClientListOptions struct {
	// placeholder for future optional parameters
}

// FirewallPolicyIdpsSignaturesOverridesClientPatchOptions contains the optional parameters for the FirewallPolicyIdpsSignaturesOverridesClient.Patch
// method.
type FirewallPolicyIdpsSignaturesOverridesClientPatchOptions struct {
	// placeholder for future optional parameters
}

// FirewallPolicyIdpsSignaturesOverridesClientPutOptions contains the optional parameters for the FirewallPolicyIdpsSignaturesOverridesClient.Put
// method.
type FirewallPolicyIdpsSignaturesOverridesClientPutOptions struct {
	// placeholder for future optional parameters
}

// FirewallPolicyRuleCollectionGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the FirewallPolicyRuleCollectionGroupsClient.BeginCreateOrUpdate
// method.
type FirewallPolicyRuleCollectionGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FirewallPolicyRuleCollectionGroupsClientBeginDeleteOptions contains the optional parameters for the FirewallPolicyRuleCollectionGroupsClient.BeginDelete
// method.
type FirewallPolicyRuleCollectionGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FirewallPolicyRuleCollectionGroupsClientGetOptions contains the optional parameters for the FirewallPolicyRuleCollectionGroupsClient.Get
// method.
type FirewallPolicyRuleCollectionGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// FirewallPolicyRuleCollectionGroupsClientListOptions contains the optional parameters for the FirewallPolicyRuleCollectionGroupsClient.NewListPager
// method.
type FirewallPolicyRuleCollectionGroupsClientListOptions struct {
	// placeholder for future optional parameters
}

// FlowLogsClientBeginCreateOrUpdateOptions contains the optional parameters for the FlowLogsClient.BeginCreateOrUpdate method.
type FlowLogsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FlowLogsClientBeginDeleteOptions contains the optional parameters for the FlowLogsClient.BeginDelete method.
type FlowLogsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// FlowLogsClientGetOptions contains the optional parameters for the FlowLogsClient.Get method.
type FlowLogsClientGetOptions struct {
	// placeholder for future optional parameters
}

// FlowLogsClientListOptions contains the optional parameters for the FlowLogsClient.NewListPager method.
type FlowLogsClientListOptions struct {
	// placeholder for future optional parameters
}

// FlowLogsClientUpdateTagsOptions contains the optional parameters for the FlowLogsClient.UpdateTags method.
type FlowLogsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// GroupsClientBeginDeleteOptions contains the optional parameters for the GroupsClient.BeginDelete method.
type GroupsClientBeginDeleteOptions struct {
	// Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service
	// will do a cleanup deployment in the background, prior to the delete.
	Force *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// GroupsClientCreateOrUpdateOptions contains the optional parameters for the GroupsClient.CreateOrUpdate method.
type GroupsClientCreateOrUpdateOptions struct {
	// The ETag of the transformation. Omit this value to always overwrite the current resource. Specify the last-seen ETag value
	// to prevent accidentally overwriting concurrent changes.
	IfMatch *string
}

// GroupsClientGetOptions contains the optional parameters for the GroupsClient.Get method.
type GroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// GroupsClientListOptions contains the optional parameters for the GroupsClient.NewListPager method.
type GroupsClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// HubRouteTablesClientBeginCreateOrUpdateOptions contains the optional parameters for the HubRouteTablesClient.BeginCreateOrUpdate
// method.
type HubRouteTablesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// HubRouteTablesClientBeginDeleteOptions contains the optional parameters for the HubRouteTablesClient.BeginDelete method.
type HubRouteTablesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// HubRouteTablesClientGetOptions contains the optional parameters for the HubRouteTablesClient.Get method.
type HubRouteTablesClientGetOptions struct {
	// placeholder for future optional parameters
}

// HubRouteTablesClientListOptions contains the optional parameters for the HubRouteTablesClient.NewListPager method.
type HubRouteTablesClientListOptions struct {
	// placeholder for future optional parameters
}

// HubVirtualNetworkConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the HubVirtualNetworkConnectionsClient.BeginCreateOrUpdate
// method.
type HubVirtualNetworkConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// HubVirtualNetworkConnectionsClientBeginDeleteOptions contains the optional parameters for the HubVirtualNetworkConnectionsClient.BeginDelete
// method.
type HubVirtualNetworkConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// HubVirtualNetworkConnectionsClientGetOptions contains the optional parameters for the HubVirtualNetworkConnectionsClient.Get
// method.
type HubVirtualNetworkConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// HubVirtualNetworkConnectionsClientListOptions contains the optional parameters for the HubVirtualNetworkConnectionsClient.NewListPager
// method.
type HubVirtualNetworkConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// IPAllocationsClientBeginCreateOrUpdateOptions contains the optional parameters for the IPAllocationsClient.BeginCreateOrUpdate
// method.
type IPAllocationsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// IPAllocationsClientBeginDeleteOptions contains the optional parameters for the IPAllocationsClient.BeginDelete method.
type IPAllocationsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// IPAllocationsClientGetOptions contains the optional parameters for the IPAllocationsClient.Get method.
type IPAllocationsClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// IPAllocationsClientListByResourceGroupOptions contains the optional parameters for the IPAllocationsClient.NewListByResourceGroupPager
// method.
type IPAllocationsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// IPAllocationsClientListOptions contains the optional parameters for the IPAllocationsClient.NewListPager method.
type IPAllocationsClientListOptions struct {
	// placeholder for future optional parameters
}

// IPAllocationsClientUpdateTagsOptions contains the optional parameters for the IPAllocationsClient.UpdateTags method.
type IPAllocationsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// IPGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the IPGroupsClient.BeginCreateOrUpdate method.
type IPGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// IPGroupsClientBeginDeleteOptions contains the optional parameters for the IPGroupsClient.BeginDelete method.
type IPGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// IPGroupsClientGetOptions contains the optional parameters for the IPGroupsClient.Get method.
type IPGroupsClientGetOptions struct {
	// Expands resourceIds (of Firewalls/Network Security Groups etc.) back referenced by the IpGroups resource.
	Expand *string
}

// IPGroupsClientListByResourceGroupOptions contains the optional parameters for the IPGroupsClient.NewListByResourceGroupPager
// method.
type IPGroupsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// IPGroupsClientListOptions contains the optional parameters for the IPGroupsClient.NewListPager method.
type IPGroupsClientListOptions struct {
	// placeholder for future optional parameters
}

// IPGroupsClientUpdateGroupsOptions contains the optional parameters for the IPGroupsClient.UpdateGroups method.
type IPGroupsClientUpdateGroupsOptions struct {
	// placeholder for future optional parameters
}

// InboundNatRulesClientBeginCreateOrUpdateOptions contains the optional parameters for the InboundNatRulesClient.BeginCreateOrUpdate
// method.
type InboundNatRulesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InboundNatRulesClientBeginDeleteOptions contains the optional parameters for the InboundNatRulesClient.BeginDelete method.
type InboundNatRulesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InboundNatRulesClientGetOptions contains the optional parameters for the InboundNatRulesClient.Get method.
type InboundNatRulesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// InboundNatRulesClientListOptions contains the optional parameters for the InboundNatRulesClient.NewListPager method.
type InboundNatRulesClientListOptions struct {
	// placeholder for future optional parameters
}

// InboundSecurityRuleClientBeginCreateOrUpdateOptions contains the optional parameters for the InboundSecurityRuleClient.BeginCreateOrUpdate
// method.
type InboundSecurityRuleClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InterfaceIPConfigurationsClientGetOptions contains the optional parameters for the InterfaceIPConfigurationsClient.Get
// method.
type InterfaceIPConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// InterfaceIPConfigurationsClientListOptions contains the optional parameters for the InterfaceIPConfigurationsClient.NewListPager
// method.
type InterfaceIPConfigurationsClientListOptions struct {
	// placeholder for future optional parameters
}

// InterfaceLoadBalancersClientListOptions contains the optional parameters for the InterfaceLoadBalancersClient.NewListPager
// method.
type InterfaceLoadBalancersClientListOptions struct {
	// placeholder for future optional parameters
}

// InterfaceTapConfigurationsClientBeginCreateOrUpdateOptions contains the optional parameters for the InterfaceTapConfigurationsClient.BeginCreateOrUpdate
// method.
type InterfaceTapConfigurationsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InterfaceTapConfigurationsClientBeginDeleteOptions contains the optional parameters for the InterfaceTapConfigurationsClient.BeginDelete
// method.
type InterfaceTapConfigurationsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InterfaceTapConfigurationsClientGetOptions contains the optional parameters for the InterfaceTapConfigurationsClient.Get
// method.
type InterfaceTapConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// InterfaceTapConfigurationsClientListOptions contains the optional parameters for the InterfaceTapConfigurationsClient.NewListPager
// method.
type InterfaceTapConfigurationsClientListOptions struct {
	// placeholder for future optional parameters
}

// InterfacesClientBeginCreateOrUpdateOptions contains the optional parameters for the InterfacesClient.BeginCreateOrUpdate
// method.
type InterfacesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InterfacesClientBeginDeleteOptions contains the optional parameters for the InterfacesClient.BeginDelete method.
type InterfacesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InterfacesClientBeginGetEffectiveRouteTableOptions contains the optional parameters for the InterfacesClient.BeginGetEffectiveRouteTable
// method.
type InterfacesClientBeginGetEffectiveRouteTableOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InterfacesClientBeginListEffectiveNetworkSecurityGroupsOptions contains the optional parameters for the InterfacesClient.BeginListEffectiveNetworkSecurityGroups
// method.
type InterfacesClientBeginListEffectiveNetworkSecurityGroupsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// InterfacesClientGetCloudServiceNetworkInterfaceOptions contains the optional parameters for the InterfacesClient.GetCloudServiceNetworkInterface
// method.
type InterfacesClientGetCloudServiceNetworkInterfaceOptions struct {
	// Expands referenced resources.
	Expand *string
}

// InterfacesClientGetOptions contains the optional parameters for the InterfacesClient.Get method.
type InterfacesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// InterfacesClientGetVirtualMachineScaleSetIPConfigurationOptions contains the optional parameters for the InterfacesClient.GetVirtualMachineScaleSetIPConfiguration
// method.
type InterfacesClientGetVirtualMachineScaleSetIPConfigurationOptions struct {
	// Expands referenced resources.
	Expand *string
}

// InterfacesClientGetVirtualMachineScaleSetNetworkInterfaceOptions contains the optional parameters for the InterfacesClient.GetVirtualMachineScaleSetNetworkInterface
// method.
type InterfacesClientGetVirtualMachineScaleSetNetworkInterfaceOptions struct {
	// Expands referenced resources.
	Expand *string
}

// InterfacesClientListAllOptions contains the optional parameters for the InterfacesClient.NewListAllPager method.
type InterfacesClientListAllOptions struct {
	// placeholder for future optional parameters
}

// InterfacesClientListCloudServiceNetworkInterfacesOptions contains the optional parameters for the InterfacesClient.NewListCloudServiceNetworkInterfacesPager
// method.
type InterfacesClientListCloudServiceNetworkInterfacesOptions struct {
	// placeholder for future optional parameters
}

// InterfacesClientListCloudServiceRoleInstanceNetworkInterfacesOptions contains the optional parameters for the InterfacesClient.NewListCloudServiceRoleInstanceNetworkInterfacesPager
// method.
type InterfacesClientListCloudServiceRoleInstanceNetworkInterfacesOptions struct {
	// placeholder for future optional parameters
}

// InterfacesClientListOptions contains the optional parameters for the InterfacesClient.NewListPager method.
type InterfacesClientListOptions struct {
	// placeholder for future optional parameters
}

// InterfacesClientListVirtualMachineScaleSetIPConfigurationsOptions contains the optional parameters for the InterfacesClient.NewListVirtualMachineScaleSetIPConfigurationsPager
// method.
type InterfacesClientListVirtualMachineScaleSetIPConfigurationsOptions struct {
	// Expands referenced resources.
	Expand *string
}

// InterfacesClientListVirtualMachineScaleSetNetworkInterfacesOptions contains the optional parameters for the InterfacesClient.NewListVirtualMachineScaleSetNetworkInterfacesPager
// method.
type InterfacesClientListVirtualMachineScaleSetNetworkInterfacesOptions struct {
	// placeholder for future optional parameters
}

// InterfacesClientListVirtualMachineScaleSetVMNetworkInterfacesOptions contains the optional parameters for the InterfacesClient.NewListVirtualMachineScaleSetVMNetworkInterfacesPager
// method.
type InterfacesClientListVirtualMachineScaleSetVMNetworkInterfacesOptions struct {
	// placeholder for future optional parameters
}

// InterfacesClientUpdateTagsOptions contains the optional parameters for the InterfacesClient.UpdateTags method.
type InterfacesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerBackendAddressPoolsClientBeginCreateOrUpdateOptions contains the optional parameters for the LoadBalancerBackendAddressPoolsClient.BeginCreateOrUpdate
// method.
type LoadBalancerBackendAddressPoolsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LoadBalancerBackendAddressPoolsClientBeginDeleteOptions contains the optional parameters for the LoadBalancerBackendAddressPoolsClient.BeginDelete
// method.
type LoadBalancerBackendAddressPoolsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LoadBalancerBackendAddressPoolsClientGetOptions contains the optional parameters for the LoadBalancerBackendAddressPoolsClient.Get
// method.
type LoadBalancerBackendAddressPoolsClientGetOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerBackendAddressPoolsClientListOptions contains the optional parameters for the LoadBalancerBackendAddressPoolsClient.NewListPager
// method.
type LoadBalancerBackendAddressPoolsClientListOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerFrontendIPConfigurationsClientGetOptions contains the optional parameters for the LoadBalancerFrontendIPConfigurationsClient.Get
// method.
type LoadBalancerFrontendIPConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerFrontendIPConfigurationsClientListOptions contains the optional parameters for the LoadBalancerFrontendIPConfigurationsClient.NewListPager
// method.
type LoadBalancerFrontendIPConfigurationsClientListOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerLoadBalancingRulesClientGetOptions contains the optional parameters for the LoadBalancerLoadBalancingRulesClient.Get
// method.
type LoadBalancerLoadBalancingRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerLoadBalancingRulesClientListOptions contains the optional parameters for the LoadBalancerLoadBalancingRulesClient.NewListPager
// method.
type LoadBalancerLoadBalancingRulesClientListOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerNetworkInterfacesClientListOptions contains the optional parameters for the LoadBalancerNetworkInterfacesClient.NewListPager
// method.
type LoadBalancerNetworkInterfacesClientListOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerOutboundRulesClientGetOptions contains the optional parameters for the LoadBalancerOutboundRulesClient.Get
// method.
type LoadBalancerOutboundRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerOutboundRulesClientListOptions contains the optional parameters for the LoadBalancerOutboundRulesClient.NewListPager
// method.
type LoadBalancerOutboundRulesClientListOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerProbesClientGetOptions contains the optional parameters for the LoadBalancerProbesClient.Get method.
type LoadBalancerProbesClientGetOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancerProbesClientListOptions contains the optional parameters for the LoadBalancerProbesClient.NewListPager method.
type LoadBalancerProbesClientListOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancersClientBeginCreateOrUpdateOptions contains the optional parameters for the LoadBalancersClient.BeginCreateOrUpdate
// method.
type LoadBalancersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LoadBalancersClientBeginDeleteOptions contains the optional parameters for the LoadBalancersClient.BeginDelete method.
type LoadBalancersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LoadBalancersClientBeginListInboundNatRulePortMappingsOptions contains the optional parameters for the LoadBalancersClient.BeginListInboundNatRulePortMappings
// method.
type LoadBalancersClientBeginListInboundNatRulePortMappingsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LoadBalancersClientBeginSwapPublicIPAddressesOptions contains the optional parameters for the LoadBalancersClient.BeginSwapPublicIPAddresses
// method.
type LoadBalancersClientBeginSwapPublicIPAddressesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LoadBalancersClientGetOptions contains the optional parameters for the LoadBalancersClient.Get method.
type LoadBalancersClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// LoadBalancersClientListAllOptions contains the optional parameters for the LoadBalancersClient.NewListAllPager method.
type LoadBalancersClientListAllOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancersClientListOptions contains the optional parameters for the LoadBalancersClient.NewListPager method.
type LoadBalancersClientListOptions struct {
	// placeholder for future optional parameters
}

// LoadBalancersClientMigrateToIPBasedOptions contains the optional parameters for the LoadBalancersClient.MigrateToIPBased
// method.
type LoadBalancersClientMigrateToIPBasedOptions struct {
	// Parameters supplied to the migrateToIpBased Api.
	Parameters *MigrateLoadBalancerToIPBasedRequest
}

// LoadBalancersClientUpdateTagsOptions contains the optional parameters for the LoadBalancersClient.UpdateTags method.
type LoadBalancersClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// LocalNetworkGatewaysClientBeginCreateOrUpdateOptions contains the optional parameters for the LocalNetworkGatewaysClient.BeginCreateOrUpdate
// method.
type LocalNetworkGatewaysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LocalNetworkGatewaysClientBeginDeleteOptions contains the optional parameters for the LocalNetworkGatewaysClient.BeginDelete
// method.
type LocalNetworkGatewaysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// LocalNetworkGatewaysClientGetOptions contains the optional parameters for the LocalNetworkGatewaysClient.Get method.
type LocalNetworkGatewaysClientGetOptions struct {
	// placeholder for future optional parameters
}

// LocalNetworkGatewaysClientListOptions contains the optional parameters for the LocalNetworkGatewaysClient.NewListPager
// method.
type LocalNetworkGatewaysClientListOptions struct {
	// placeholder for future optional parameters
}

// LocalNetworkGatewaysClientUpdateTagsOptions contains the optional parameters for the LocalNetworkGatewaysClient.UpdateTags
// method.
type LocalNetworkGatewaysClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientBeginDeleteBastionShareableLinkOptions contains the optional parameters for the ManagementClient.BeginDeleteBastionShareableLink
// method.
type ManagementClientBeginDeleteBastionShareableLinkOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagementClientBeginGeneratevirtualwanvpnserverconfigurationvpnprofileOptions contains the optional parameters for the
// ManagementClient.BeginGeneratevirtualwanvpnserverconfigurationvpnprofile method.
type ManagementClientBeginGeneratevirtualwanvpnserverconfigurationvpnprofileOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagementClientBeginGetActiveSessionsOptions contains the optional parameters for the ManagementClient.BeginGetActiveSessions
// method.
type ManagementClientBeginGetActiveSessionsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagementClientBeginPutBastionShareableLinkOptions contains the optional parameters for the ManagementClient.BeginPutBastionShareableLink
// method.
type ManagementClientBeginPutBastionShareableLinkOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagementClientCheckDNSNameAvailabilityOptions contains the optional parameters for the ManagementClient.CheckDNSNameAvailability
// method.
type ManagementClientCheckDNSNameAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientDisconnectActiveSessionsOptions contains the optional parameters for the ManagementClient.NewDisconnectActiveSessionsPager
// method.
type ManagementClientDisconnectActiveSessionsOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientExpressRouteProviderPortOptions contains the optional parameters for the ManagementClient.ExpressRouteProviderPort
// method.
type ManagementClientExpressRouteProviderPortOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientGetBastionShareableLinkOptions contains the optional parameters for the ManagementClient.NewGetBastionShareableLinkPager
// method.
type ManagementClientGetBastionShareableLinkOptions struct {
	// placeholder for future optional parameters
}

// ManagementClientListActiveConnectivityConfigurationsOptions contains the optional parameters for the ManagementClient.ListActiveConnectivityConfigurations
// method.
type ManagementClientListActiveConnectivityConfigurationsOptions struct {
	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ManagementClientListActiveSecurityAdminRulesOptions contains the optional parameters for the ManagementClient.ListActiveSecurityAdminRules
// method.
type ManagementClientListActiveSecurityAdminRulesOptions struct {
	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ManagementClientListNetworkManagerEffectiveConnectivityConfigurationsOptions contains the optional parameters for the ManagementClient.ListNetworkManagerEffectiveConnectivityConfigurations
// method.
type ManagementClientListNetworkManagerEffectiveConnectivityConfigurationsOptions struct {
	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ManagementClientListNetworkManagerEffectiveSecurityAdminRulesOptions contains the optional parameters for the ManagementClient.ListNetworkManagerEffectiveSecurityAdminRules
// method.
type ManagementClientListNetworkManagerEffectiveSecurityAdminRulesOptions struct {
	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ManagementClientSupportedSecurityProvidersOptions contains the optional parameters for the ManagementClient.SupportedSecurityProviders
// method.
type ManagementClientSupportedSecurityProvidersOptions struct {
	// placeholder for future optional parameters
}

// ManagementGroupNetworkManagerConnectionsClientCreateOrUpdateOptions contains the optional parameters for the ManagementGroupNetworkManagerConnectionsClient.CreateOrUpdate
// method.
type ManagementGroupNetworkManagerConnectionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagementGroupNetworkManagerConnectionsClientDeleteOptions contains the optional parameters for the ManagementGroupNetworkManagerConnectionsClient.Delete
// method.
type ManagementGroupNetworkManagerConnectionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ManagementGroupNetworkManagerConnectionsClientGetOptions contains the optional parameters for the ManagementGroupNetworkManagerConnectionsClient.Get
// method.
type ManagementGroupNetworkManagerConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagementGroupNetworkManagerConnectionsClientListOptions contains the optional parameters for the ManagementGroupNetworkManagerConnectionsClient.NewListPager
// method.
type ManagementGroupNetworkManagerConnectionsClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ManagerCommitsClientBeginPostOptions contains the optional parameters for the ManagerCommitsClient.BeginPost method.
type ManagerCommitsClientBeginPostOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagerDeploymentStatusClientListOptions contains the optional parameters for the ManagerDeploymentStatusClient.List method.
type ManagerDeploymentStatusClientListOptions struct {
	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ManagersClientBeginDeleteOptions contains the optional parameters for the ManagersClient.BeginDelete method.
type ManagersClientBeginDeleteOptions struct {
	// Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service
	// will do a cleanup deployment in the background, prior to the delete.
	Force *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ManagersClientCreateOrUpdateOptions contains the optional parameters for the ManagersClient.CreateOrUpdate method.
type ManagersClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ManagersClientGetOptions contains the optional parameters for the ManagersClient.Get method.
type ManagersClientGetOptions struct {
	// placeholder for future optional parameters
}

// ManagersClientListBySubscriptionOptions contains the optional parameters for the ManagersClient.NewListBySubscriptionPager
// method.
type ManagersClientListBySubscriptionOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ManagersClientListOptions contains the optional parameters for the ManagersClient.NewListPager method.
type ManagersClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// ManagersClientPatchOptions contains the optional parameters for the ManagersClient.Patch method.
type ManagersClientPatchOptions struct {
	// placeholder for future optional parameters
}

// NatGatewaysClientBeginCreateOrUpdateOptions contains the optional parameters for the NatGatewaysClient.BeginCreateOrUpdate
// method.
type NatGatewaysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// NatGatewaysClientBeginDeleteOptions contains the optional parameters for the NatGatewaysClient.BeginDelete method.
type NatGatewaysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// NatGatewaysClientGetOptions contains the optional parameters for the NatGatewaysClient.Get method.
type NatGatewaysClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// NatGatewaysClientListAllOptions contains the optional parameters for the NatGatewaysClient.NewListAllPager method.
type NatGatewaysClientListAllOptions struct {
	// placeholder for future optional parameters
}

// NatGatewaysClientListOptions contains the optional parameters for the NatGatewaysClient.NewListPager method.
type NatGatewaysClientListOptions struct {
	// placeholder for future optional parameters
}

// NatGatewaysClientUpdateTagsOptions contains the optional parameters for the NatGatewaysClient.UpdateTags method.
type NatGatewaysClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// NatRulesClientBeginCreateOrUpdateOptions contains the optional parameters for the NatRulesClient.BeginCreateOrUpdate method.
type NatRulesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// NatRulesClientBeginDeleteOptions contains the optional parameters for the NatRulesClient.BeginDelete method.
type NatRulesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// NatRulesClientGetOptions contains the optional parameters for the NatRulesClient.Get method.
type NatRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// NatRulesClientListByVPNGatewayOptions contains the optional parameters for the NatRulesClient.NewListByVPNGatewayPager
// method.
type NatRulesClientListByVPNGatewayOptions struct {
	// placeholder for future optional parameters
}

// OperationsClientListOptions contains the optional parameters for the OperationsClient.NewListPager method.
type OperationsClientListOptions struct {
	// placeholder for future optional parameters
}

// P2SVPNGatewaysClientBeginCreateOrUpdateOptions contains the optional parameters for the P2SVPNGatewaysClient.BeginCreateOrUpdate
// method.
type P2SVPNGatewaysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// P2SVPNGatewaysClientBeginDeleteOptions contains the optional parameters for the P2SVPNGatewaysClient.BeginDelete method.
type P2SVPNGatewaysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// P2SVPNGatewaysClientBeginDisconnectP2SVPNConnectionsOptions contains the optional parameters for the P2SVPNGatewaysClient.BeginDisconnectP2SVPNConnections
// method.
type P2SVPNGatewaysClientBeginDisconnectP2SVPNConnectionsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// P2SVPNGatewaysClientBeginGenerateVPNProfileOptions contains the optional parameters for the P2SVPNGatewaysClient.BeginGenerateVPNProfile
// method.
type P2SVPNGatewaysClientBeginGenerateVPNProfileOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// P2SVPNGatewaysClientBeginGetP2SVPNConnectionHealthDetailedOptions contains the optional parameters for the P2SVPNGatewaysClient.BeginGetP2SVPNConnectionHealthDetailed
// method.
type P2SVPNGatewaysClientBeginGetP2SVPNConnectionHealthDetailedOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// P2SVPNGatewaysClientBeginGetP2SVPNConnectionHealthOptions contains the optional parameters for the P2SVPNGatewaysClient.BeginGetP2SVPNConnectionHealth
// method.
type P2SVPNGatewaysClientBeginGetP2SVPNConnectionHealthOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// P2SVPNGatewaysClientBeginResetOptions contains the optional parameters for the P2SVPNGatewaysClient.BeginReset method.
type P2SVPNGatewaysClientBeginResetOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// P2SVPNGatewaysClientBeginUpdateTagsOptions contains the optional parameters for the P2SVPNGatewaysClient.BeginUpdateTags
// method.
type P2SVPNGatewaysClientBeginUpdateTagsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// P2SVPNGatewaysClientGetOptions contains the optional parameters for the P2SVPNGatewaysClient.Get method.
type P2SVPNGatewaysClientGetOptions struct {
	// placeholder for future optional parameters
}

// P2SVPNGatewaysClientListByResourceGroupOptions contains the optional parameters for the P2SVPNGatewaysClient.NewListByResourceGroupPager
// method.
type P2SVPNGatewaysClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// P2SVPNGatewaysClientListOptions contains the optional parameters for the P2SVPNGatewaysClient.NewListPager method.
type P2SVPNGatewaysClientListOptions struct {
	// placeholder for future optional parameters
}

// PacketCapturesClientBeginCreateOptions contains the optional parameters for the PacketCapturesClient.BeginCreate method.
type PacketCapturesClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PacketCapturesClientBeginDeleteOptions contains the optional parameters for the PacketCapturesClient.BeginDelete method.
type PacketCapturesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PacketCapturesClientBeginGetStatusOptions contains the optional parameters for the PacketCapturesClient.BeginGetStatus
// method.
type PacketCapturesClientBeginGetStatusOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PacketCapturesClientBeginStopOptions contains the optional parameters for the PacketCapturesClient.BeginStop method.
type PacketCapturesClientBeginStopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PacketCapturesClientGetOptions contains the optional parameters for the PacketCapturesClient.Get method.
type PacketCapturesClientGetOptions struct {
	// placeholder for future optional parameters
}

// PacketCapturesClientListOptions contains the optional parameters for the PacketCapturesClient.NewListPager method.
type PacketCapturesClientListOptions struct {
	// placeholder for future optional parameters
}

// PeerExpressRouteCircuitConnectionsClientGetOptions contains the optional parameters for the PeerExpressRouteCircuitConnectionsClient.Get
// method.
type PeerExpressRouteCircuitConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PeerExpressRouteCircuitConnectionsClientListOptions contains the optional parameters for the PeerExpressRouteCircuitConnectionsClient.NewListPager
// method.
type PeerExpressRouteCircuitConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateDNSZoneGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the PrivateDNSZoneGroupsClient.BeginCreateOrUpdate
// method.
type PrivateDNSZoneGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateDNSZoneGroupsClientBeginDeleteOptions contains the optional parameters for the PrivateDNSZoneGroupsClient.BeginDelete
// method.
type PrivateDNSZoneGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateDNSZoneGroupsClientGetOptions contains the optional parameters for the PrivateDNSZoneGroupsClient.Get method.
type PrivateDNSZoneGroupsClientGetOptions struct {
	// placeholder for future optional parameters
}

// PrivateDNSZoneGroupsClientListOptions contains the optional parameters for the PrivateDNSZoneGroupsClient.NewListPager
// method.
type PrivateDNSZoneGroupsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointsClientBeginCreateOrUpdateOptions contains the optional parameters for the PrivateEndpointsClient.BeginCreateOrUpdate
// method.
type PrivateEndpointsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointsClientBeginDeleteOptions contains the optional parameters for the PrivateEndpointsClient.BeginDelete method.
type PrivateEndpointsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateEndpointsClientGetOptions contains the optional parameters for the PrivateEndpointsClient.Get method.
type PrivateEndpointsClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// PrivateEndpointsClientListBySubscriptionOptions contains the optional parameters for the PrivateEndpointsClient.NewListBySubscriptionPager
// method.
type PrivateEndpointsClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// PrivateEndpointsClientListOptions contains the optional parameters for the PrivateEndpointsClient.NewListPager method.
type PrivateEndpointsClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServicesClientBeginCheckPrivateLinkServiceVisibilityByResourceGroupOptions contains the optional parameters
// for the PrivateLinkServicesClient.BeginCheckPrivateLinkServiceVisibilityByResourceGroup method.
type PrivateLinkServicesClientBeginCheckPrivateLinkServiceVisibilityByResourceGroupOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateLinkServicesClientBeginCheckPrivateLinkServiceVisibilityOptions contains the optional parameters for the PrivateLinkServicesClient.BeginCheckPrivateLinkServiceVisibility
// method.
type PrivateLinkServicesClientBeginCheckPrivateLinkServiceVisibilityOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateLinkServicesClientBeginCreateOrUpdateOptions contains the optional parameters for the PrivateLinkServicesClient.BeginCreateOrUpdate
// method.
type PrivateLinkServicesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateLinkServicesClientBeginDeleteOptions contains the optional parameters for the PrivateLinkServicesClient.BeginDelete
// method.
type PrivateLinkServicesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateLinkServicesClientBeginDeletePrivateEndpointConnectionOptions contains the optional parameters for the PrivateLinkServicesClient.BeginDeletePrivateEndpointConnection
// method.
type PrivateLinkServicesClientBeginDeletePrivateEndpointConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PrivateLinkServicesClientGetOptions contains the optional parameters for the PrivateLinkServicesClient.Get method.
type PrivateLinkServicesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// PrivateLinkServicesClientGetPrivateEndpointConnectionOptions contains the optional parameters for the PrivateLinkServicesClient.GetPrivateEndpointConnection
// method.
type PrivateLinkServicesClientGetPrivateEndpointConnectionOptions struct {
	// Expands referenced resources.
	Expand *string
}

// PrivateLinkServicesClientListAutoApprovedPrivateLinkServicesByResourceGroupOptions contains the optional parameters for
// the PrivateLinkServicesClient.NewListAutoApprovedPrivateLinkServicesByResourceGroupPager method.
type PrivateLinkServicesClientListAutoApprovedPrivateLinkServicesByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServicesClientListAutoApprovedPrivateLinkServicesOptions contains the optional parameters for the PrivateLinkServicesClient.NewListAutoApprovedPrivateLinkServicesPager
// method.
type PrivateLinkServicesClientListAutoApprovedPrivateLinkServicesOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServicesClientListBySubscriptionOptions contains the optional parameters for the PrivateLinkServicesClient.NewListBySubscriptionPager
// method.
type PrivateLinkServicesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServicesClientListOptions contains the optional parameters for the PrivateLinkServicesClient.NewListPager method.
type PrivateLinkServicesClientListOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServicesClientListPrivateEndpointConnectionsOptions contains the optional parameters for the PrivateLinkServicesClient.NewListPrivateEndpointConnectionsPager
// method.
type PrivateLinkServicesClientListPrivateEndpointConnectionsOptions struct {
	// placeholder for future optional parameters
}

// PrivateLinkServicesClientUpdatePrivateEndpointConnectionOptions contains the optional parameters for the PrivateLinkServicesClient.UpdatePrivateEndpointConnection
// method.
type PrivateLinkServicesClientUpdatePrivateEndpointConnectionOptions struct {
	// placeholder for future optional parameters
}

// ProfilesClientBeginDeleteOptions contains the optional parameters for the ProfilesClient.BeginDelete method.
type ProfilesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ProfilesClientCreateOrUpdateOptions contains the optional parameters for the ProfilesClient.CreateOrUpdate method.
type ProfilesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ProfilesClientGetOptions contains the optional parameters for the ProfilesClient.Get method.
type ProfilesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// ProfilesClientListAllOptions contains the optional parameters for the ProfilesClient.NewListAllPager method.
type ProfilesClientListAllOptions struct {
	// placeholder for future optional parameters
}

// ProfilesClientListOptions contains the optional parameters for the ProfilesClient.NewListPager method.
type ProfilesClientListOptions struct {
	// placeholder for future optional parameters
}

// ProfilesClientUpdateTagsOptions contains the optional parameters for the ProfilesClient.UpdateTags method.
type ProfilesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// PublicIPAddressesClientBeginCreateOrUpdateOptions contains the optional parameters for the PublicIPAddressesClient.BeginCreateOrUpdate
// method.
type PublicIPAddressesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PublicIPAddressesClientBeginDdosProtectionStatusOptions contains the optional parameters for the PublicIPAddressesClient.BeginDdosProtectionStatus
// method.
type PublicIPAddressesClientBeginDdosProtectionStatusOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PublicIPAddressesClientBeginDeleteOptions contains the optional parameters for the PublicIPAddressesClient.BeginDelete
// method.
type PublicIPAddressesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PublicIPAddressesClientGetCloudServicePublicIPAddressOptions contains the optional parameters for the PublicIPAddressesClient.GetCloudServicePublicIPAddress
// method.
type PublicIPAddressesClientGetCloudServicePublicIPAddressOptions struct {
	// Expands referenced resources.
	Expand *string
}

// PublicIPAddressesClientGetOptions contains the optional parameters for the PublicIPAddressesClient.Get method.
type PublicIPAddressesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// PublicIPAddressesClientGetVirtualMachineScaleSetPublicIPAddressOptions contains the optional parameters for the PublicIPAddressesClient.GetVirtualMachineScaleSetPublicIPAddress
// method.
type PublicIPAddressesClientGetVirtualMachineScaleSetPublicIPAddressOptions struct {
	// Expands referenced resources.
	Expand *string
}

// PublicIPAddressesClientListAllOptions contains the optional parameters for the PublicIPAddressesClient.NewListAllPager
// method.
type PublicIPAddressesClientListAllOptions struct {
	// placeholder for future optional parameters
}

// PublicIPAddressesClientListCloudServicePublicIPAddressesOptions contains the optional parameters for the PublicIPAddressesClient.NewListCloudServicePublicIPAddressesPager
// method.
type PublicIPAddressesClientListCloudServicePublicIPAddressesOptions struct {
	// placeholder for future optional parameters
}

// PublicIPAddressesClientListCloudServiceRoleInstancePublicIPAddressesOptions contains the optional parameters for the PublicIPAddressesClient.NewListCloudServiceRoleInstancePublicIPAddressesPager
// method.
type PublicIPAddressesClientListCloudServiceRoleInstancePublicIPAddressesOptions struct {
	// placeholder for future optional parameters
}

// PublicIPAddressesClientListOptions contains the optional parameters for the PublicIPAddressesClient.NewListPager method.
type PublicIPAddressesClientListOptions struct {
	// placeholder for future optional parameters
}

// PublicIPAddressesClientListVirtualMachineScaleSetPublicIPAddressesOptions contains the optional parameters for the PublicIPAddressesClient.NewListVirtualMachineScaleSetPublicIPAddressesPager
// method.
type PublicIPAddressesClientListVirtualMachineScaleSetPublicIPAddressesOptions struct {
	// placeholder for future optional parameters
}

// PublicIPAddressesClientListVirtualMachineScaleSetVMPublicIPAddressesOptions contains the optional parameters for the PublicIPAddressesClient.NewListVirtualMachineScaleSetVMPublicIPAddressesPager
// method.
type PublicIPAddressesClientListVirtualMachineScaleSetVMPublicIPAddressesOptions struct {
	// placeholder for future optional parameters
}

// PublicIPAddressesClientUpdateTagsOptions contains the optional parameters for the PublicIPAddressesClient.UpdateTags method.
type PublicIPAddressesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// PublicIPPrefixesClientBeginCreateOrUpdateOptions contains the optional parameters for the PublicIPPrefixesClient.BeginCreateOrUpdate
// method.
type PublicIPPrefixesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PublicIPPrefixesClientBeginDeleteOptions contains the optional parameters for the PublicIPPrefixesClient.BeginDelete method.
type PublicIPPrefixesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// PublicIPPrefixesClientGetOptions contains the optional parameters for the PublicIPPrefixesClient.Get method.
type PublicIPPrefixesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// PublicIPPrefixesClientListAllOptions contains the optional parameters for the PublicIPPrefixesClient.NewListAllPager method.
type PublicIPPrefixesClientListAllOptions struct {
	// placeholder for future optional parameters
}

// PublicIPPrefixesClientListOptions contains the optional parameters for the PublicIPPrefixesClient.NewListPager method.
type PublicIPPrefixesClientListOptions struct {
	// placeholder for future optional parameters
}

// PublicIPPrefixesClientUpdateTagsOptions contains the optional parameters for the PublicIPPrefixesClient.UpdateTags method.
type PublicIPPrefixesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ResourceNavigationLinksClientListOptions contains the optional parameters for the ResourceNavigationLinksClient.List method.
type ResourceNavigationLinksClientListOptions struct {
	// placeholder for future optional parameters
}

// RouteFilterRulesClientBeginCreateOrUpdateOptions contains the optional parameters for the RouteFilterRulesClient.BeginCreateOrUpdate
// method.
type RouteFilterRulesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RouteFilterRulesClientBeginDeleteOptions contains the optional parameters for the RouteFilterRulesClient.BeginDelete method.
type RouteFilterRulesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RouteFilterRulesClientGetOptions contains the optional parameters for the RouteFilterRulesClient.Get method.
type RouteFilterRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// RouteFilterRulesClientListByRouteFilterOptions contains the optional parameters for the RouteFilterRulesClient.NewListByRouteFilterPager
// method.
type RouteFilterRulesClientListByRouteFilterOptions struct {
	// placeholder for future optional parameters
}

// RouteFiltersClientBeginCreateOrUpdateOptions contains the optional parameters for the RouteFiltersClient.BeginCreateOrUpdate
// method.
type RouteFiltersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RouteFiltersClientBeginDeleteOptions contains the optional parameters for the RouteFiltersClient.BeginDelete method.
type RouteFiltersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RouteFiltersClientGetOptions contains the optional parameters for the RouteFiltersClient.Get method.
type RouteFiltersClientGetOptions struct {
	// Expands referenced express route bgp peering resources.
	Expand *string
}

// RouteFiltersClientListByResourceGroupOptions contains the optional parameters for the RouteFiltersClient.NewListByResourceGroupPager
// method.
type RouteFiltersClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// RouteFiltersClientListOptions contains the optional parameters for the RouteFiltersClient.NewListPager method.
type RouteFiltersClientListOptions struct {
	// placeholder for future optional parameters
}

// RouteFiltersClientUpdateTagsOptions contains the optional parameters for the RouteFiltersClient.UpdateTags method.
type RouteFiltersClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// RouteMapsClientBeginCreateOrUpdateOptions contains the optional parameters for the RouteMapsClient.BeginCreateOrUpdate
// method.
type RouteMapsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RouteMapsClientBeginDeleteOptions contains the optional parameters for the RouteMapsClient.BeginDelete method.
type RouteMapsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RouteMapsClientGetOptions contains the optional parameters for the RouteMapsClient.Get method.
type RouteMapsClientGetOptions struct {
	// placeholder for future optional parameters
}

// RouteMapsClientListOptions contains the optional parameters for the RouteMapsClient.NewListPager method.
type RouteMapsClientListOptions struct {
	// placeholder for future optional parameters
}

// RouteTablesClientBeginCreateOrUpdateOptions contains the optional parameters for the RouteTablesClient.BeginCreateOrUpdate
// method.
type RouteTablesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RouteTablesClientBeginDeleteOptions contains the optional parameters for the RouteTablesClient.BeginDelete method.
type RouteTablesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RouteTablesClientGetOptions contains the optional parameters for the RouteTablesClient.Get method.
type RouteTablesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// RouteTablesClientListAllOptions contains the optional parameters for the RouteTablesClient.NewListAllPager method.
type RouteTablesClientListAllOptions struct {
	// placeholder for future optional parameters
}

// RouteTablesClientListOptions contains the optional parameters for the RouteTablesClient.NewListPager method.
type RouteTablesClientListOptions struct {
	// placeholder for future optional parameters
}

// RouteTablesClientUpdateTagsOptions contains the optional parameters for the RouteTablesClient.UpdateTags method.
type RouteTablesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// RoutesClientBeginCreateOrUpdateOptions contains the optional parameters for the RoutesClient.BeginCreateOrUpdate method.
type RoutesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RoutesClientBeginDeleteOptions contains the optional parameters for the RoutesClient.BeginDelete method.
type RoutesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RoutesClientGetOptions contains the optional parameters for the RoutesClient.Get method.
type RoutesClientGetOptions struct {
	// placeholder for future optional parameters
}

// RoutesClientListOptions contains the optional parameters for the RoutesClient.NewListPager method.
type RoutesClientListOptions struct {
	// placeholder for future optional parameters
}

// RoutingIntentClientBeginCreateOrUpdateOptions contains the optional parameters for the RoutingIntentClient.BeginCreateOrUpdate
// method.
type RoutingIntentClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RoutingIntentClientBeginDeleteOptions contains the optional parameters for the RoutingIntentClient.BeginDelete method.
type RoutingIntentClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// RoutingIntentClientGetOptions contains the optional parameters for the RoutingIntentClient.Get method.
type RoutingIntentClientGetOptions struct {
	// placeholder for future optional parameters
}

// RoutingIntentClientListOptions contains the optional parameters for the RoutingIntentClient.NewListPager method.
type RoutingIntentClientListOptions struct {
	// placeholder for future optional parameters
}

// ScopeConnectionsClientCreateOrUpdateOptions contains the optional parameters for the ScopeConnectionsClient.CreateOrUpdate
// method.
type ScopeConnectionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// ScopeConnectionsClientDeleteOptions contains the optional parameters for the ScopeConnectionsClient.Delete method.
type ScopeConnectionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// ScopeConnectionsClientGetOptions contains the optional parameters for the ScopeConnectionsClient.Get method.
type ScopeConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ScopeConnectionsClientListOptions contains the optional parameters for the ScopeConnectionsClient.NewListPager method.
type ScopeConnectionsClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// SecurityAdminConfigurationsClientBeginDeleteOptions contains the optional parameters for the SecurityAdminConfigurationsClient.BeginDelete
// method.
type SecurityAdminConfigurationsClientBeginDeleteOptions struct {
	// Deletes the resource even if it is part of a deployed configuration. If the configuration has been deployed, the service
	// will do a cleanup deployment in the background, prior to the delete.
	Force *bool

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecurityAdminConfigurationsClientCreateOrUpdateOptions contains the optional parameters for the SecurityAdminConfigurationsClient.CreateOrUpdate
// method.
type SecurityAdminConfigurationsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SecurityAdminConfigurationsClientGetOptions contains the optional parameters for the SecurityAdminConfigurationsClient.Get
// method.
type SecurityAdminConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SecurityAdminConfigurationsClientListOptions contains the optional parameters for the SecurityAdminConfigurationsClient.NewListPager
// method.
type SecurityAdminConfigurationsClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// SecurityGroupsClientBeginCreateOrUpdateOptions contains the optional parameters for the SecurityGroupsClient.BeginCreateOrUpdate
// method.
type SecurityGroupsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecurityGroupsClientBeginDeleteOptions contains the optional parameters for the SecurityGroupsClient.BeginDelete method.
type SecurityGroupsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecurityGroupsClientGetOptions contains the optional parameters for the SecurityGroupsClient.Get method.
type SecurityGroupsClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// SecurityGroupsClientListAllOptions contains the optional parameters for the SecurityGroupsClient.NewListAllPager method.
type SecurityGroupsClientListAllOptions struct {
	// placeholder for future optional parameters
}

// SecurityGroupsClientListOptions contains the optional parameters for the SecurityGroupsClient.NewListPager method.
type SecurityGroupsClientListOptions struct {
	// placeholder for future optional parameters
}

// SecurityGroupsClientUpdateTagsOptions contains the optional parameters for the SecurityGroupsClient.UpdateTags method.
type SecurityGroupsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// SecurityPartnerProvidersClientBeginCreateOrUpdateOptions contains the optional parameters for the SecurityPartnerProvidersClient.BeginCreateOrUpdate
// method.
type SecurityPartnerProvidersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecurityPartnerProvidersClientBeginDeleteOptions contains the optional parameters for the SecurityPartnerProvidersClient.BeginDelete
// method.
type SecurityPartnerProvidersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecurityPartnerProvidersClientGetOptions contains the optional parameters for the SecurityPartnerProvidersClient.Get method.
type SecurityPartnerProvidersClientGetOptions struct {
	// placeholder for future optional parameters
}

// SecurityPartnerProvidersClientListByResourceGroupOptions contains the optional parameters for the SecurityPartnerProvidersClient.NewListByResourceGroupPager
// method.
type SecurityPartnerProvidersClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// SecurityPartnerProvidersClientListOptions contains the optional parameters for the SecurityPartnerProvidersClient.NewListPager
// method.
type SecurityPartnerProvidersClientListOptions struct {
	// placeholder for future optional parameters
}

// SecurityPartnerProvidersClientUpdateTagsOptions contains the optional parameters for the SecurityPartnerProvidersClient.UpdateTags
// method.
type SecurityPartnerProvidersClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// SecurityRulesClientBeginCreateOrUpdateOptions contains the optional parameters for the SecurityRulesClient.BeginCreateOrUpdate
// method.
type SecurityRulesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecurityRulesClientBeginDeleteOptions contains the optional parameters for the SecurityRulesClient.BeginDelete method.
type SecurityRulesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SecurityRulesClientGetOptions contains the optional parameters for the SecurityRulesClient.Get method.
type SecurityRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// SecurityRulesClientListOptions contains the optional parameters for the SecurityRulesClient.NewListPager method.
type SecurityRulesClientListOptions struct {
	// placeholder for future optional parameters
}

// ServiceAssociationLinksClientListOptions contains the optional parameters for the ServiceAssociationLinksClient.List method.
type ServiceAssociationLinksClientListOptions struct {
	// placeholder for future optional parameters
}

// ServiceEndpointPoliciesClientBeginCreateOrUpdateOptions contains the optional parameters for the ServiceEndpointPoliciesClient.BeginCreateOrUpdate
// method.
type ServiceEndpointPoliciesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceEndpointPoliciesClientBeginDeleteOptions contains the optional parameters for the ServiceEndpointPoliciesClient.BeginDelete
// method.
type ServiceEndpointPoliciesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceEndpointPoliciesClientGetOptions contains the optional parameters for the ServiceEndpointPoliciesClient.Get method.
type ServiceEndpointPoliciesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// ServiceEndpointPoliciesClientListByResourceGroupOptions contains the optional parameters for the ServiceEndpointPoliciesClient.NewListByResourceGroupPager
// method.
type ServiceEndpointPoliciesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ServiceEndpointPoliciesClientListOptions contains the optional parameters for the ServiceEndpointPoliciesClient.NewListPager
// method.
type ServiceEndpointPoliciesClientListOptions struct {
	// placeholder for future optional parameters
}

// ServiceEndpointPoliciesClientUpdateTagsOptions contains the optional parameters for the ServiceEndpointPoliciesClient.UpdateTags
// method.
type ServiceEndpointPoliciesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// ServiceEndpointPolicyDefinitionsClientBeginCreateOrUpdateOptions contains the optional parameters for the ServiceEndpointPolicyDefinitionsClient.BeginCreateOrUpdate
// method.
type ServiceEndpointPolicyDefinitionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceEndpointPolicyDefinitionsClientBeginDeleteOptions contains the optional parameters for the ServiceEndpointPolicyDefinitionsClient.BeginDelete
// method.
type ServiceEndpointPolicyDefinitionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// ServiceEndpointPolicyDefinitionsClientGetOptions contains the optional parameters for the ServiceEndpointPolicyDefinitionsClient.Get
// method.
type ServiceEndpointPolicyDefinitionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// ServiceEndpointPolicyDefinitionsClientListByResourceGroupOptions contains the optional parameters for the ServiceEndpointPolicyDefinitionsClient.NewListByResourceGroupPager
// method.
type ServiceEndpointPolicyDefinitionsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// ServiceTagInformationClientListOptions contains the optional parameters for the ServiceTagInformationClient.NewListPager
// method.
type ServiceTagInformationClientListOptions struct {
	// Do not return address prefixes for the tag(s).
	NoAddressPrefixes *bool

	// Return tag information for a particular tag.
	TagName *string
}

// ServiceTagsClientListOptions contains the optional parameters for the ServiceTagsClient.List method.
type ServiceTagsClientListOptions struct {
	// placeholder for future optional parameters
}

// StaticMembersClientCreateOrUpdateOptions contains the optional parameters for the StaticMembersClient.CreateOrUpdate method.
type StaticMembersClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// StaticMembersClientDeleteOptions contains the optional parameters for the StaticMembersClient.Delete method.
type StaticMembersClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// StaticMembersClientGetOptions contains the optional parameters for the StaticMembersClient.Get method.
type StaticMembersClientGetOptions struct {
	// placeholder for future optional parameters
}

// StaticMembersClientListOptions contains the optional parameters for the StaticMembersClient.NewListPager method.
type StaticMembersClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// SubnetsClientBeginCreateOrUpdateOptions contains the optional parameters for the SubnetsClient.BeginCreateOrUpdate method.
type SubnetsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SubnetsClientBeginDeleteOptions contains the optional parameters for the SubnetsClient.BeginDelete method.
type SubnetsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SubnetsClientBeginPrepareNetworkPoliciesOptions contains the optional parameters for the SubnetsClient.BeginPrepareNetworkPolicies
// method.
type SubnetsClientBeginPrepareNetworkPoliciesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SubnetsClientBeginUnprepareNetworkPoliciesOptions contains the optional parameters for the SubnetsClient.BeginUnprepareNetworkPolicies
// method.
type SubnetsClientBeginUnprepareNetworkPoliciesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// SubnetsClientGetOptions contains the optional parameters for the SubnetsClient.Get method.
type SubnetsClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// SubnetsClientListOptions contains the optional parameters for the SubnetsClient.NewListPager method.
type SubnetsClientListOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionNetworkManagerConnectionsClientCreateOrUpdateOptions contains the optional parameters for the SubscriptionNetworkManagerConnectionsClient.CreateOrUpdate
// method.
type SubscriptionNetworkManagerConnectionsClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionNetworkManagerConnectionsClientDeleteOptions contains the optional parameters for the SubscriptionNetworkManagerConnectionsClient.Delete
// method.
type SubscriptionNetworkManagerConnectionsClientDeleteOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionNetworkManagerConnectionsClientGetOptions contains the optional parameters for the SubscriptionNetworkManagerConnectionsClient.Get
// method.
type SubscriptionNetworkManagerConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// SubscriptionNetworkManagerConnectionsClientListOptions contains the optional parameters for the SubscriptionNetworkManagerConnectionsClient.NewListPager
// method.
type SubscriptionNetworkManagerConnectionsClientListOptions struct {
	// SkipToken is only used if a previous operation returned a partial result. If a previous response contains a nextLink element,
	// the value of the nextLink element will include a skipToken parameter that
	// specifies a starting point to use for subsequent calls.
	SkipToken *string

	// An optional query parameter which specifies the maximum number of records to be returned by the server.
	Top *int32
}

// UsagesClientListOptions contains the optional parameters for the UsagesClient.NewListPager method.
type UsagesClientListOptions struct {
	// placeholder for future optional parameters
}

// VPNConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the VPNConnectionsClient.BeginCreateOrUpdate
// method.
type VPNConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNConnectionsClientBeginDeleteOptions contains the optional parameters for the VPNConnectionsClient.BeginDelete method.
type VPNConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNConnectionsClientBeginStartPacketCaptureOptions contains the optional parameters for the VPNConnectionsClient.BeginStartPacketCapture
// method.
type VPNConnectionsClientBeginStartPacketCaptureOptions struct {
	// Vpn Connection packet capture parameters supplied to start packet capture on gateway connection.
	Parameters *VPNConnectionPacketCaptureStartParameters

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNConnectionsClientBeginStopPacketCaptureOptions contains the optional parameters for the VPNConnectionsClient.BeginStopPacketCapture
// method.
type VPNConnectionsClientBeginStopPacketCaptureOptions struct {
	// Vpn Connection packet capture parameters supplied to stop packet capture on gateway connection.
	Parameters *VPNConnectionPacketCaptureStopParameters

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNConnectionsClientGetOptions contains the optional parameters for the VPNConnectionsClient.Get method.
type VPNConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VPNConnectionsClientListByVPNGatewayOptions contains the optional parameters for the VPNConnectionsClient.NewListByVPNGatewayPager
// method.
type VPNConnectionsClientListByVPNGatewayOptions struct {
	// placeholder for future optional parameters
}

// VPNGatewaysClientBeginCreateOrUpdateOptions contains the optional parameters for the VPNGatewaysClient.BeginCreateOrUpdate
// method.
type VPNGatewaysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNGatewaysClientBeginDeleteOptions contains the optional parameters for the VPNGatewaysClient.BeginDelete method.
type VPNGatewaysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNGatewaysClientBeginResetOptions contains the optional parameters for the VPNGatewaysClient.BeginReset method.
type VPNGatewaysClientBeginResetOptions struct {
	// VpnGateway ipConfigurationId to specify the gateway instance.
	IPConfigurationID *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNGatewaysClientBeginStartPacketCaptureOptions contains the optional parameters for the VPNGatewaysClient.BeginStartPacketCapture
// method.
type VPNGatewaysClientBeginStartPacketCaptureOptions struct {
	// Vpn gateway packet capture parameters supplied to start packet capture on vpn gateway.
	Parameters *VPNGatewayPacketCaptureStartParameters

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNGatewaysClientBeginStopPacketCaptureOptions contains the optional parameters for the VPNGatewaysClient.BeginStopPacketCapture
// method.
type VPNGatewaysClientBeginStopPacketCaptureOptions struct {
	// Vpn gateway packet capture parameters supplied to stop packet capture on vpn gateway.
	Parameters *VPNGatewayPacketCaptureStopParameters

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNGatewaysClientBeginUpdateTagsOptions contains the optional parameters for the VPNGatewaysClient.BeginUpdateTags method.
type VPNGatewaysClientBeginUpdateTagsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNGatewaysClientGetOptions contains the optional parameters for the VPNGatewaysClient.Get method.
type VPNGatewaysClientGetOptions struct {
	// placeholder for future optional parameters
}

// VPNGatewaysClientListByResourceGroupOptions contains the optional parameters for the VPNGatewaysClient.NewListByResourceGroupPager
// method.
type VPNGatewaysClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VPNGatewaysClientListOptions contains the optional parameters for the VPNGatewaysClient.NewListPager method.
type VPNGatewaysClientListOptions struct {
	// placeholder for future optional parameters
}

// VPNLinkConnectionsClientBeginGetIkeSasOptions contains the optional parameters for the VPNLinkConnectionsClient.BeginGetIkeSas
// method.
type VPNLinkConnectionsClientBeginGetIkeSasOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNLinkConnectionsClientBeginResetConnectionOptions contains the optional parameters for the VPNLinkConnectionsClient.BeginResetConnection
// method.
type VPNLinkConnectionsClientBeginResetConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNLinkConnectionsClientListByVPNConnectionOptions contains the optional parameters for the VPNLinkConnectionsClient.NewListByVPNConnectionPager
// method.
type VPNLinkConnectionsClientListByVPNConnectionOptions struct {
	// placeholder for future optional parameters
}

// VPNServerConfigurationsAssociatedWithVirtualWanClientBeginListOptions contains the optional parameters for the VPNServerConfigurationsAssociatedWithVirtualWanClient.BeginList
// method.
type VPNServerConfigurationsAssociatedWithVirtualWanClientBeginListOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNServerConfigurationsClientBeginCreateOrUpdateOptions contains the optional parameters for the VPNServerConfigurationsClient.BeginCreateOrUpdate
// method.
type VPNServerConfigurationsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNServerConfigurationsClientBeginDeleteOptions contains the optional parameters for the VPNServerConfigurationsClient.BeginDelete
// method.
type VPNServerConfigurationsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNServerConfigurationsClientGetOptions contains the optional parameters for the VPNServerConfigurationsClient.Get method.
type VPNServerConfigurationsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VPNServerConfigurationsClientListByResourceGroupOptions contains the optional parameters for the VPNServerConfigurationsClient.NewListByResourceGroupPager
// method.
type VPNServerConfigurationsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VPNServerConfigurationsClientListOptions contains the optional parameters for the VPNServerConfigurationsClient.NewListPager
// method.
type VPNServerConfigurationsClientListOptions struct {
	// placeholder for future optional parameters
}

// VPNServerConfigurationsClientUpdateTagsOptions contains the optional parameters for the VPNServerConfigurationsClient.UpdateTags
// method.
type VPNServerConfigurationsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// VPNSiteLinkConnectionsClientGetOptions contains the optional parameters for the VPNSiteLinkConnectionsClient.Get method.
type VPNSiteLinkConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VPNSiteLinksClientGetOptions contains the optional parameters for the VPNSiteLinksClient.Get method.
type VPNSiteLinksClientGetOptions struct {
	// placeholder for future optional parameters
}

// VPNSiteLinksClientListByVPNSiteOptions contains the optional parameters for the VPNSiteLinksClient.NewListByVPNSitePager
// method.
type VPNSiteLinksClientListByVPNSiteOptions struct {
	// placeholder for future optional parameters
}

// VPNSitesClientBeginCreateOrUpdateOptions contains the optional parameters for the VPNSitesClient.BeginCreateOrUpdate method.
type VPNSitesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNSitesClientBeginDeleteOptions contains the optional parameters for the VPNSitesClient.BeginDelete method.
type VPNSitesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VPNSitesClientGetOptions contains the optional parameters for the VPNSitesClient.Get method.
type VPNSitesClientGetOptions struct {
	// placeholder for future optional parameters
}

// VPNSitesClientListByResourceGroupOptions contains the optional parameters for the VPNSitesClient.NewListByResourceGroupPager
// method.
type VPNSitesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VPNSitesClientListOptions contains the optional parameters for the VPNSitesClient.NewListPager method.
type VPNSitesClientListOptions struct {
	// placeholder for future optional parameters
}

// VPNSitesClientUpdateTagsOptions contains the optional parameters for the VPNSitesClient.UpdateTags method.
type VPNSitesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// VPNSitesConfigurationClientBeginDownloadOptions contains the optional parameters for the VPNSitesConfigurationClient.BeginDownload
// method.
type VPNSitesConfigurationClientBeginDownloadOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VipSwapClientBeginCreateOptions contains the optional parameters for the VipSwapClient.BeginCreate method.
type VipSwapClientBeginCreateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VipSwapClientGetOptions contains the optional parameters for the VipSwapClient.Get method.
type VipSwapClientGetOptions struct {
	// placeholder for future optional parameters
}

// VipSwapClientListOptions contains the optional parameters for the VipSwapClient.List method.
type VipSwapClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualApplianceConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualApplianceConnectionsClient.BeginCreateOrUpdate
// method.
type VirtualApplianceConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualApplianceConnectionsClientBeginDeleteOptions contains the optional parameters for the VirtualApplianceConnectionsClient.BeginDelete
// method.
type VirtualApplianceConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualApplianceConnectionsClientGetOptions contains the optional parameters for the VirtualApplianceConnectionsClient.Get
// method.
type VirtualApplianceConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualApplianceConnectionsClientListOptions contains the optional parameters for the VirtualApplianceConnectionsClient.NewListPager
// method.
type VirtualApplianceConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualApplianceSKUsClientGetOptions contains the optional parameters for the VirtualApplianceSKUsClient.Get method.
type VirtualApplianceSKUsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualApplianceSKUsClientListOptions contains the optional parameters for the VirtualApplianceSKUsClient.NewListPager
// method.
type VirtualApplianceSKUsClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualApplianceSitesClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualApplianceSitesClient.BeginCreateOrUpdate
// method.
type VirtualApplianceSitesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualApplianceSitesClientBeginDeleteOptions contains the optional parameters for the VirtualApplianceSitesClient.BeginDelete
// method.
type VirtualApplianceSitesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualApplianceSitesClientGetOptions contains the optional parameters for the VirtualApplianceSitesClient.Get method.
type VirtualApplianceSitesClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualApplianceSitesClientListOptions contains the optional parameters for the VirtualApplianceSitesClient.NewListPager
// method.
type VirtualApplianceSitesClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualAppliancesClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualAppliancesClient.BeginCreateOrUpdate
// method.
type VirtualAppliancesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualAppliancesClientBeginDeleteOptions contains the optional parameters for the VirtualAppliancesClient.BeginDelete
// method.
type VirtualAppliancesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualAppliancesClientGetOptions contains the optional parameters for the VirtualAppliancesClient.Get method.
type VirtualAppliancesClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// VirtualAppliancesClientListByResourceGroupOptions contains the optional parameters for the VirtualAppliancesClient.NewListByResourceGroupPager
// method.
type VirtualAppliancesClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VirtualAppliancesClientListOptions contains the optional parameters for the VirtualAppliancesClient.NewListPager method.
type VirtualAppliancesClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualAppliancesClientUpdateTagsOptions contains the optional parameters for the VirtualAppliancesClient.UpdateTags method.
type VirtualAppliancesClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubBgpConnectionClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualHubBgpConnectionClient.BeginCreateOrUpdate
// method.
type VirtualHubBgpConnectionClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubBgpConnectionClientBeginDeleteOptions contains the optional parameters for the VirtualHubBgpConnectionClient.BeginDelete
// method.
type VirtualHubBgpConnectionClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubBgpConnectionClientGetOptions contains the optional parameters for the VirtualHubBgpConnectionClient.Get method.
type VirtualHubBgpConnectionClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubBgpConnectionsClientBeginListAdvertisedRoutesOptions contains the optional parameters for the VirtualHubBgpConnectionsClient.BeginListAdvertisedRoutes
// method.
type VirtualHubBgpConnectionsClientBeginListAdvertisedRoutesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubBgpConnectionsClientBeginListLearnedRoutesOptions contains the optional parameters for the VirtualHubBgpConnectionsClient.BeginListLearnedRoutes
// method.
type VirtualHubBgpConnectionsClientBeginListLearnedRoutesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubBgpConnectionsClientListOptions contains the optional parameters for the VirtualHubBgpConnectionsClient.NewListPager
// method.
type VirtualHubBgpConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubIPConfigurationClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualHubIPConfigurationClient.BeginCreateOrUpdate
// method.
type VirtualHubIPConfigurationClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubIPConfigurationClientBeginDeleteOptions contains the optional parameters for the VirtualHubIPConfigurationClient.BeginDelete
// method.
type VirtualHubIPConfigurationClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubIPConfigurationClientGetOptions contains the optional parameters for the VirtualHubIPConfigurationClient.Get
// method.
type VirtualHubIPConfigurationClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubIPConfigurationClientListOptions contains the optional parameters for the VirtualHubIPConfigurationClient.NewListPager
// method.
type VirtualHubIPConfigurationClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubRouteTableV2SClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualHubRouteTableV2SClient.BeginCreateOrUpdate
// method.
type VirtualHubRouteTableV2SClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubRouteTableV2SClientBeginDeleteOptions contains the optional parameters for the VirtualHubRouteTableV2SClient.BeginDelete
// method.
type VirtualHubRouteTableV2SClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubRouteTableV2SClientGetOptions contains the optional parameters for the VirtualHubRouteTableV2SClient.Get method.
type VirtualHubRouteTableV2SClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubRouteTableV2SClientListOptions contains the optional parameters for the VirtualHubRouteTableV2SClient.NewListPager
// method.
type VirtualHubRouteTableV2SClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubsClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualHubsClient.BeginCreateOrUpdate
// method.
type VirtualHubsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubsClientBeginDeleteOptions contains the optional parameters for the VirtualHubsClient.BeginDelete method.
type VirtualHubsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubsClientBeginGetEffectiveVirtualHubRoutesOptions contains the optional parameters for the VirtualHubsClient.BeginGetEffectiveVirtualHubRoutes
// method.
type VirtualHubsClientBeginGetEffectiveVirtualHubRoutesOptions struct {
	// Parameters supplied to get the effective routes for a specific resource.
	EffectiveRoutesParameters *EffectiveRoutesParameters

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubsClientBeginGetInboundRoutesOptions contains the optional parameters for the VirtualHubsClient.BeginGetInboundRoutes
// method.
type VirtualHubsClientBeginGetInboundRoutesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubsClientBeginGetOutboundRoutesOptions contains the optional parameters for the VirtualHubsClient.BeginGetOutboundRoutes
// method.
type VirtualHubsClientBeginGetOutboundRoutesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualHubsClientGetOptions contains the optional parameters for the VirtualHubsClient.Get method.
type VirtualHubsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubsClientListByResourceGroupOptions contains the optional parameters for the VirtualHubsClient.NewListByResourceGroupPager
// method.
type VirtualHubsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubsClientListOptions contains the optional parameters for the VirtualHubsClient.NewListPager method.
type VirtualHubsClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualHubsClientUpdateTagsOptions contains the optional parameters for the VirtualHubsClient.UpdateTags method.
type VirtualHubsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewayConnectionsClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginCreateOrUpdate
// method.
type VirtualNetworkGatewayConnectionsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientBeginDeleteOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginDelete
// method.
type VirtualNetworkGatewayConnectionsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientBeginGetIkeSasOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginGetIkeSas
// method.
type VirtualNetworkGatewayConnectionsClientBeginGetIkeSasOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientBeginResetConnectionOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginResetConnection
// method.
type VirtualNetworkGatewayConnectionsClientBeginResetConnectionOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientBeginResetSharedKeyOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginResetSharedKey
// method.
type VirtualNetworkGatewayConnectionsClientBeginResetSharedKeyOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientBeginSetSharedKeyOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginSetSharedKey
// method.
type VirtualNetworkGatewayConnectionsClientBeginSetSharedKeyOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientBeginStartPacketCaptureOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginStartPacketCapture
// method.
type VirtualNetworkGatewayConnectionsClientBeginStartPacketCaptureOptions struct {
	// Virtual network gateway packet capture parameters supplied to start packet capture on gateway connection.
	Parameters *VPNPacketCaptureStartParameters

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientBeginStopPacketCaptureOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginStopPacketCapture
// method.
type VirtualNetworkGatewayConnectionsClientBeginStopPacketCaptureOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientBeginUpdateTagsOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.BeginUpdateTags
// method.
type VirtualNetworkGatewayConnectionsClientBeginUpdateTagsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayConnectionsClientGetOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.Get
// method.
type VirtualNetworkGatewayConnectionsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewayConnectionsClientGetSharedKeyOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.GetSharedKey
// method.
type VirtualNetworkGatewayConnectionsClientGetSharedKeyOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewayConnectionsClientListOptions contains the optional parameters for the VirtualNetworkGatewayConnectionsClient.NewListPager
// method.
type VirtualNetworkGatewayConnectionsClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewayNatRulesClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworkGatewayNatRulesClient.BeginCreateOrUpdate
// method.
type VirtualNetworkGatewayNatRulesClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayNatRulesClientBeginDeleteOptions contains the optional parameters for the VirtualNetworkGatewayNatRulesClient.BeginDelete
// method.
type VirtualNetworkGatewayNatRulesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewayNatRulesClientGetOptions contains the optional parameters for the VirtualNetworkGatewayNatRulesClient.Get
// method.
type VirtualNetworkGatewayNatRulesClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewayNatRulesClientListByVirtualNetworkGatewayOptions contains the optional parameters for the VirtualNetworkGatewayNatRulesClient.NewListByVirtualNetworkGatewayPager
// method.
type VirtualNetworkGatewayNatRulesClientListByVirtualNetworkGatewayOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewaysClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginCreateOrUpdate
// method.
type VirtualNetworkGatewaysClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginDeleteOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginDelete
// method.
type VirtualNetworkGatewaysClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginDisconnectVirtualNetworkGatewayVPNConnectionsOptions contains the optional parameters
// for the VirtualNetworkGatewaysClient.BeginDisconnectVirtualNetworkGatewayVPNConnections method.
type VirtualNetworkGatewaysClientBeginDisconnectVirtualNetworkGatewayVPNConnectionsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginGenerateVPNProfileOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginGenerateVPNProfile
// method.
type VirtualNetworkGatewaysClientBeginGenerateVPNProfileOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginGeneratevpnclientpackageOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginGeneratevpnclientpackage
// method.
type VirtualNetworkGatewaysClientBeginGeneratevpnclientpackageOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginGetAdvertisedRoutesOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginGetAdvertisedRoutes
// method.
type VirtualNetworkGatewaysClientBeginGetAdvertisedRoutesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginGetBgpPeerStatusOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginGetBgpPeerStatus
// method.
type VirtualNetworkGatewaysClientBeginGetBgpPeerStatusOptions struct {
	// The IP address of the peer to retrieve the status of.
	Peer *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginGetLearnedRoutesOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginGetLearnedRoutes
// method.
type VirtualNetworkGatewaysClientBeginGetLearnedRoutesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginGetVPNProfilePackageURLOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginGetVPNProfilePackageURL
// method.
type VirtualNetworkGatewaysClientBeginGetVPNProfilePackageURLOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginGetVpnclientConnectionHealthOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginGetVpnclientConnectionHealth
// method.
type VirtualNetworkGatewaysClientBeginGetVpnclientConnectionHealthOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginGetVpnclientIPSecParametersOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginGetVpnclientIPSecParameters
// method.
type VirtualNetworkGatewaysClientBeginGetVpnclientIPSecParametersOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginResetOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginReset
// method.
type VirtualNetworkGatewaysClientBeginResetOptions struct {
	// Virtual network gateway vip address supplied to the begin reset of the active-active feature enabled gateway.
	GatewayVip *string

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginResetVPNClientSharedKeyOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginResetVPNClientSharedKey
// method.
type VirtualNetworkGatewaysClientBeginResetVPNClientSharedKeyOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginSetVpnclientIPSecParametersOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginSetVpnclientIPSecParameters
// method.
type VirtualNetworkGatewaysClientBeginSetVpnclientIPSecParametersOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginStartPacketCaptureOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginStartPacketCapture
// method.
type VirtualNetworkGatewaysClientBeginStartPacketCaptureOptions struct {
	// Virtual network gateway packet capture parameters supplied to start packet capture on gateway.
	Parameters *VPNPacketCaptureStartParameters

	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginStopPacketCaptureOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginStopPacketCapture
// method.
type VirtualNetworkGatewaysClientBeginStopPacketCaptureOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientBeginUpdateTagsOptions contains the optional parameters for the VirtualNetworkGatewaysClient.BeginUpdateTags
// method.
type VirtualNetworkGatewaysClientBeginUpdateTagsOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkGatewaysClientGetOptions contains the optional parameters for the VirtualNetworkGatewaysClient.Get method.
type VirtualNetworkGatewaysClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewaysClientListConnectionsOptions contains the optional parameters for the VirtualNetworkGatewaysClient.NewListConnectionsPager
// method.
type VirtualNetworkGatewaysClientListConnectionsOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewaysClientListOptions contains the optional parameters for the VirtualNetworkGatewaysClient.NewListPager
// method.
type VirtualNetworkGatewaysClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewaysClientSupportedVPNDevicesOptions contains the optional parameters for the VirtualNetworkGatewaysClient.SupportedVPNDevices
// method.
type VirtualNetworkGatewaysClientSupportedVPNDevicesOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkGatewaysClientVPNDeviceConfigurationScriptOptions contains the optional parameters for the VirtualNetworkGatewaysClient.VPNDeviceConfigurationScript
// method.
type VirtualNetworkGatewaysClientVPNDeviceConfigurationScriptOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkPeeringsClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworkPeeringsClient.BeginCreateOrUpdate
// method.
type VirtualNetworkPeeringsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string

	// Parameter indicates the intention to sync the peering with the current address space on the remote vNet after it's updated.
	SyncRemoteAddressSpace *SyncRemoteAddressSpace
}

// VirtualNetworkPeeringsClientBeginDeleteOptions contains the optional parameters for the VirtualNetworkPeeringsClient.BeginDelete
// method.
type VirtualNetworkPeeringsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkPeeringsClientGetOptions contains the optional parameters for the VirtualNetworkPeeringsClient.Get method.
type VirtualNetworkPeeringsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkPeeringsClientListOptions contains the optional parameters for the VirtualNetworkPeeringsClient.NewListPager
// method.
type VirtualNetworkPeeringsClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkTapsClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworkTapsClient.BeginCreateOrUpdate
// method.
type VirtualNetworkTapsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkTapsClientBeginDeleteOptions contains the optional parameters for the VirtualNetworkTapsClient.BeginDelete
// method.
type VirtualNetworkTapsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworkTapsClientGetOptions contains the optional parameters for the VirtualNetworkTapsClient.Get method.
type VirtualNetworkTapsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkTapsClientListAllOptions contains the optional parameters for the VirtualNetworkTapsClient.NewListAllPager
// method.
type VirtualNetworkTapsClientListAllOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkTapsClientListByResourceGroupOptions contains the optional parameters for the VirtualNetworkTapsClient.NewListByResourceGroupPager
// method.
type VirtualNetworkTapsClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworkTapsClientUpdateTagsOptions contains the optional parameters for the VirtualNetworkTapsClient.UpdateTags
// method.
type VirtualNetworkTapsClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworksClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualNetworksClient.BeginCreateOrUpdate
// method.
type VirtualNetworksClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworksClientBeginDeleteOptions contains the optional parameters for the VirtualNetworksClient.BeginDelete method.
type VirtualNetworksClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualNetworksClientBeginListDdosProtectionStatusOptions contains the optional parameters for the VirtualNetworksClient.BeginListDdosProtectionStatus
// method.
type VirtualNetworksClientBeginListDdosProtectionStatusOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string

	// The skipToken that is given with nextLink.
	SkipToken *string

	// The max number of ip addresses to return.
	Top *int32
}

// VirtualNetworksClientCheckIPAddressAvailabilityOptions contains the optional parameters for the VirtualNetworksClient.CheckIPAddressAvailability
// method.
type VirtualNetworksClientCheckIPAddressAvailabilityOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworksClientGetOptions contains the optional parameters for the VirtualNetworksClient.Get method.
type VirtualNetworksClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// VirtualNetworksClientListAllOptions contains the optional parameters for the VirtualNetworksClient.NewListAllPager method.
type VirtualNetworksClientListAllOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworksClientListOptions contains the optional parameters for the VirtualNetworksClient.NewListPager method.
type VirtualNetworksClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworksClientListUsageOptions contains the optional parameters for the VirtualNetworksClient.NewListUsagePager
// method.
type VirtualNetworksClientListUsageOptions struct {
	// placeholder for future optional parameters
}

// VirtualNetworksClientUpdateTagsOptions contains the optional parameters for the VirtualNetworksClient.UpdateTags method.
type VirtualNetworksClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// VirtualRouterPeeringsClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualRouterPeeringsClient.BeginCreateOrUpdate
// method.
type VirtualRouterPeeringsClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualRouterPeeringsClientBeginDeleteOptions contains the optional parameters for the VirtualRouterPeeringsClient.BeginDelete
// method.
type VirtualRouterPeeringsClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualRouterPeeringsClientGetOptions contains the optional parameters for the VirtualRouterPeeringsClient.Get method.
type VirtualRouterPeeringsClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualRouterPeeringsClientListOptions contains the optional parameters for the VirtualRouterPeeringsClient.NewListPager
// method.
type VirtualRouterPeeringsClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualRoutersClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualRoutersClient.BeginCreateOrUpdate
// method.
type VirtualRoutersClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualRoutersClientBeginDeleteOptions contains the optional parameters for the VirtualRoutersClient.BeginDelete method.
type VirtualRoutersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualRoutersClientGetOptions contains the optional parameters for the VirtualRoutersClient.Get method.
type VirtualRoutersClientGetOptions struct {
	// Expands referenced resources.
	Expand *string
}

// VirtualRoutersClientListByResourceGroupOptions contains the optional parameters for the VirtualRoutersClient.NewListByResourceGroupPager
// method.
type VirtualRoutersClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VirtualRoutersClientListOptions contains the optional parameters for the VirtualRoutersClient.NewListPager method.
type VirtualRoutersClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualWansClientBeginCreateOrUpdateOptions contains the optional parameters for the VirtualWansClient.BeginCreateOrUpdate
// method.
type VirtualWansClientBeginCreateOrUpdateOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualWansClientBeginDeleteOptions contains the optional parameters for the VirtualWansClient.BeginDelete method.
type VirtualWansClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// VirtualWansClientGetOptions contains the optional parameters for the VirtualWansClient.Get method.
type VirtualWansClientGetOptions struct {
	// placeholder for future optional parameters
}

// VirtualWansClientListByResourceGroupOptions contains the optional parameters for the VirtualWansClient.NewListByResourceGroupPager
// method.
type VirtualWansClientListByResourceGroupOptions struct {
	// placeholder for future optional parameters
}

// VirtualWansClientListOptions contains the optional parameters for the VirtualWansClient.NewListPager method.
type VirtualWansClientListOptions struct {
	// placeholder for future optional parameters
}

// VirtualWansClientUpdateTagsOptions contains the optional parameters for the VirtualWansClient.UpdateTags method.
type VirtualWansClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// WatchersClientBeginCheckConnectivityOptions contains the optional parameters for the WatchersClient.BeginCheckConnectivity
// method.
type WatchersClientBeginCheckConnectivityOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginDeleteOptions contains the optional parameters for the WatchersClient.BeginDelete method.
type WatchersClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginGetAzureReachabilityReportOptions contains the optional parameters for the WatchersClient.BeginGetAzureReachabilityReport
// method.
type WatchersClientBeginGetAzureReachabilityReportOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginGetFlowLogStatusOptions contains the optional parameters for the WatchersClient.BeginGetFlowLogStatus
// method.
type WatchersClientBeginGetFlowLogStatusOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginGetNetworkConfigurationDiagnosticOptions contains the optional parameters for the WatchersClient.BeginGetNetworkConfigurationDiagnostic
// method.
type WatchersClientBeginGetNetworkConfigurationDiagnosticOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginGetNextHopOptions contains the optional parameters for the WatchersClient.BeginGetNextHop method.
type WatchersClientBeginGetNextHopOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginGetTroubleshootingOptions contains the optional parameters for the WatchersClient.BeginGetTroubleshooting
// method.
type WatchersClientBeginGetTroubleshootingOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginGetTroubleshootingResultOptions contains the optional parameters for the WatchersClient.BeginGetTroubleshootingResult
// method.
type WatchersClientBeginGetTroubleshootingResultOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginGetVMSecurityRulesOptions contains the optional parameters for the WatchersClient.BeginGetVMSecurityRules
// method.
type WatchersClientBeginGetVMSecurityRulesOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginListAvailableProvidersOptions contains the optional parameters for the WatchersClient.BeginListAvailableProviders
// method.
type WatchersClientBeginListAvailableProvidersOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginSetFlowLogConfigurationOptions contains the optional parameters for the WatchersClient.BeginSetFlowLogConfiguration
// method.
type WatchersClientBeginSetFlowLogConfigurationOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientBeginVerifyIPFlowOptions contains the optional parameters for the WatchersClient.BeginVerifyIPFlow method.
type WatchersClientBeginVerifyIPFlowOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WatchersClientCreateOrUpdateOptions contains the optional parameters for the WatchersClient.CreateOrUpdate method.
type WatchersClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WatchersClientGetOptions contains the optional parameters for the WatchersClient.Get method.
type WatchersClientGetOptions struct {
	// placeholder for future optional parameters
}

// WatchersClientGetTopologyOptions contains the optional parameters for the WatchersClient.GetTopology method.
type WatchersClientGetTopologyOptions struct {
	// placeholder for future optional parameters
}

// WatchersClientListAllOptions contains the optional parameters for the WatchersClient.NewListAllPager method.
type WatchersClientListAllOptions struct {
	// placeholder for future optional parameters
}

// WatchersClientListOptions contains the optional parameters for the WatchersClient.NewListPager method.
type WatchersClientListOptions struct {
	// placeholder for future optional parameters
}

// WatchersClientUpdateTagsOptions contains the optional parameters for the WatchersClient.UpdateTags method.
type WatchersClientUpdateTagsOptions struct {
	// placeholder for future optional parameters
}

// WebApplicationFirewallPoliciesClientBeginDeleteOptions contains the optional parameters for the WebApplicationFirewallPoliciesClient.BeginDelete
// method.
type WebApplicationFirewallPoliciesClientBeginDeleteOptions struct {
	// Resumes the LRO from the provided token.
	ResumeToken string
}

// WebApplicationFirewallPoliciesClientCreateOrUpdateOptions contains the optional parameters for the WebApplicationFirewallPoliciesClient.CreateOrUpdate
// method.
type WebApplicationFirewallPoliciesClientCreateOrUpdateOptions struct {
	// placeholder for future optional parameters
}

// WebApplicationFirewallPoliciesClientGetOptions contains the optional parameters for the WebApplicationFirewallPoliciesClient.Get
// method.
type WebApplicationFirewallPoliciesClientGetOptions struct {
	// placeholder for future optional parameters
}

// WebApplicationFirewallPoliciesClientListAllOptions contains the optional parameters for the WebApplicationFirewallPoliciesClient.NewListAllPager
// method.
type WebApplicationFirewallPoliciesClientListAllOptions struct {
	// placeholder for future optional parameters
}

// WebApplicationFirewallPoliciesClientListOptions contains the optional parameters for the WebApplicationFirewallPoliciesClient.NewListPager
// method.
type WebApplicationFirewallPoliciesClientListOptions struct {
	// placeholder for future optional parameters
}

// WebCategoriesClientGetOptions contains the optional parameters for the WebCategoriesClient.Get method.
type WebCategoriesClientGetOptions struct {
	// Expands resourceIds back referenced by the azureWebCategory resource.
	Expand *string
}

// WebCategoriesClientListBySubscriptionOptions contains the optional parameters for the WebCategoriesClient.NewListBySubscriptionPager
// method.
type WebCategoriesClientListBySubscriptionOptions struct {
	// placeholder for future optional parameters
}
